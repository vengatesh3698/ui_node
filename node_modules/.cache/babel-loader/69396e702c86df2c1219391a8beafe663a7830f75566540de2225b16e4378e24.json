{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { shallowReactive, computed } from \"vue\";\nimport { u as uniqueId } from \"../../vendor-fff696df.mjs\";\nconst modalsStack = shallowReactive([]);\nconst useModalLevel = () => {\n  const modalId = uniqueId();\n  const modalLevel = computed(() => modalsStack.findIndex(({\n    id\n  }) => id === modalId));\n  const registerModal = () => {\n    if (modalLevel.value !== -1) {\n      return;\n    }\n    modalsStack.push({\n      id: modalId\n    });\n  };\n  const unregisterModal = () => {\n    if (modalLevel.value === -1) {\n      return;\n    }\n    modalsStack.splice(modalLevel.value, 1);\n  };\n  const isTopLevelModal = computed(() => modalLevel.value !== -1 && modalLevel.value === modalsStack.length - 1);\n  const isLowestLevelModal = computed(() => modalLevel.value === 0);\n  const isMoreThenOneModalOpen = computed(() => modalsStack.length > 1);\n  return {\n    modalId,\n    modalLevel,\n    registerModal,\n    unregisterModal,\n    isTopLevelModal,\n    isLowestLevelModal,\n    isMoreThenOneModalOpen\n  };\n};\nexport { useModalLevel as u };","map":{"version":3,"names":["modalsStack","shallowReactive","useModalLevel","modalId","uniqueId","modalLevel","computed","findIndex","id","registerModal","value","push","unregisterModal","splice","isTopLevelModal","length","isLowestLevelModal","isMoreThenOneModalOpen"],"sources":["../../../../src/composables/useModalLevel.ts"],"sourcesContent":["import { computed, shallowReactive } from 'vue'\nimport uniqueId from 'lodash/uniqueId.js'\n\nexport type ModalInStack = {\n  id: string;\n  // can add some modal info, methods here\n};\n\nconst modalsStack = shallowReactive<ModalInStack[]>([])\n\nexport const useModalLevel = () => {\n  const modalId = uniqueId()\n  const modalLevel = computed(() =>\n    modalsStack.findIndex(({ id }) => id === modalId),\n  )\n  const registerModal = () => {\n    if (modalLevel.value !== -1) {\n      return\n    }\n\n    modalsStack.push({\n      id: modalId,\n    })\n  }\n  const unregisterModal = () => {\n    if (modalLevel.value === -1) {\n      return\n    }\n\n    modalsStack.splice(modalLevel.value, 1)\n  }\n\n  const isTopLevelModal = computed(\n    () => modalLevel.value !== -1 && modalLevel.value === modalsStack.length - 1,\n  )\n  const isLowestLevelModal = computed(\n    () => modalLevel.value === 0,\n  )\n  const isMoreThenOneModalOpen = computed(() => modalsStack.length > 1)\n\n  return {\n    modalId,\n    modalLevel,\n    registerModal,\n    unregisterModal,\n    isTopLevelModal,\n    isLowestLevelModal,\n    isMoreThenOneModalOpen,\n  }\n}\n"],"mappings":";;;AAQA,MAAMA,WAAA,GAAcC,eAAA,CAAgC,EAAE;AAE/C,MAAMC,aAAA,GAAgBA,CAAA,KAAM;EACjC,MAAMC,OAAA,GAAUC,QAAA;EAChB,MAAMC,UAAA,GAAaC,QAAA,CAAS,MAC1BN,WAAA,CAAYO,SAAA,CAAU,CAAC;IAAEC;EAAG,MAAMA,EAAA,KAAOL,OAAO;EAElD,MAAMM,aAAA,GAAgBA,CAAA,KAAM;IACtB,IAAAJ,UAAA,CAAWK,KAAA,KAAU,IAAI;MAC3B;IACF;IAEAV,WAAA,CAAYW,IAAA,CAAK;MACfH,EAAA,EAAIL;IAAA,CACL;EAAA;EAEH,MAAMS,eAAA,GAAkBA,CAAA,KAAM;IACxB,IAAAP,UAAA,CAAWK,KAAA,KAAU,IAAI;MAC3B;IACF;IAEYV,WAAA,CAAAa,MAAA,CAAOR,UAAA,CAAWK,KAAA,EAAO,CAAC;EAAA;EAGxC,MAAMI,eAAA,GAAkBR,QAAA,CACtB,MAAMD,UAAA,CAAWK,KAAA,KAAU,MAAML,UAAA,CAAWK,KAAA,KAAUV,WAAA,CAAYe,MAAA,GAAS;EAE7E,MAAMC,kBAAA,GAAqBV,QAAA,CACzB,MAAMD,UAAA,CAAWK,KAAA,KAAU;EAE7B,MAAMO,sBAAA,GAAyBX,QAAA,CAAS,MAAMN,WAAA,CAAYe,MAAA,GAAS,CAAC;EAE7D;IACLZ,OAAA;IACAE,UAAA;IACAI,aAAA;IACAG,eAAA;IACAE,eAAA;IACAE,kBAAA;IACAC;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}