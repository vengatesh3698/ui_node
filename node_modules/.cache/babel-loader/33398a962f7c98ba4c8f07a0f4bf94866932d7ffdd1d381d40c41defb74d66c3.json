{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { b as clamp } from \"../../../vendor-fff696df.mjs\";\nimport { u as useSizeProps, a as useSize } from \"../../composables/useSize-3142f2a0.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaProgressCircle\",\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    indeterminate: {\n      type: Boolean,\n      default: false\n    },\n    thickness: {\n      type: Number,\n      default: 0.06\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:progressState\"\n    }\n  },\n  setup(props) {\n    const {\n      getColor\n    } = useColors();\n    const {\n      sizeComputed\n    } = useSize(props);\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100);\n    const radius = computed(() => 20 - 20 * cappedThickness.value / 100);\n    const dasharray = computed(() => 2 * Math.PI * radius.value);\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100));\n    const colorComputed = computed(() => getColor(props.color, void 0, true));\n    const {\n      tp\n    } = useTranslation();\n    return {\n      infoStyle: computed(() => ({\n        color: colorComputed.value\n      })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value\n      })),\n      rootClass: computed(() => ({\n        \"va-progress-circle--indeterminate\": props.indeterminate\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: \"progressbar\",\n        \"aria-label\": tp(props.ariaLabel),\n        \"aria-valuenow\": !props.indeterminate ? props.modelValue : void 0\n      })),\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaProgressCircle.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useSizeProps","useComponentPresetProp","modelValue","type","Number","default","indeterminate","Boolean","thickness","color","String","ariaLabel","setup","getColor","useColors","sizeComputed","useSize","cappedThickness","computed","clamp","radius","value","dasharray","Math","PI","dashoffset","colorComputed","tp","useTranslation","infoStyle","rootStyle","width","height","rootClass","ariaAttributesComputed","role"],"sources":["../../../../../src/components/va-progress-circle/VaProgressCircle.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useComponentPresetProp, useColors, useSize, useSizeProps, useTranslation } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n    ariaLabel: { type: String, default: '$t:progressState' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color, undefined, true))\n\n    const { tp } = useTranslation()\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: 'progressbar',\n        'aria-label': tp(props.ariaLabel),\n        'aria-valuenow': !props.indeterminate ? props.modelValue : undefined,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: auto;\n    transform: rotate(-90deg);\n    width: var(--va-progress-circle-width);\n    height: var(--va-progress-circle-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-font-size);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n"],"mappings":";;;;;;AAuCA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IACL,GAAGC,YAAA;IACH,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAE;IACvCC,aAAA,EAAe;MAAEH,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAM;IAC/CG,SAAA,EAAW;MAAEL,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAK;IACzCI,KAAA,EAAO;MAAEN,IAAA,EAAMO,MAAA;MAAQL,OAAA,EAAS;IAAU;IAC1CM,SAAA,EAAW;MAAER,IAAA,EAAMO,MAAA;MAAQL,OAAA,EAAS;IAAmB;EACzD;EAEAO,MAAOb,KAAA,EAAO;IACN;MAAEc;IAAA,IAAaC,SAAA;IACrB,MAAM;MAAEC;IAAA,IAAiBC,OAAA,CAAQjB,KAAK;IAEhC,MAAAkB,eAAA,GAAkBC,QAAA,CAAS,MAAMC,KAAA,CAAMpB,KAAA,CAAMS,SAAA,EAAW,GAAG,CAAC,IAAI,IAAI,GAAG;IAE7E,MAAMY,MAAA,GAASF,QAAA,CAAS,MAAM,KAAM,KAAKD,eAAA,CAAgBI,KAAA,GAAQ,GAAI;IACrE,MAAMC,SAAA,GAAYJ,QAAA,CAAS,MAAM,IAAIK,IAAA,CAAKC,EAAA,GAAKJ,MAAA,CAAOC,KAAK;IAC3D,MAAMI,UAAA,GAAaP,QAAA,CAAS,MAAMI,SAAA,CAAUD,KAAA,IAAS,IAAIF,KAAA,CAAMpB,KAAA,CAAMG,UAAA,EAAY,GAAG,GAAG,IAAI,IAAI;IACzF,MAAAwB,aAAA,GAAgBR,QAAA,CAAS,MAAML,QAAA,CAASd,KAAA,CAAMU,KAAA,EAAO,QAAW,IAAI,CAAC;IAErE;MAAEkB;IAAA,IAAOC,cAAA;IAER;MACLC,SAAA,EAAWX,QAAA,CAAS,OAAO;QAAET,KAAA,EAAOiB,aAAA,CAAcL;MAAA,EAAQ;MAC1DS,SAAA,EAAWZ,QAAA,CAAS,OAAO;QACzBa,KAAA,EAAOhB,YAAA,CAAaM,KAAA;QACpBW,MAAA,EAAQjB,YAAA,CAAaM;MAAA,EACrB;MACFY,SAAA,EAAWf,QAAA,CAAS,OAAO;QACzB,qCAAqCnB,KAAA,CAAMO;MAAA,EAC3C;MACF4B,sBAAA,EAAwBhB,QAAA,CAAS,OAAO;QACtCiB,IAAA,EAAM;QACN,cAAcR,EAAA,CAAG5B,KAAA,CAAMY,SAAS;QAChC,iBAAiB,CAACZ,KAAA,CAAMO,aAAA,GAAgBP,KAAA,CAAMG,UAAA,GAAa;MAAA,EAC3D;MAEFwB,aAAA;MACAN,MAAA;MACAE,SAAA;MACAG,UAAA;MACAR;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}