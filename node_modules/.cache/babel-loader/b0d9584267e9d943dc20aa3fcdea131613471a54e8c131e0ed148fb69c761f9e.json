{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { o as omit } from \"../../../vendor-fff696df.mjs\";\nimport { u as useSizeProps, a as useSize } from \"../../composables/useSize-3142f2a0.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useIcon } from \"../../composables/useIcon-d9f8a339.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaIcon\",\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    name: {\n      type: String,\n      default: \"\"\n    },\n    tag: {\n      type: String\n    },\n    component: {\n      type: Object\n    },\n    color: {\n      type: String\n    },\n    rotation: {\n      type: [String, Number]\n    },\n    spin: {\n      type: [String, Boolean]\n    },\n    flip: {\n      type: String,\n      default: \"off\",\n      validator: value => [\"off\", \"horizontal\", \"vertical\", \"both\"].includes(value)\n    }\n  },\n  setup(props, {\n    attrs\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const {\n      sizeComputed\n    } = useSize(props);\n    const {\n      getIcon\n    } = useIcon();\n    const iconConfig = computed(() => getIcon(props.name));\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || \"i\");\n    const computedAttrs = computed(() => ({\n      ...iconConfig.value.attrs,\n      ...omit(attrs, [\"class\"])\n    }));\n    const getSpinClass = spin => {\n      if (spin === void 0 || spin === false) {\n        return;\n      }\n      return spin === \"counter-clockwise\" ? \"va-icon--spin-reverse\" : \"va-icon--spin\";\n    };\n    const computedClass = computed(() => [iconConfig.value.class, getSpinClass(props.spin ?? iconConfig.value.spin)]);\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : \"\";\n      const flipY = props.flip === \"vertical\" || props.flip === \"both\" ? -1 : 1;\n      const flipX = props.flip === \"horizontal\" || props.flip === \"both\" ? -1 : 1;\n      const scale = props.flip === \"off\" ? \"\" : `scale(${flipY}, ${flipX})`;\n      return `${scale} ${rotation}`.trim();\n    });\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? \"pointer\" : null,\n      color: props.color ? getColor(props.color, void 0, true) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n      height: sizeComputed.value,\n      lineHeight: sizeComputed.value\n    }));\n    const tabindexComputed = computed(() => attrs.tabindex ?? -1);\n    const ariaHiddenComputed = computed(() => attrs.role !== \"button\" || tabindexComputed.value < 0);\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n      ariaHiddenComputed\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaIcon.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useSizeProps","useComponentPresetProp","type","String","default","tag","component","Object","color","rotation","Number","spin","Boolean","flip","validator","value","includes","setup","attrs","getColor","useColors","sizeComputed","useSize","getIcon","useIcon","iconConfig","computed","computedTag","computedAttrs","omit","getSpinClass","computedClass","class","transformStyle","flipY","flipX","scale","trim","computedStyle","transform","cursor","onClick","fontSize","height","lineHeight","tabindexComputed","tabindex","ariaHiddenComputed","role"],"sources":["../../../../../src/components/va-icon/VaIcon.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"computedTag\"\n    class=\"va-icon\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    :aria-hidden=\"ariaHiddenComputed\"\n    notranslate\n    v-bind=\"computedAttrs\"\n  >\n    <slot>\n      <template v-if=\"iconConfig.content\">\n        {{ iconConfig.content }}\n      </template>\n    </slot>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\nimport omit from 'lodash/omit.js'\n\nimport {\n  useComponentPresetProp,\n  useColors,\n  useSize, useSizeProps,\n  useIcon,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaIcon',\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    name: { type: String, default: '' },\n    tag: { type: String },\n    component: { type: Object as PropType<any> },\n    color: { type: String },\n    rotation: { type: [String, Number] },\n    spin: { type: [String, Boolean] },\n    flip: {\n      type: String as PropType<'off' | 'horizontal' | 'vertical' | 'both'>,\n      default: 'off',\n      validator: (value: string) => ['off', 'horizontal', 'vertical', 'both'].includes(value),\n    },\n  },\n  setup (props, { attrs }) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n    const { getIcon } = useIcon()\n\n    const iconConfig = computed(() => getIcon(props.name))\n\n    const computedTag = computed(() => props.component || props.tag || iconConfig.value.component || iconConfig.value.tag || 'i')\n\n    const computedAttrs = computed(() => ({ ...iconConfig.value.attrs, ...omit(attrs, ['class']) }))\n\n    const getSpinClass = (spin?: string | boolean) => {\n      if (spin === undefined || spin === false) { return }\n      return spin === 'counter-clockwise' ? 'va-icon--spin-reverse' : 'va-icon--spin'\n    }\n\n    const computedClass = computed(() => [\n      iconConfig.value.class,\n      getSpinClass(props.spin ?? iconConfig.value.spin),\n    ])\n\n    const transformStyle = computed(() => {\n      const rotation = props.rotation ? `rotate(${props.rotation}deg)` : ''\n\n      const flipY = (props.flip === 'vertical' || props.flip === 'both') ? -1 : 1\n      const flipX = (props.flip === 'horizontal' || props.flip === 'both') ? -1 : 1\n      const scale = props.flip === 'off' ? '' : `scale(${flipY}, ${flipX})`\n\n      return `${scale} ${rotation}`.trim()\n    })\n\n    const computedStyle = computed(() => ({\n      transform: transformStyle.value,\n      cursor: attrs.onClick ? 'pointer' : null,\n      color: props.color ? getColor(props.color, undefined, true) : iconConfig.value.color,\n      fontSize: sizeComputed.value,\n      height: sizeComputed.value,\n      lineHeight: sizeComputed.value,\n    }))\n\n    const tabindexComputed = computed(() => attrs.tabindex as number | undefined ?? -1)\n    const ariaHiddenComputed = computed(() => attrs.role !== 'button' || tabindexComputed.value < 0)\n\n    return {\n      iconConfig,\n      computedTag,\n      computedAttrs,\n      computedClass,\n      computedStyle,\n      ariaHiddenComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n@import '../../styles/resources';\n\n.va-icon {\n  vertical-align: var(--va-icon-vertical-align);\n  user-select: var(--va-icon-user-select);\n\n  &[role^=\"button\"][tabindex]:not([tabindex^=\"-\"]) {\n    cursor: pointer;\n\n    @include keyboard-focus-outline($radius: 2px);\n  }\n\n  &#{&} {\n    // need 2 classes to make it work\n    font-style: normal;\n  }\n\n  &--spin {\n    animation: va-icon--spin-animation 1500ms linear infinite;\n\n    &-reverse {\n      animation: va-icon--spin-animation 1500ms linear infinite;\n      animation-direction: reverse;\n    }\n  }\n\n  @keyframes va-icon--spin-animation {\n    from {\n      transform: rotate(0deg);\n    }\n\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  svg {\n    fill: currentColor;\n    height: 100%;\n  }\n}\n</style>\n"],"mappings":";;;;;;AA6BA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACL,GAAGC,YAAA;IACH,GAAGC,sBAAA;IACHH,IAAA,EAAM;MAAEI,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAG;IAClCC,GAAA,EAAK;MAAEH,IAAA,EAAMC;IAAO;IACpBG,SAAA,EAAW;MAAEJ,IAAA,EAAMK;IAAwB;IAC3CC,KAAA,EAAO;MAAEN,IAAA,EAAMC;IAAO;IACtBM,QAAA,EAAU;MAAEP,IAAA,EAAM,CAACC,MAAA,EAAQO,MAAM;IAAE;IACnCC,IAAA,EAAM;MAAET,IAAA,EAAM,CAACC,MAAA,EAAQS,OAAO;IAAE;IAChCC,IAAA,EAAM;MACJX,IAAA,EAAMC,MAAA;MACNC,OAAA,EAAS;MACTU,SAAA,EAAYC,KAAA,IAAkB,CAAC,OAAO,cAAc,YAAY,MAAM,EAAEC,QAAA,CAASD,KAAK;IACxF;EACF;EACAE,MAAOlB,KAAA,EAAO;IAAEmB;EAAA,GAAS;IACjB;MAAEC;IAAA,IAAaC,SAAA;IACrB,MAAM;MAAEC;IAAA,IAAiBC,OAAA,CAAQvB,KAAK;IAChC;MAAEwB;IAAA,IAAYC,OAAA;IAEpB,MAAMC,UAAA,GAAaC,QAAA,CAAS,MAAMH,OAAA,CAAQxB,KAAA,CAAMD,IAAI,CAAC;IAErD,MAAM6B,WAAA,GAAcD,QAAA,CAAS,MAAM3B,KAAA,CAAMO,SAAA,IAAaP,KAAA,CAAMM,GAAA,IAAOoB,UAAA,CAAWV,KAAA,CAAMT,SAAA,IAAamB,UAAA,CAAWV,KAAA,CAAMV,GAAA,IAAO,GAAG;IAE5H,MAAMuB,aAAA,GAAgBF,QAAA,CAAS,OAAO;MAAE,GAAGD,UAAA,CAAWV,KAAA,CAAMG,KAAA;MAAO,GAAGW,IAAA,CAAKX,KAAA,EAAO,CAAC,OAAO,CAAC;IAAA,EAAI;IAEzF,MAAAY,YAAA,GAAgBnB,IAAA,IAA4B;MAC5C,IAAAA,IAAA,KAAS,UAAaA,IAAA,KAAS,OAAO;QAAE;MAAO;MAC5C,OAAAA,IAAA,KAAS,sBAAsB,0BAA0B;IAAA;IAG5D,MAAAoB,aAAA,GAAgBL,QAAA,CAAS,MAAM,CACnCD,UAAA,CAAWV,KAAA,CAAMiB,KAAA,EACjBF,YAAA,CAAa/B,KAAA,CAAMY,IAAA,IAAQc,UAAA,CAAWV,KAAA,CAAMJ,IAAI,EACjD;IAEK,MAAAsB,cAAA,GAAiBP,QAAA,CAAS,MAAM;MACpC,MAAMjB,QAAA,GAAWV,KAAA,CAAMU,QAAA,GAAW,UAAUV,KAAA,CAAMU,QAAA,SAAiB;MAEnE,MAAMyB,KAAA,GAASnC,KAAA,CAAMc,IAAA,KAAS,cAAcd,KAAA,CAAMc,IAAA,KAAS,SAAU,KAAK;MAC1E,MAAMsB,KAAA,GAASpC,KAAA,CAAMc,IAAA,KAAS,gBAAgBd,KAAA,CAAMc,IAAA,KAAS,SAAU,KAAK;MAC5E,MAAMuB,KAAA,GAAQrC,KAAA,CAAMc,IAAA,KAAS,QAAQ,KAAK,SAASqB,KAAA,KAAUC,KAAA;MAEtD,UAAGC,KAAA,IAAS3B,QAAA,GAAW4B,IAAA;IAAK,CACpC;IAEK,MAAAC,aAAA,GAAgBZ,QAAA,CAAS,OAAO;MACpCa,SAAA,EAAWN,cAAA,CAAelB,KAAA;MAC1ByB,MAAA,EAAQtB,KAAA,CAAMuB,OAAA,GAAU,YAAY;MACpCjC,KAAA,EAAOT,KAAA,CAAMS,KAAA,GAAQW,QAAA,CAASpB,KAAA,CAAMS,KAAA,EAAO,QAAW,IAAI,IAAIiB,UAAA,CAAWV,KAAA,CAAMP,KAAA;MAC/EkC,QAAA,EAAUrB,YAAA,CAAaN,KAAA;MACvB4B,MAAA,EAAQtB,YAAA,CAAaN,KAAA;MACrB6B,UAAA,EAAYvB,YAAA,CAAaN;IACzB;IAEF,MAAM8B,gBAAA,GAAmBnB,QAAA,CAAS,MAAMR,KAAA,CAAM4B,QAAA,IAAkC,EAAE;IAC5E,MAAAC,kBAAA,GAAqBrB,QAAA,CAAS,MAAMR,KAAA,CAAM8B,IAAA,KAAS,YAAYH,gBAAA,CAAiB9B,KAAA,GAAQ,CAAC;IAExF;MACLU,UAAA;MACAE,WAAA;MACAC,aAAA;MACAG,aAAA;MACAO,aAAA;MACAS;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}