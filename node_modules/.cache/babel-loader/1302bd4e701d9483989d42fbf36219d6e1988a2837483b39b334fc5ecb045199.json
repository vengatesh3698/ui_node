{"ast":null,"code":"import { watch } from \"vue\";\nimport { i as isServer } from \"../../../utils/ssr-fd33979c.mjs\";\nimport { u as useGlobalConfig } from \"../../../composables/useGlobalConfig-29bee2de.mjs\";\nimport { a as addOrUpdateStyleElement } from \"../../../utils/dom-ddcff6c3.mjs\";\nimport { d as defineVuesticPlugin } from \"../../vue-plugin/utils/define-vuestic-plugin-8c565dfe.mjs\";\nimport { d as defineGlobalProperty } from \"../../vue-plugin/utils/global-properties-9524ee5b.mjs\";\nconst getColorsClassesHelpers = (helpers, colors) => {\n  const colorsEntries = Object.entries(colors);\n  return helpers.reduce((acc, helper) => acc.concat(colorsEntries.map(([colorName, colorValue]) => ({\n    ...helper,\n    postfix: helper.postfix ?? colorName,\n    value: helper.value ?? colorValue\n  }))), []);\n};\nconst getColorsClassesStyles = helpers => {\n  return helpers.reduce((styles, helper) => {\n    const style = [helper.property].flat().map(prop => `${prop}: ${helper.value};`).join(\"\");\n    styles += `.va-${helper.prefix}--${helper.postfix} { ${style} }`;\n    return styles;\n  }, \"\");\n};\nconst handleConfigUpdate = (helpers, colors) => {\n  const coloredHelpers = getColorsClassesHelpers(helpers, colors);\n  addOrUpdateStyleElement(\"va-color-helpers\", () => getColorsClassesStyles(coloredHelpers));\n};\nconst createColorHelpersPlugin = () => {\n  if (isServer()) {\n    return;\n  }\n  const {\n    globalConfig\n  } = useGlobalConfig();\n  watch(() => globalConfig.value.colorsClasses, newHelpers => {\n    if (newHelpers.length) {\n      handleConfigUpdate(newHelpers, globalConfig.value.colors.variables);\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watch(() => globalConfig.value.colors.variables, newColors => {\n    if (!newColors) {\n      return;\n    }\n    handleConfigUpdate(globalConfig.value.colorsClasses, newColors);\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    renderColorHelpers: () => {\n      const coloredHelpers = getColorsClassesHelpers(globalConfig.value.colorsClasses, globalConfig.value.colors.variables);\n      return getColorsClassesStyles(coloredHelpers);\n    }\n  };\n};\nconst ColorsClassesPlugin = defineVuesticPlugin(() => ({\n  install(app) {\n    defineGlobalProperty(app, \"$vaColorsClasses\", createColorHelpersPlugin());\n  }\n}));\nexport { ColorsClassesPlugin as C };","map":{"version":3,"names":["getColorsClassesHelpers","helpers","colors","colorsEntries","Object","entries","reduce","acc","helper","concat","map","colorName","colorValue","postfix","value","getColorsClassesStyles","styles","style","property","flat","prop","join","prefix","handleConfigUpdate","coloredHelpers","addOrUpdateStyleElement","createColorHelpersPlugin","isServer","globalConfig","useGlobalConfig","watch","colorsClasses","newHelpers","length","variables","immediate","deep","newColors","renderColorHelpers","ColorsClassesPlugin","defineVuesticPlugin","install","app","defineGlobalProperty"],"sources":["../../../../../../src/services/colors-classes/plugin/index.ts"],"sourcesContent":["import { watch } from 'vue'\n\nimport { isServer } from '../../../utils/ssr'\nimport { useGlobalConfig } from '../../../composables/useGlobalConfig'\nimport { defineGlobalProperty, defineVuesticPlugin } from '../../vue-plugin/utils'\nimport { addOrUpdateStyleElement } from '../../../utils/dom'\n\nimport type { ColorVariables } from '../../color'\nimport type { ColorsClassesConfig, ColorsClassesConfigItem } from '../types'\n\nconst getColorsClassesHelpers = (helpers: ColorsClassesConfig, colors: ColorVariables) => {\n  const colorsEntries = Object.entries(colors)\n\n  return helpers.reduce((acc, helper: ColorsClassesConfigItem) => acc.concat(\n    colorsEntries.map(([colorName, colorValue]) => ({\n      ...helper,\n      postfix: helper.postfix ?? colorName,\n      value: helper.value ?? colorValue,\n    })),\n  ), [] as ColorsClassesConfig)\n}\n\nconst getColorsClassesStyles = (helpers: ColorsClassesConfig) => {\n  return helpers.reduce((styles, helper) => {\n    const style = [helper.property].flat().map(prop => `${prop}: ${helper.value};`).join('')\n\n    styles += `.va-${helper.prefix}--${helper.postfix} { ${style} }`\n\n    return styles\n  }, '')\n}\n\nconst handleConfigUpdate = (helpers: ColorsClassesConfig, colors: ColorVariables) => {\n  const coloredHelpers = getColorsClassesHelpers(helpers, colors)\n\n  addOrUpdateStyleElement(\n    'va-color-helpers',\n    () => getColorsClassesStyles(coloredHelpers),\n  )\n}\n\nconst createColorHelpersPlugin = () => {\n  if (isServer()) { return }\n\n  const { globalConfig } = useGlobalConfig()\n\n  watch(() => globalConfig.value.colorsClasses, (newHelpers: ColorsClassesConfig) => {\n    if (newHelpers.length) {\n      handleConfigUpdate(newHelpers, globalConfig.value.colors.variables)\n    }\n  }, { immediate: true, deep: true })\n\n  watch(() => globalConfig.value.colors.variables, (newColors: ColorVariables) => {\n    if (!newColors) { return }\n\n    handleConfigUpdate(globalConfig.value.colorsClasses, newColors)\n  }, { immediate: true, deep: true })\n\n  return {\n    renderColorHelpers: () => {\n      const coloredHelpers = getColorsClassesHelpers(globalConfig.value.colorsClasses, globalConfig.value.colors.variables)\n\n      return getColorsClassesStyles(coloredHelpers)\n    },\n  }\n}\n\nexport const ColorsClassesPlugin = defineVuesticPlugin(() => ({\n  install (app) {\n    defineGlobalProperty(app, '$vaColorsClasses', createColorHelpersPlugin())\n  },\n}))\n\ndeclare module 'vue' {\n  export interface ComponentCustomProperties {\n    $vaColorsClasses: ReturnType<typeof createColorHelpersPlugin>\n  }\n}\n"],"mappings":";;;;;;AAUA,MAAMA,uBAAA,GAA0BA,CAACC,OAAA,EAA8BC,MAAA,KAA2B;EAClF,MAAAC,aAAA,GAAgBC,MAAA,CAAOC,OAAA,CAAQH,MAAM;EAE3C,OAAOD,OAAA,CAAQK,MAAA,CAAO,CAACC,GAAA,EAAKC,MAAA,KAAoCD,GAAA,CAAIE,MAAA,CAClEN,aAAA,CAAcO,GAAA,CAAI,CAAC,CAACC,SAAA,EAAWC,UAAU,OAAO;IAC9C,GAAGJ,MAAA;IACHK,OAAA,EAASL,MAAA,CAAOK,OAAA,IAAWF,SAAA;IAC3BG,KAAA,EAAON,MAAA,CAAOM,KAAA,IAASF;EAAA,EACvB,CACJ,GAAG,EAAyB;AAC9B;AAEA,MAAMG,sBAAA,GAA0Bd,OAAA,IAAiC;EAC/D,OAAOA,OAAA,CAAQK,MAAA,CAAO,CAACU,MAAA,EAAQR,MAAA,KAAW;IACxC,MAAMS,KAAA,GAAQ,CAACT,MAAA,CAAOU,QAAQ,EAAEC,IAAA,CAAK,EAAET,GAAA,CAAIU,IAAA,IAAQ,GAAGA,IAAA,KAASZ,MAAA,CAAOM,KAAA,GAAQ,EAAEO,IAAA,CAAK,EAAE;IAEvFL,MAAA,IAAU,OAAOR,MAAA,CAAOc,MAAA,KAAWd,MAAA,CAAOK,OAAA,MAAaI,KAAA;IAEhD,OAAAD,MAAA;EAAA,GACN,EAAE;AACP;AAEA,MAAMO,kBAAA,GAAqBA,CAACtB,OAAA,EAA8BC,MAAA,KAA2B;EAC7E,MAAAsB,cAAA,GAAiBxB,uBAAA,CAAwBC,OAAA,EAASC,MAAM;EAE9DuB,uBAAA,CACE,oBACA,MAAMV,sBAAA,CAAuBS,cAAc;AAE/C;AAEA,MAAME,wBAAA,GAA2BA,CAAA,KAAM;EACrC,IAAIC,QAAA,IAAY;IAAE;EAAO;EAEnB;IAAEC;EAAA,IAAiBC,eAAA;EAEzBC,KAAA,CAAM,MAAMF,YAAA,CAAad,KAAA,CAAMiB,aAAA,EAAgBC,UAAA,IAAoC;IACjF,IAAIA,UAAA,CAAWC,MAAA,EAAQ;MACrBV,kBAAA,CAAmBS,UAAA,EAAYJ,YAAA,CAAad,KAAA,CAAMZ,MAAA,CAAOgC,SAAS;IACpE;EAAA,GACC;IAAEC,SAAA,EAAW;IAAMC,IAAA,EAAM;EAAM;EAElCN,KAAA,CAAM,MAAMF,YAAA,CAAad,KAAA,CAAMZ,MAAA,CAAOgC,SAAA,EAAYG,SAAA,IAA8B;IAC9E,IAAI,CAACA,SAAA,EAAW;MAAE;IAAO;IAENd,kBAAA,CAAAK,YAAA,CAAad,KAAA,CAAMiB,aAAA,EAAeM,SAAS;EAAA,GAC7D;IAAEF,SAAA,EAAW;IAAMC,IAAA,EAAM;EAAM;EAE3B;IACLE,kBAAA,EAAoBA,CAAA,KAAM;MAClB,MAAAd,cAAA,GAAiBxB,uBAAA,CAAwB4B,YAAA,CAAad,KAAA,CAAMiB,aAAA,EAAeH,YAAA,CAAad,KAAA,CAAMZ,MAAA,CAAOgC,SAAS;MAEpH,OAAOnB,sBAAA,CAAuBS,cAAc;IAC9C;EAAA;AAEJ;AAEa,MAAAe,mBAAA,GAAsBC,mBAAA,CAAoB,OAAO;EAC5DC,QAASC,GAAA,EAAK;IACSC,oBAAA,CAAAD,GAAA,EAAK,oBAAoBhB,wBAAA,CAA0B;EAC1E;AACF,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}