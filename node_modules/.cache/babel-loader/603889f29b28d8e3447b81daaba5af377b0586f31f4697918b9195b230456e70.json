{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { o as omit } from \"../../../vendor-fff696df.mjs\";\nimport { V as VaButton } from \"../va-button/index-b0a9ef70.mjs\";\nimport { V as VaConfig } from \"../va-config/VaConfig-649d3d1a.mjs\";\nimport { e as extractComponentProps } from \"../../utils/component-options/extract-component-options-6b96d215.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-f36510ca.mjs\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props-9727421a.mjs\";\nimport { u as useBem } from \"../../composables/useBem-10a5bc6e.mjs\";\nconst VaButtonProps = omit(extractComponentProps(VaButton), [\"block\", \"gradient\"]);\nconst _sfc_main = defineComponent({\n  name: \"VaButtonGroup\",\n  components: {\n    VaConfig\n  },\n  props: {\n    ...VaButtonProps,\n    ...useComponentPresetProp,\n    grow: {\n      type: Boolean,\n      default: false\n    },\n    gradient: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup: props => {\n    const {\n      getColor,\n      getGradientBackground\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const {\n      textColorComputed\n    } = useTextColor(colorComputed);\n    const filteredProps = filterComponentProps(VaButtonProps);\n    const buttonConfig = computed(() => ({\n      VaButton: {\n        ...filteredProps.value,\n        ...(props.gradient && {\n          color: \"#00000000\",\n          textColor: textColorComputed.value\n        })\n      }\n    }));\n    const computedClass = useBem(\"va-button-group\", () => ({\n      square: !props.round,\n      grow: props.grow,\n      small: props.size === \"small\",\n      large: props.size === \"large\"\n    }));\n    const backgroundColor = computed(() => props.gradient ? getGradientBackground(colorComputed.value) : \"transparent\");\n    return {\n      buttonConfig,\n      computedClass,\n      backgroundColor\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaButtonGroup.css';","map":{"version":3,"names":["VaButtonProps","omit","extractComponentProps","VaButton","_sfc_main","defineComponent","name","components","VaConfig","props","useComponentPresetProp","grow","type","Boolean","default","gradient","setup","getColor","getGradientBackground","useColors","colorComputed","computed","color","textColorComputed","useTextColor","filteredProps","filterComponentProps","buttonConfig","value","textColor","computedClass","useBem","square","round","small","size","large","backgroundColor"],"sources":["../../../../../src/components/va-button-group/VaButtonGroup.vue"],"sourcesContent":["<template>\n  <div class=\"va-button-group\" :class=\"computedClass\" :style=\"`--va-0-background-color: ${String(backgroundColor)}`\">\n    <va-config :components=\"buttonConfig\">\n      <slot />\n    </va-config>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport omit from 'lodash/omit.js'\n\nimport { useBem, useComponentPresetProp, useColors, useTextColor } from '../../composables'\n\nimport { VaConfig } from '../va-config'\nimport { VaButton } from '../va-button'\n\nconst VaButtonProps = omit(extractComponentProps(VaButton), ['block', 'gradient'])\n\nexport default defineComponent({\n  name: 'VaButtonGroup',\n  components: { VaConfig },\n  props: {\n    ...VaButtonProps,\n    ...useComponentPresetProp,\n    grow: { type: Boolean, default: false },\n    gradient: { type: Boolean, default: false },\n  },\n\n  setup: (props) => {\n    const { getColor, getGradientBackground } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const { textColorComputed } = useTextColor(colorComputed)\n\n    const filteredProps = filterComponentProps(VaButtonProps)\n    const buttonConfig = computed(() => ({\n      VaButton: {\n        ...filteredProps.value,\n        ...(props.gradient && {\n          color: '#00000000',\n          textColor: textColorComputed.value,\n        }),\n      },\n    }))\n    const computedClass = useBem('va-button-group', () => ({\n      square: !props.round,\n      grow: props.grow,\n      small: props.size === 'small',\n      large: props.size === 'large',\n    }))\n    const backgroundColor = computed(() =>\n      props.gradient ? getGradientBackground(colorComputed.value) : 'transparent',\n    )\n\n    return { buttonConfig, computedClass, backgroundColor }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n@import '../../styles/resources';\n\n.va-button-group {\n  display: var(--va-button-group-display);\n  justify-content: var(--va-button-group-justify-content);\n  border-radius: var(--va-button-group-border-radius);\n  font-family: var(--va-font-family);\n  width: max-content;\n  background: var(--va-0-background-color);\n\n  &--grow {\n    width: 100%;\n\n    --va-button-group-button-width: 100%;\n  }\n\n  &--square {\n    border-radius: var(--va-button-border-radius);\n  }\n\n  &--small {\n    &.va-button-group--square {\n      border-radius: var(--va-button-sm-border-radius);\n    }\n  }\n\n  &--large {\n    &.va-button-group--square {\n      border-radius: var(--va-button-lg-border-radius);\n    }\n  }\n\n  .va-button {\n    margin: var(--va-button-group-button-margin);\n    width: var(--va-button-group-button-width);\n    box-shadow: none;\n    outline: none;\n\n    &:focus-visible {\n      outline: none !important;\n\n      &::before {\n        @include focus-outline($offset: -2px, $radius: 'inherit');\n      }\n    }\n  }\n\n  & > .va-button:last-child {\n    padding-right: var(--va-button-group-button-padding);\n  }\n\n  & > .va-button:first-child {\n    padding-left: var(--va-button-group-button-padding);\n  }\n\n  & > .va-button:not(:last-child) {\n    padding-right: var(--va-button-group-gap);\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    border-right: 0;\n\n    .va-button__content {\n      margin-right: 0;\n    }\n  }\n\n  & > .va-button + .va-button {\n    padding-left: var(--va-button-group-gap);\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    border-left: 0;\n\n    .va-button__content {\n      margin-left: 0;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;AAkBA,MAAMA,aAAA,GAAgBC,IAAA,CAAKC,qBAAA,CAAsBC,QAAQ,GAAG,CAAC,SAAS,UAAU,CAAC;AAEjF,MAAAC,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAEC;EAAS;EACvBC,KAAA,EAAO;IACL,GAAGT,aAAA;IACH,GAAGU,sBAAA;IACHC,IAAA,EAAM;MAAEC,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACtCC,QAAA,EAAU;MAAEH,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;EAC5C;EAEAE,KAAA,EAAQP,KAAA,IAAU;IAChB,MAAM;MAAEQ,QAAA;MAAUC;IAAsB,IAAIC,SAAA,CAAU;IACtD,MAAMC,aAAA,GAAgBC,QAAA,CAAS,MAAMJ,QAAA,CAASR,KAAA,CAAMa,KAAK,CAAC;IAC1D,MAAM;MAAEC;IAAA,IAAsBC,YAAA,CAAaJ,aAAa;IAElD,MAAAK,aAAA,GAAgBC,oBAAA,CAAqB1B,aAAa;IAClD,MAAA2B,YAAA,GAAeN,QAAA,CAAS,OAAO;MACnClB,QAAA,EAAU;QACR,GAAGsB,aAAA,CAAcG,KAAA;QACjB,IAAInB,KAAA,CAAMM,QAAA,IAAY;UACpBO,KAAA,EAAO;UACPO,SAAA,EAAWN,iBAAA,CAAkBK;QAC/B;MACF;IACA;IACI,MAAAE,aAAA,GAAgBC,MAAA,CAAO,mBAAmB,OAAO;MACrDC,MAAA,EAAQ,CAACvB,KAAA,CAAMwB,KAAA;MACftB,IAAA,EAAMF,KAAA,CAAME,IAAA;MACZuB,KAAA,EAAOzB,KAAA,CAAM0B,IAAA,KAAS;MACtBC,KAAA,EAAO3B,KAAA,CAAM0B,IAAA,KAAS;IACtB;IACF,MAAME,eAAA,GAAkBhB,QAAA,CAAS,MAC/BZ,KAAA,CAAMM,QAAA,GAAWG,qBAAA,CAAsBE,aAAA,CAAcQ,KAAK,IAAI;IAGzD;MAAED,YAAA;MAAcG,aAAA;MAAeO;IAAA;EACxC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}