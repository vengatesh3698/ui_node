{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { provide, computed, onMounted, watch, inject, ref, onBeforeUnmount } from \"vue\";\nconst AccordionServiceKey = Symbol(\"AccordionService\");\nconst useAccordion = (props, state) => {\n  let items = [];\n  const onItemMounted = item => {\n    items.push(item);\n  };\n  const onItemUnmounted = item => {\n    items = items.filter(i => i !== item);\n  };\n  const onItemChanged = changedItem => {\n    state.value = items.map(item => {\n      if (item === changedItem) {\n        return item.state.value;\n      }\n      if (!props.multiple) {\n        item.state.value = false;\n      }\n      return item.state.value;\n    });\n  };\n  provide(AccordionServiceKey, {\n    isInsideAccordion: true,\n    onItemMounted,\n    onItemUnmounted,\n    onItemChanged,\n    props: computed(() => props)\n  });\n  const updateItemStates = () => {\n    items.forEach((item, index) => {\n      item.state.value = state.value[index];\n    });\n  };\n  onMounted(updateItemStates);\n  watch(state, updateItemStates);\n  return {\n    items\n  };\n};\nconst useAccordionItem = state => {\n  const accordion = inject(AccordionServiceKey, {\n    props: ref({\n      inset: void 0,\n      popout: void 0\n    }),\n    onItemChanged: () => void 0,\n    onItemMounted: () => void 0,\n    onItemUnmounted: () => void 0\n  });\n  const item = {\n    state\n  };\n  onMounted(() => accordion.onItemMounted(item));\n  onBeforeUnmount(() => accordion.onItemUnmounted(item));\n  return {\n    accordionProps: accordion.props,\n    toggle: () => {\n      state.value = !state.value;\n      accordion.onItemChanged(item);\n    }\n  };\n};\nexport { useAccordionItem as a, useAccordion as u };","map":{"version":3,"names":["AccordionServiceKey","Symbol","useAccordion","props","state","items","onItemMounted","item","push","onItemUnmounted","filter","i","onItemChanged","changedItem","value","map","multiple","provide","isInsideAccordion","computed","updateItemStates","forEach","index","onMounted","watch","useAccordionItem","accordion","inject","ref","inset","popout","onBeforeUnmount","accordionProps","toggle"],"sources":["../../../../../../src/components/va-accordion/hooks/useAccordion.ts"],"sourcesContent":["import { computed, inject, onBeforeUnmount, onMounted, provide, Ref, ref, watch, WritableComputedRef } from 'vue'\n\nexport const AccordionServiceKey = Symbol('AccordionService')\n\nexport interface AccordionItemProps {\n  inset?: boolean,\n  popout?: boolean\n}\n\nexport interface AccordionProps extends AccordionItemProps {\n  modelValue: boolean[],\n  multiple: boolean,\n}\n\nexport interface AccordionItem {\n  state: WritableComputedRef<boolean>\n}\n\nexport interface AccordionInject {\n  onItemMounted: (item: AccordionItem) => void,\n  onItemUnmounted: (item: AccordionItem) => void,\n  onItemChanged: (changedItem: AccordionItem) => void,\n  props: Ref<AccordionItemProps>,\n}\n\n/**\n * @param props\n * @param state array of states of all accordion items */\nexport const useAccordion = (props: AccordionProps, state: WritableComputedRef<boolean[]>) => {\n  /** @notice items are reactive because they have reactive `state` inside */\n  let items: AccordionItem[] = []\n\n  const onItemMounted = (item: AccordionItem) => { items.push(item) }\n  const onItemUnmounted = (item: AccordionItem) => { items = items.filter((i) => i !== item) }\n  const onItemChanged = (changedItem: AccordionItem) => {\n    state.value = items\n      .map((item: AccordionItem) => {\n        if (item === changedItem) {\n          return item.state.value\n        }\n\n        if (!props.multiple) {\n          item.state.value = false\n        }\n\n        return item.state.value\n      })\n  }\n\n  provide(AccordionServiceKey, {\n    isInsideAccordion: true,\n    onItemMounted,\n    onItemUnmounted,\n    onItemChanged,\n    props: computed(() => props),\n  })\n\n  const updateItemStates = () => {\n    items.forEach((item: AccordionItem, index: number) => {\n      item.state.value = state.value[index]\n    })\n  }\n\n  onMounted(updateItemStates)\n  watch(state, updateItemStates)\n\n  return { items }\n}\n\n/**\n * Hook used in items that should react on VaAccordion changes\n * @param state shows if accordion item is open\n */\nexport const useAccordionItem = (state: WritableComputedRef<boolean>) => {\n  const accordion = inject<AccordionInject>(AccordionServiceKey, {\n    props: ref({ inset: undefined, popout: undefined }),\n    onItemChanged: () => undefined,\n    onItemMounted: () => undefined,\n    onItemUnmounted: () => undefined,\n  })\n\n  const item = { state }\n\n  onMounted(() => accordion.onItemMounted(item))\n  onBeforeUnmount(() => accordion.onItemUnmounted(item))\n\n  return {\n    accordionProps: accordion.props,\n\n    toggle: () => {\n      /** Toggle collapse value and notify accordion about it */\n      state.value = !state.value\n      accordion.onItemChanged(item)\n    },\n  }\n}\n"],"mappings":";;AAEa,MAAAA,mBAAA,GAAsBC,MAAA,CAAO,kBAAkB;AA0B/C,MAAAC,YAAA,GAAeA,CAACC,KAAA,EAAuBC,KAAA,KAA0C;EAE5F,IAAIC,KAAA,GAAyB;EAEvB,MAAAC,aAAA,GAAiBC,IAAA,IAAwB;IAAEF,KAAA,CAAMG,IAAA,CAAKD,IAAI;EAAA;EAC1D,MAAAE,eAAA,GAAmBF,IAAA,IAAwB;IAAEF,KAAA,GAAQA,KAAA,CAAMK,MAAA,CAAQC,CAAA,IAAMA,CAAA,KAAMJ,IAAI;EAAA;EACnF,MAAAK,aAAA,GAAiBC,WAAA,IAA+B;IACpDT,KAAA,CAAMU,KAAA,GAAQT,KAAA,CACXU,GAAA,CAAKR,IAAA,IAAwB;MAC5B,IAAIA,IAAA,KAASM,WAAA,EAAa;QACxB,OAAON,IAAA,CAAKH,KAAA,CAAMU,KAAA;MACpB;MAEI,KAACX,KAAA,CAAMa,QAAA,EAAU;QACnBT,IAAA,CAAKH,KAAA,CAAMU,KAAA,GAAQ;MACrB;MAEA,OAAOP,IAAA,CAAKH,KAAA,CAAMU,KAAA;IAAA,CACnB;EAAA;EAGLG,OAAA,CAAQjB,mBAAA,EAAqB;IAC3BkB,iBAAA,EAAmB;IACnBZ,aAAA;IACAG,eAAA;IACAG,aAAA;IACAT,KAAA,EAAOgB,QAAA,CAAS,MAAMhB,KAAK;EAAA,CAC5B;EAED,MAAMiB,gBAAA,GAAmBA,CAAA,KAAM;IACvBf,KAAA,CAAAgB,OAAA,CAAQ,CAACd,IAAA,EAAqBe,KAAA,KAAkB;MACpDf,IAAA,CAAKH,KAAA,CAAMU,KAAA,GAAQV,KAAA,CAAMU,KAAA,CAAMQ,KAAK;IAAA,CACrC;EAAA;EAGHC,SAAA,CAAUH,gBAAgB;EAC1BI,KAAA,CAAMpB,KAAA,EAAOgB,gBAAgB;EAE7B,OAAO;IAAEf;EAAM;AACjB;AAMa,MAAAoB,gBAAA,GAAoBrB,KAAA,IAAwC;EACjE,MAAAsB,SAAA,GAAYC,MAAA,CAAwB3B,mBAAA,EAAqB;IAC7DG,KAAA,EAAOyB,GAAA,CAAI;MAAEC,KAAA,EAAO;MAAWC,MAAA,EAAQ;IAAA,CAAW;IAClDlB,aAAA,EAAeA,CAAA,KAAM;IACrBN,aAAA,EAAeA,CAAA,KAAM;IACrBG,eAAA,EAAiBA,CAAA,KAAM;EAAA,CACxB;EAEK,MAAAF,IAAA,GAAO;IAAEH;EAAA;EAEfmB,SAAA,CAAU,MAAMG,SAAA,CAAUpB,aAAA,CAAcC,IAAI,CAAC;EAC7CwB,eAAA,CAAgB,MAAML,SAAA,CAAUjB,eAAA,CAAgBF,IAAI,CAAC;EAE9C;IACLyB,cAAA,EAAgBN,SAAA,CAAUvB,KAAA;IAE1B8B,MAAA,EAAQA,CAAA,KAAM;MAEN7B,KAAA,CAAAU,KAAA,GAAQ,CAACV,KAAA,CAAMU,KAAA;MACrBY,SAAA,CAAUd,aAAA,CAAcL,IAAI;IAC9B;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}