{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaAspectRatio\",\n  props: {\n    ...useComponentPresetProp,\n    ratio: {\n      type: [Number, String],\n      default: \"auto\",\n      validator: v => {\n        if (typeof v === \"number\") {\n          return v > 0;\n        }\n        return v === \"auto\";\n      }\n    },\n    contentHeight: {\n      type: Number,\n      default: 1\n    },\n    contentWidth: {\n      type: Number,\n      default: 1\n    },\n    maxWidth: {\n      type: Number,\n      default: 0,\n      validator: v => v >= 0\n    }\n  },\n  setup(props) {\n    const aspectRatio = computed(() => {\n      if (props.ratio === \"auto\" && props.contentHeight === 1 && props.contentWidth === 1) {\n        return 0;\n      }\n      if (!isNaN(+props.ratio)) {\n        return props.ratio;\n      }\n      return props.contentWidth / props.contentHeight;\n    });\n    const stylesComputed = computed(() => {\n      if (!aspectRatio.value) {\n        return;\n      }\n      return {\n        paddingBottom: `${1 / aspectRatio.value * 100}%`\n      };\n    });\n    const maxWidthComputed = computed(() => props.maxWidth ? `${props.maxWidth}px` : void 0);\n    return {\n      stylesComputed,\n      maxWidthComputed\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaAspectRatio.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","ratio","type","Number","String","default","validator","v","contentHeight","contentWidth","maxWidth","setup","aspectRatio","computed","isNaN","stylesComputed","value","paddingBottom","maxWidthComputed"],"sources":["../../../../../src/components/va-aspect-ratio/VaAspectRatio.vue"],"sourcesContent":["<template>\n  <div class=\"va-aspect-ratio\" :style=\"`--va-0-max-width-computed: ${String(maxWidthComputed)}`\">\n    <div v-if=\"stylesComputed\" :style=\"stylesComputed\" />\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, type PropType } from 'vue'\n\nimport { useComponentPresetProp } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaAspectRatio',\n\n  props: {\n    ...useComponentPresetProp,\n    ratio: {\n      type: [Number, String] as PropType<number | 'auto'>,\n      default: 'auto',\n      validator: (v: number | 'auto') => {\n        if (typeof v === 'number') {\n          return v > 0\n        }\n\n        return v === 'auto'\n      },\n    },\n    contentHeight: { type: Number, default: 1 },\n    contentWidth: { type: Number, default: 1 },\n    maxWidth: {\n      type: Number,\n      default: 0,\n      validator: (v: number) => v >= 0,\n    },\n  },\n\n  setup (props) {\n    const aspectRatio = computed(() => {\n      if (props.ratio === 'auto' && props.contentHeight === 1 && props.contentWidth === 1) { return 0 }\n      if (!isNaN(+props.ratio)) { return props.ratio as number }\n      return props.contentWidth / props.contentHeight\n    })\n\n    const stylesComputed = computed(() => {\n      if (!aspectRatio.value) { return }\n\n      return { paddingBottom: `${1 / aspectRatio.value * 100}%` }\n    })\n\n    const maxWidthComputed = computed(() => props.maxWidth ? `${props.maxWidth}px` : undefined)\n\n    return { stylesComputed, maxWidthComputed }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-aspect-ratio {\n  position: var(--va-aspect-ratio-position);\n  overflow: var(--va-aspect-ratio-overflow);\n  display: flex;\n  max-width: var(--va-0-max-width-computed);\n}\n</style>\n"],"mappings":";;AAYA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IACL,GAAGC,sBAAA;IACHC,KAAA,EAAO;MACLC,IAAA,EAAM,CAACC,MAAA,EAAQC,MAAM;MACrBC,OAAA,EAAS;MACTC,SAAA,EAAYC,CAAA,IAAuB;QAC7B,WAAOA,CAAA,KAAM,UAAU;UACzB,OAAOA,CAAA,GAAI;QACb;QAEA,OAAOA,CAAA,KAAM;MACf;IACF;IACAC,aAAA,EAAe;MAAEN,IAAA,EAAMC,MAAA;MAAQE,OAAA,EAAS;IAAE;IAC1CI,YAAA,EAAc;MAAEP,IAAA,EAAMC,MAAA;MAAQE,OAAA,EAAS;IAAE;IACzCK,QAAA,EAAU;MACRR,IAAA,EAAMC,MAAA;MACNE,OAAA,EAAS;MACTC,SAAA,EAAYC,CAAA,IAAcA,CAAA,IAAK;IACjC;EACF;EAEAI,MAAOZ,KAAA,EAAO;IACN,MAAAa,WAAA,GAAcC,QAAA,CAAS,MAAM;MAC7B,IAAAd,KAAA,CAAME,KAAA,KAAU,UAAUF,KAAA,CAAMS,aAAA,KAAkB,KAAKT,KAAA,CAAMU,YAAA,KAAiB,GAAG;QAAS;MAAE;MAChG,IAAI,CAACK,KAAA,CAAM,CAACf,KAAA,CAAME,KAAK,GAAG;QAAE,OAAOF,KAAA,CAAME,KAAA;MAAgB;MAClD,OAAAF,KAAA,CAAMU,YAAA,GAAeV,KAAA,CAAMS,aAAA;IAAA,CACnC;IAEK,MAAAO,cAAA,GAAiBF,QAAA,CAAS,MAAM;MAChC,KAACD,WAAA,CAAYI,KAAA,EAAO;QAAE;MAAO;MAEjC,OAAO;QAAEC,aAAA,EAAe,GAAG,IAAIL,WAAA,CAAYI,KAAA,GAAQ;MAAA;IAAO,CAC3D;IAEK,MAAAE,gBAAA,GAAmBL,QAAA,CAAS,MAAMd,KAAA,CAAMW,QAAA,GAAW,GAAGX,KAAA,CAAMW,QAAA,OAAe,MAAS;IAEnF;MAAEK,cAAA;MAAgBG;IAAA;EAC3B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}