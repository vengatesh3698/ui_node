{"ast":null,"code":"import { defineComponent, toRefs, computed, watch } from \"vue\";\nimport { u as useGridKeyboardNavigation } from \"../../hooks/grid-keyboard-navigation-48c0f4a7.mjs\";\nimport { u as useDatePicker } from \"../../hooks/use-picker-9ed9190b.mjs\";\nimport { u as useVaDatePickerCalendar } from \"./va-date-picker-calendar-hook-0b0369f2.mjs\";\nimport { V as VaDatePickerCell } from \"../VaDatePickerCell-af3b2fb6.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaDayPicker\",\n  components: {\n    VaDatePickerCell\n  },\n  props: {\n    monthNames: {\n      type: Array,\n      required: true\n    },\n    weekdayNames: {\n      type: Array,\n      required: true\n    },\n    firstWeekday: {\n      type: String,\n      default: \"Sunday\"\n    },\n    hideWeekDays: {\n      type: Boolean,\n      default: false\n    },\n    view: {\n      type: Object,\n      default: () => ({\n        type: \"day\"\n      })\n    },\n    modelValue: {\n      type: [Date, Array, Object]\n    },\n    mode: {\n      type: String,\n      default: \"auto\"\n    },\n    showOtherMonths: {\n      type: Boolean,\n      default: false\n    },\n    allowedDays: {\n      type: Function\n    },\n    weekends: {\n      type: Function\n    },\n    highlightWeekend: {\n      type: Boolean,\n      default: false\n    },\n    highlightToday: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    }\n  },\n  emits: [\"update:modelValue\", \"hover:day\", \"click:day\"],\n  setup(props, {\n    emit\n  }) {\n    const {\n      firstWeekday,\n      weekdayNames,\n      view\n    } = toRefs(props);\n    const {\n      calendarDates,\n      currentMonthStartIndex,\n      currentMonthEndIndex\n    } = useVaDatePickerCalendar(view, {\n      firstWeekday\n    });\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === \"Sunday\" ? weekdayNames.value : [...weekdayNames.value.slice(1), weekdayNames.value[0]];\n    });\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange\n    } = useDatePicker(\"day\", calendarDates, props, emit);\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value);\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value);\n    const {\n      focusedCellIndex,\n      containerAttributes\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: selectedValue => onClick(calendarDates.value[selectedValue])\n    });\n    watch(focusedCellIndex, index => {\n      hoveredIndex.value = index;\n    });\n    watch(hoveredIndex, index => {\n      focusedCellIndex.value = index;\n    });\n    const isOtherMonth = date => props.view.month !== date.getMonth();\n    const isDateDisabled = date => props.allowedDays === void 0 ? false : !props.allowedDays(date);\n    const isDateWeekend = date => {\n      if (props.weekends === void 0) {\n        return date.getDay() === 6 || date.getDay() === 0;\n      }\n      return props.weekends(date);\n    };\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      focusedCellIndex\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaDayPicker.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaDatePickerCell","props","monthNames","type","Array","required","weekdayNames","firstWeekday","String","default","hideWeekDays","Boolean","view","Object","modelValue","Date","mode","showOtherMonths","allowedDays","Function","weekends","highlightWeekend","highlightToday","readonly","color","emits","setup","emit","toRefs","calendarDates","currentMonthStartIndex","currentMonthEndIndex","useVaDatePickerCalendar","weekdayNamesComputed","computed","value","slice","hoveredIndex","onClick","isToday","isSelected","isInRange","useDatePicker","gridStartIndex","gridEndIndex","length","focusedCellIndex","containerAttributes","useGridKeyboardNavigation","rowSize","start","end","onSelected","selectedValue","watch","index","isOtherMonth","date","month","getMonth","isDateDisabled","isDateWeekend","getDay"],"sources":["../../../../../../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: Function as PropType<(date: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n"],"mappings":";;;;;AAwDA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,UAAA,EAAY;IAAEC;EAAiB;EAE/BC,KAAA,EAAO;IACLC,UAAA,EAAY;MAAEC,IAAA,EAAMC,KAAA;MAA6BC,QAAA,EAAU;IAAK;IAChEC,YAAA,EAAc;MAAEH,IAAA,EAAMC,KAAA;MAA6BC,QAAA,EAAU;IAAK;IAClEE,YAAA,EAAc;MAAEJ,IAAA,EAAMK,MAAA;MAAyCC,OAAA,EAAS;IAAS;IACjFC,YAAA,EAAc;MAAEP,IAAA,EAAMQ,OAAA;MAASF,OAAA,EAAS;IAAM;IAC9CG,IAAA,EAAM;MAAET,IAAA,EAAMU,MAAA;MAAoCJ,OAAA,EAASA,CAAA,MAAO;QAAEN,IAAA,EAAM;MAAA;IAAS;IACnFW,UAAA,EAAY;MAAEX,IAAA,EAAM,CAACY,IAAA,EAAMX,KAAA,EAAOS,MAAM;IAAoC;IAC5EG,IAAA,EAAM;MAAEb,IAAA,EAAMK,MAAA;MAAoCC,OAAA,EAAS;IAAO;IAClEQ,eAAA,EAAiB;MAAEd,IAAA,EAAMQ,OAAA;MAASF,OAAA,EAAS;IAAM;IACjDS,WAAA,EAAa;MAAEf,IAAA,EAAMgB;IAA8C;IACnEC,QAAA,EAAU;MAAEjB,IAAA,EAAMgB;IAA8C;IAChEE,gBAAA,EAAkB;MAAElB,IAAA,EAAMQ,OAAA;MAASF,OAAA,EAAS;IAAM;IAClDa,cAAA,EAAgB;MAAEnB,IAAA,EAAMQ,OAAA;MAASF,OAAA,EAAS;IAAM;IAChDc,QAAA,EAAU;MAAEpB,IAAA,EAAMQ,OAAA;MAASF,OAAA,EAAS;IAAM;IAC1Ce,KAAA,EAAO;MAAErB,IAAA,EAAMK,MAAA;MAAQC,OAAA,EAAS;IAAU;EAC5C;EAEAgB,KAAA,EAAO,CAAC,qBAAqB,aAAa,WAAW;EAErDC,MAAOzB,KAAA,EAAO;IAAE0B;EAAA,GAAQ;IACtB,MAAM;MAAEpB,YAAA;MAAcD,YAAA;MAAcM;IAAK,IAAIgB,MAAA,CAAO3B,KAAK;IAEnD;MAAE4B,aAAA;MAAeC,sBAAA;MAAwBC;IAAA,IAAyBC,uBAAA,CAAwBpB,IAAA,EAAM;MAAEL;IAAA,CAAc;IAEhH,MAAA0B,oBAAA,GAAuBC,QAAA,CAAS,MAAM;MAC1C,OAAO3B,YAAA,CAAa4B,KAAA,KAAU,WAC1B7B,YAAA,CAAa6B,KAAA,GACb,CAAC,GAAG7B,YAAA,CAAa6B,KAAA,CAAMC,KAAA,CAAM,CAAC,GAAG9B,YAAA,CAAa6B,KAAA,CAAM,CAAC,CAAC;IAAA,CAC3D;IAEK;MACJE,YAAA;MACAC,OAAA;MACAC,OAAA;MACAC,UAAA;MACAC;IACE,IAAAC,aAAA,CAAc,OAAOb,aAAA,EAAe5B,KAAA,EAAO0B,IAAI;IAEnD,MAAMgB,cAAA,GAAiBT,QAAA,CAAS,MAAMjC,KAAA,CAAMgB,eAAA,GAAkB,IAAIa,sBAAA,CAAuBK,KAAK;IACxF,MAAAS,YAAA,GAAeV,QAAA,CAAS,MAAMjC,KAAA,CAAMgB,eAAA,GAAkBY,aAAA,CAAcM,KAAA,CAAMU,MAAA,GAASd,oBAAA,CAAqBI,KAAK;IAE7G;MACJW,gBAAA;MAAkBC;IAAA,IAChBC,yBAAA,CAA0B;MAC5BC,OAAA,EAAS;MACTC,KAAA,EAAOP,cAAA;MACPQ,GAAA,EAAKP,YAAA;MACLQ,UAAA,EAAaC,aAAA,IAAkBf,OAAA,CAAQT,aAAA,CAAcM,KAAA,CAAMkB,aAAa,CAAC;IAAA,CAC1E;IAEKC,KAAA,CAAAR,gBAAA,EAAmBS,KAAA,IAAU;MAAElB,YAAA,CAAaF,KAAA,GAAQoB,KAAA;IAAA,CAAO;IAC3DD,KAAA,CAAAjB,YAAA,EAAekB,KAAA,IAAU;MAAET,gBAAA,CAAiBX,KAAA,GAAQoB,KAAA;IAAA,CAAO;IAEjE,MAAMC,YAAA,GAAgBC,IAAA,IAAexD,KAAA,CAAMW,IAAA,CAAK8C,KAAA,KAAUD,IAAA,CAAKE,QAAA;IACzD,MAAAC,cAAA,GAAkBH,IAAA,IAAexD,KAAA,CAAMiB,WAAA,KAAgB,SAAY,QAAQ,CAACjB,KAAA,CAAMiB,WAAA,CAAYuC,IAAI;IAClG,MAAAI,aAAA,GAAiBJ,IAAA,IAAe;MAChC,IAAAxD,KAAA,CAAMmB,QAAA,KAAa,QAAW;QAChC,OAAOqC,IAAA,CAAKK,MAAA,OAAa,KAAKL,IAAA,CAAKK,MAAA,CAAa;MAClD;MAEO,OAAA7D,KAAA,CAAMmB,QAAA,CAASqC,IAAI;IAAA;IAGrB;MACLpB,YAAA;MACAR,aAAA;MACAS,OAAA;MACAC,OAAA;MACAC,UAAA;MACAC,SAAA;MACAe,YAAA;MACAI,cAAA;MACAC,aAAA;MACAd,mBAAA;MACAd,oBAAA;MACAa;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}