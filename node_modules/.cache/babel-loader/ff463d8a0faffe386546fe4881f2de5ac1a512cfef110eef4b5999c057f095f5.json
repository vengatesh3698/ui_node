{"ast":null,"code":"import { defineComponent, h, Transition, shallowRef, toRef, computed, watchEffect, watch, onMounted, nextTick } from \"vue\";\nimport { V as VaButton } from \"../va-button/index-b0a9ef70.mjs\";\nimport { V as VaIcon } from \"../va-icon/index-0ebbc0f2.mjs\";\nimport { u as useBlur } from \"./hooks/useBlur-c1cff117.mjs\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useTrapFocus } from \"../../composables/useTrapFocus-2f0bdec2.mjs\";\nimport { u as useModalLevel } from \"../../composables/useModalLevel-52d5451f.mjs\";\nimport { u as useClickOutside } from \"../../composables/useClickOutside-df7e5a91.mjs\";\nimport { u as useWindow } from \"../../composables/useWindow-549880c7.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-f36510ca.mjs\";\nimport { u as useDocument } from \"../../composables/useDocument-5c9446c6.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst ModalElement = defineComponent({\n  name: \"ModalElement\",\n  inheritAttrs: false,\n  props: {\n    ...useComponentPresetProp,\n    isTransition: {\n      type: Boolean,\n      default: true\n    }\n  },\n  setup: (props, {\n    slots,\n    attrs\n  }) => () => {\n    var _a;\n    return props.isTransition ? h(Transition, {\n      ...attrs\n    }, slots) : (_a = slots.default) == null ? void 0 : _a.call(slots, attrs);\n  }\n});\nconst _sfc_main = defineComponent({\n  name: \"VaModal\",\n  inheritAttrs: false,\n  components: {\n    VaButton,\n    VaIcon,\n    ModalElement\n  },\n  emits: [...useStatefulEmits, \"cancel\", \"ok\", \"before-open\", \"open\", \"before-close\", \"close\", \"click-outside\"],\n  props: {\n    ...useStatefulProps,\n    modelValue: {\n      type: Boolean,\n      default: false\n    },\n    attachElement: {\n      type: String,\n      default: \"body\"\n    },\n    allowBodyScroll: {\n      type: Boolean,\n      default: false\n    },\n    disableAttachment: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: \"\"\n    },\n    message: {\n      type: String,\n      default: \"\"\n    },\n    okText: {\n      type: String,\n      default: \"$t:ok\"\n    },\n    cancelText: {\n      type: String,\n      default: \"$t:cancel\"\n    },\n    hideDefaultActions: {\n      type: Boolean,\n      default: false\n    },\n    fullscreen: {\n      type: Boolean,\n      default: false\n    },\n    mobileFullscreen: {\n      type: Boolean,\n      default: true\n    },\n    noDismiss: {\n      type: Boolean,\n      default: false\n    },\n    noOutsideDismiss: {\n      type: Boolean,\n      default: false\n    },\n    noEscDismiss: {\n      type: Boolean,\n      default: false\n    },\n    maxWidth: {\n      type: String,\n      default: \"\"\n    },\n    maxHeight: {\n      type: String,\n      default: \"\"\n    },\n    anchorClass: {\n      type: String\n    },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: value => [\"medium\", \"small\", \"large\"].includes(value)\n    },\n    fixedLayout: {\n      type: Boolean,\n      default: false\n    },\n    withoutTransitions: {\n      type: Boolean,\n      default: false\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    overlayOpacity: {\n      type: [Number, String],\n      default: 0.6\n    },\n    blur: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: [Number, String],\n      default: void 0\n    },\n    backgroundColor: {\n      type: String,\n      default: \"background-secondary\"\n    },\n    noPadding: {\n      type: Boolean,\n      default: false\n    },\n    beforeClose: {\n      type: Function\n    },\n    ariaCloseLabel: {\n      type: String,\n      default: \"$t:close\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const rootElement = shallowRef();\n    const modalDialog = shallowRef();\n    const {\n      trapFocusIn,\n      freeFocus\n    } = useTrapFocus();\n    const {\n      registerModal,\n      unregisterModal,\n      isTopLevelModal,\n      isLowestLevelModal\n    } = useModalLevel();\n    const {\n      getColor\n    } = useColors();\n    const {\n      textColorComputed\n    } = useTextColor(toRef(props, \"backgroundColor\"));\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const computedClass = computed(() => ({\n      \"va-modal--fullscreen\": props.fullscreen,\n      \"va-modal--mobile-fullscreen\": props.mobileFullscreen,\n      \"va-modal--fixed-layout\": props.fixedLayout,\n      \"va-modal--no-padding\": props.noPadding,\n      [`va-modal--size-${props.size}`]: props.size !== \"medium\"\n    }));\n    const computedModalContainerStyle = computed(() => ({\n      \"z-index\": props.zIndex\n    }));\n    const computedDialogStyle = computed(() => ({\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      color: textColorComputed.value,\n      background: getColor(props.backgroundColor)\n    }));\n    const computedOverlayStyles = computed(() => {\n      if (!props.overlay || !isLowestLevelModal.value) {\n        return;\n      }\n      return {\n        \"background-color\": `rgba(0, 0, 0, ${props.overlayOpacity})`,\n        \"z-index\": props.zIndex && Number(props.zIndex) - 1\n      };\n    });\n    const show = () => {\n      valueComputed.value = true;\n    };\n    const hide = cb => {\n      const _hide = () => {\n        valueComputed.value = false;\n        cb == null ? void 0 : cb();\n      };\n      props.beforeClose ? props.beforeClose(_hide) : _hide();\n    };\n    const toggle = () => {\n      valueComputed.value = !valueComputed.value;\n    };\n    const cancel = () => {\n      hide(() => emit(\"cancel\"));\n    };\n    const ok = () => {\n      hide(() => emit(\"ok\"));\n    };\n    const trapFocusInModal = () => {\n      nextTick(() => {\n        if (modalDialog.value) {\n          trapFocusIn(modalDialog.value);\n        }\n      });\n    };\n    const onBeforeEnterTransition = el => emit(\"before-open\", el);\n    const onAfterEnterTransition = el => emit(\"open\", el);\n    const onBeforeLeaveTransition = el => emit(\"before-close\", el);\n    const onAfterLeaveTransition = el => emit(\"close\", el);\n    const listenKeyUp = e => {\n      const hideModal = () => {\n        if (e.code === \"Escape\" && !props.noEscDismiss && !props.noDismiss && isTopLevelModal.value) {\n          cancel();\n        }\n      };\n      setTimeout(hideModal);\n    };\n    useClickOutside([modalDialog], () => {\n      if (!valueComputed.value || props.noOutsideDismiss || props.noDismiss || !isTopLevelModal.value) {\n        return;\n      }\n      emit(\"click-outside\");\n      cancel();\n    });\n    const window = useWindow();\n    watchEffect(() => {\n      var _a, _b;\n      if (valueComputed.value) {\n        (_a = window.value) == null ? void 0 : _a.addEventListener(\"keyup\", listenKeyUp);\n      } else {\n        (_b = window.value) == null ? void 0 : _b.removeEventListener(\"keyup\", listenKeyUp);\n      }\n    });\n    useBlur(toRef(props, \"blur\"), valueComputed);\n    const documentRef = useDocument();\n    const setBodyOverflow = overflow => {\n      if (!documentRef.value || props.allowBodyScroll) {\n        return;\n      }\n      documentRef.value.body.style.overflow = overflow;\n    };\n    watch(valueComputed, newValueComputed => {\n      if (newValueComputed) {\n        registerModal();\n        setBodyOverflow(\"hidden\");\n        return;\n      }\n      if (isLowestLevelModal.value) {\n        freeFocus();\n        setBodyOverflow(\"\");\n      }\n      unregisterModal();\n    });\n    watch(isTopLevelModal, newIsTopLevelModal => {\n      if (newIsTopLevelModal) {\n        trapFocusInModal();\n      }\n    });\n    onMounted(() => {\n      if (valueComputed.value) {\n        registerModal();\n      }\n    });\n    const publicMethods = {\n      ...useTranslation(),\n      show,\n      hide,\n      toggle,\n      cancel,\n      ok,\n      onBeforeEnterTransition,\n      onAfterEnterTransition,\n      onBeforeLeaveTransition,\n      onAfterLeaveTransition,\n      listenKeyUp\n    };\n    return {\n      getColor,\n      rootElement,\n      modalDialog,\n      valueComputed,\n      computedClass,\n      computedDialogStyle,\n      computedModalContainerStyle,\n      computedOverlayStyles,\n      ...publicMethods\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaModal.css';","map":{"version":3,"names":["ModalElement","defineComponent","name","inheritAttrs","props","useComponentPresetProp","isTransition","type","Boolean","default","setup","slots","attrs","h","Transition","_a","call","_sfc_main","components","VaButton","VaIcon","emits","useStatefulEmits","useStatefulProps","modelValue","attachElement","String","allowBodyScroll","disableAttachment","title","message","okText","cancelText","hideDefaultActions","fullscreen","mobileFullscreen","noDismiss","noOutsideDismiss","noEscDismiss","maxWidth","maxHeight","anchorClass","size","validator","value","includes","fixedLayout","withoutTransitions","overlay","overlayOpacity","Number","blur","zIndex","backgroundColor","noPadding","beforeClose","Function","ariaCloseLabel","emit","rootElement","shallowRef","modalDialog","trapFocusIn","freeFocus","useTrapFocus","registerModal","unregisterModal","isTopLevelModal","isLowestLevelModal","useModalLevel","getColor","useColors","textColorComputed","useTextColor","toRef","valueComputed","useStateful","computedClass","computed","computedModalContainerStyle","computedDialogStyle","color","background","computedOverlayStyles","show","hide","cb","_hide","toggle","cancel","ok","trapFocusInModal","nextTick","onBeforeEnterTransition","el","onAfterEnterTransition","onBeforeLeaveTransition","onAfterLeaveTransition","listenKeyUp","e","hideModal","code","setTimeout","useClickOutside","window","useWindow","watchEffect","addEventListener","_b","removeEventListener","useBlur","documentRef","useDocument","setBodyOverflow","overflow","body","style","watch","newValueComputed","newIsTopLevelModal","onMounted","publicMethods","useTranslation"],"sources":["../../../../../src/components/va-modal/VaModal.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    class=\"va-modal-entry\"\n    role=\"dialog\"\n    aria-modal=\"true\"\n    :aria-labelledby=\"title\"\n    :class=\"$props.anchorClass\"\n  >\n    <div v-if=\"$slots.anchor\" class=\"va-modal__anchor\">\n      <slot name=\"anchor\" v-bind=\"{ show, hide, toggle }\" />\n    </div>\n\n    <teleport :to=\"attachElement\" :disabled=\"$props.disableAttachment\">\n      <modal-element\n        name=\"va-modal\"\n        :isTransition=\"!$props.withoutTransitions\"\n        appear\n        :duration=\"300\"\n        v-bind=\"$attrs\"\n        @beforeEnter=\"onBeforeEnterTransition\"\n        @afterEnter=\"onAfterEnterTransition\"\n        @beforeLeave=\"onBeforeLeaveTransition\"\n        @afterLeave=\"onAfterLeaveTransition\"\n      >\n        <div class=\"va-modal\" v-if=\"valueComputed\">\n          <div\n            v-if=\"$props.overlay\"\n            class=\"va-modal__overlay\"\n            :style=\"computedOverlayStyles\"\n          />\n          <div\n            class=\"va-modal__container\"\n            :style=\"computedModalContainerStyle\"\n          >\n            <div\n              ref=\"modalDialog\"\n              class=\"va-modal__dialog\"\n              :class=\"computedClass\"\n              :style=\"computedDialogStyle\"\n            >\n              <va-icon\n                v-if=\"$props.fullscreen\"\n                name=\"va-close\"\n                class=\"va-modal__close\"\n                role=\"button\"\n                :aria-label=\"tp($props.ariaCloseLabel)\"\n                tabindex=\"0\"\n                @click=\"cancel\"\n                @keydown.space=\"cancel\"\n                @keydown.enter=\"cancel\"\n              />\n              <div\n                class=\"va-modal__inner\"\n                :style=\"{ maxWidth: $props.maxWidth, maxHeight: $props.maxHeight }\"\n              >\n                <div v-if=\"$slots.content\">\n                  <slot name=\"content\" v-bind=\"{ cancel, ok }\" />\n                </div>\n                <template v-if=\"!$slots.content\">\n                  <div\n                    v-if=\"title\"\n                    class=\"va-modal__title\"\n                    :style=\"{ color: getColor('primary') }\"\n                  >\n                    {{ $props.title }}\n                  </div>\n                  <div\n                    v-if=\"$slots.header\"\n                    class=\"va-modal__header\"\n                  >\n                    <slot name=\"header\" />\n                  </div>\n                  <div\n                    v-if=\"$props.message\"\n                    class=\"va-modal__message\"\n                  >\n                    {{ $props.message }}\n                  </div>\n                  <div\n                    v-if=\"$slots.default\"\n                    class=\"va-modal__message\"\n                  >\n                    <slot />\n                  </div>\n                  <div\n                    v-if=\"($props.cancelText || $props.okText) && !$props.hideDefaultActions\"\n                    class=\"va-modal__footer\"\n                  >\n                    <va-button\n                      v-if=\"$props.cancelText\"\n                      preset=\"secondary\"\n                      color=\"secondary\"\n                      class=\"va-modal__default-cancel-button\"\n                      @click=\"cancel\"\n                    >\n                      {{ tp($props.cancelText) }}\n                    </va-button>\n                    <va-button @click=\"ok\">\n                      {{ tp($props.okText) }}\n                    </va-button>\n                  </div>\n                  <div\n                    v-if=\"$slots.footer\"\n                    class=\"va-modal__footer\"\n                  >\n                    <slot name=\"footer\" />\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </modal-element>\n    </teleport>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport type { PropType, StyleValue } from 'vue'\nimport {\n  Transition,\n  h,\n  defineComponent,\n  computed,\n  shallowRef,\n  toRef,\n  watchEffect,\n  onMounted,\n  nextTick, watch,\n} from 'vue'\n\nimport {\n  useStateful, useStatefulProps, useStatefulEmits,\n  useColors, useTextColor,\n  useWindow,\n  useComponentPresetProp,\n  useTrapFocus,\n  useModalLevel,\n  useTranslation,\n  useClickOutside,\n  useDocument,\n} from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaIcon } from '../va-icon'\n\nimport { useBlur } from './hooks/useBlur'\n\nconst ModalElement = defineComponent({\n  name: 'ModalElement',\n  inheritAttrs: false,\n  props: {\n    ...useComponentPresetProp,\n    isTransition: { type: Boolean, default: true },\n  },\n  setup: (props, { slots, attrs }) => () => props.isTransition\n    ? h(Transition, { ...attrs }, slots)\n    : slots.default?.(attrs),\n})\n\nexport default defineComponent({\n  name: 'VaModal',\n  inheritAttrs: false,\n  components: { VaButton, VaIcon, ModalElement },\n  emits: [\n    ...useStatefulEmits,\n    'cancel', 'ok', 'before-open', 'open', 'before-close', 'close', 'click-outside',\n  ],\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Boolean, default: false },\n    attachElement: { type: String, default: 'body' },\n    allowBodyScroll: { type: Boolean, default: false },\n    disableAttachment: { type: Boolean, default: false },\n    title: { type: String, default: '' },\n    message: { type: String, default: '' },\n    okText: { type: String, default: '$t:ok' },\n    cancelText: { type: String, default: '$t:cancel' },\n    hideDefaultActions: { type: Boolean, default: false },\n    fullscreen: { type: Boolean, default: false },\n    mobileFullscreen: { type: Boolean, default: true },\n    noDismiss: { type: Boolean, default: false },\n    noOutsideDismiss: { type: Boolean, default: false },\n    noEscDismiss: { type: Boolean, default: false },\n    maxWidth: { type: String, default: '' },\n    maxHeight: { type: String, default: '' },\n    anchorClass: { type: String },\n    size: {\n      type: String as PropType<'medium' | 'small' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['medium', 'small', 'large'].includes(value),\n    },\n    fixedLayout: { type: Boolean, default: false },\n    withoutTransitions: { type: Boolean, default: false },\n    overlay: { type: Boolean, default: true },\n    overlayOpacity: { type: [Number, String], default: 0.6 },\n    blur: { type: Boolean, default: false },\n    zIndex: { type: [Number, String], default: undefined },\n    backgroundColor: { type: String, default: 'background-secondary' },\n    noPadding: { type: Boolean, default: false },\n    beforeClose: { type: Function as PropType<(hide: () => void) => any> },\n    ariaCloseLabel: { type: String, default: '$t:close' },\n  },\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n    const modalDialog = shallowRef<HTMLElement>()\n    const { trapFocusIn, freeFocus } = useTrapFocus()\n\n    const {\n      registerModal,\n      unregisterModal,\n      isTopLevelModal,\n      isLowestLevelModal,\n    } = useModalLevel()\n\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'backgroundColor'))\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedClass = computed(() => ({\n      'va-modal--fullscreen': props.fullscreen,\n      'va-modal--mobile-fullscreen': props.mobileFullscreen,\n      'va-modal--fixed-layout': props.fixedLayout,\n      'va-modal--no-padding': props.noPadding,\n      [`va-modal--size-${props.size}`]: props.size !== 'medium',\n    }))\n    const computedModalContainerStyle = computed(() => ({ 'z-index': props.zIndex } as StyleValue))\n    const computedDialogStyle = computed(() => ({\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight,\n      color: textColorComputed.value,\n      background: getColor(props.backgroundColor),\n    }))\n    const computedOverlayStyles = computed(() => {\n      // NOTE Not sure exactly what that does.\n      // Supposedly solves some case when background wasn't shown.\n      // As a side effect removes background from nested modals.\n\n      if (!props.overlay || !isLowestLevelModal.value) { return }\n\n      return {\n        'background-color': `rgba(0, 0, 0, ${props.overlayOpacity})`,\n        'z-index': props.zIndex && Number(props.zIndex) - 1,\n      } as StyleValue\n    })\n\n    const show = () => { valueComputed.value = true }\n    const hide = (cb?: () => void) => {\n      const _hide = () => {\n        valueComputed.value = false\n        cb?.()\n      }\n      props.beforeClose ? props.beforeClose(_hide) : _hide()\n    }\n    const toggle = () => { valueComputed.value = !valueComputed.value }\n    const cancel = () => { hide(() => emit('cancel')) }\n    const ok = () => { hide(() => emit('ok')) }\n    const trapFocusInModal = () => {\n      nextTick(() => { // trapFocusIn use querySelector, so need nextTick, to be sure, that DOM has been updated after modal has been opened\n        if (modalDialog.value) {\n          trapFocusIn(modalDialog.value)\n        }\n      })\n    }\n\n    const onBeforeEnterTransition = (el: HTMLElement) => emit('before-open', el)\n    const onAfterEnterTransition = (el: HTMLElement) => emit('open', el)\n    const onBeforeLeaveTransition = (el: HTMLElement) => emit('before-close', el)\n    const onAfterLeaveTransition = (el: HTMLElement) => emit('close', el)\n\n    const listenKeyUp = (e: KeyboardEvent) => {\n      const hideModal = () => {\n        if (e.code === 'Escape' && !props.noEscDismiss && !props.noDismiss && isTopLevelModal.value) {\n          cancel()\n        }\n      }\n\n      setTimeout(hideModal)\n    }\n\n    useClickOutside([modalDialog], () => {\n      if (!valueComputed.value || props.noOutsideDismiss || props.noDismiss || !isTopLevelModal.value) { return }\n\n      emit('click-outside')\n      cancel()\n    })\n\n    const window = useWindow()\n\n    watchEffect(() => {\n      if (valueComputed.value) {\n        window.value?.addEventListener('keyup', listenKeyUp)\n      } else {\n        window.value?.removeEventListener('keyup', listenKeyUp)\n      }\n    })\n\n    useBlur(toRef(props, 'blur'), valueComputed)\n\n    const documentRef = useDocument()\n    const setBodyOverflow = (overflow: string) => {\n      if (!documentRef.value || props.allowBodyScroll) { return }\n\n      documentRef.value.body.style.overflow = overflow\n    }\n\n    watch(valueComputed, newValueComputed => { // watch for open/close modal\n      if (newValueComputed) {\n        registerModal()\n        setBodyOverflow('hidden')\n        return\n      }\n\n      if (isLowestLevelModal.value) {\n        freeFocus()\n        setBodyOverflow('')\n      }\n      unregisterModal()\n    })\n\n    watch(isTopLevelModal, newIsTopLevelModal => {\n      if (newIsTopLevelModal) {\n        trapFocusInModal()\n      }\n    })\n\n    onMounted(() => {\n      if (valueComputed.value) { // case when open modal with this.$vaModal.init\n        registerModal()\n      }\n    })\n\n    const publicMethods = {\n      ...useTranslation(),\n      show,\n      hide,\n      toggle,\n      cancel,\n      ok,\n      onBeforeEnterTransition,\n      onAfterEnterTransition,\n      onBeforeLeaveTransition,\n      onAfterLeaveTransition,\n      listenKeyUp,\n    }\n\n    return {\n      getColor,\n      rootElement,\n      modalDialog,\n      valueComputed,\n      computedClass,\n      computedDialogStyle,\n      computedModalContainerStyle,\n      computedOverlayStyles,\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-modal-overlay-background--blurred > :not(div[class*=\"va-\"]) {\n  filter: blur(var(--va-modal-overlay-background-blur-radius));\n  position: absolute;\n  height: 100%;\n  width: 100%;\n}\n\n.va-modal {\n  position: var(--va-modal-position);\n  display: var(--va-modal-display);\n  align-items: var(--va-modal-align-items);\n  justify-content: var(--va-modal-justify-content);\n  width: var(--va-modal-width);\n  height: var(--va-modal-height);\n  top: var(--va-modal-top);\n  left: var(--va-modal-left);\n  overflow: var(--va-modal-overflow);\n  outline: var(--va-modal-outline);\n  z-index: var(--va-modal-z-index);\n  font-family: var(--va-font-family);\n\n  &__title {\n    margin-bottom: 1.5rem;\n\n    @include va-title();\n  }\n\n  &__container {\n    z-index: var(--va-modal-container-z-index);\n    max-width: 100%;\n  }\n\n  &-enter-from &__container,\n  &-leave-to &__container {\n    opacity: 0;\n    transform: translateY(-30%);\n  }\n\n  &-enter-active &__container,\n  &-leave-active &__container {\n    transition: opacity var(--va-modal-opacity-transition), transform var(--va-modal-transform-transition);\n  }\n\n  &__dialog {\n    min-height: var(--va-modal-dialog-min-height);\n    height: var(--va-modal-dialog-height);\n    border-radius: var(--va-modal-dialog-border-radius, var(--va-block-border-radius));\n    margin: var(--va-modal-dialog-margin);\n    box-shadow: var(--va-modal-dialog-box-shadow, var(--va-block-box-shadow));\n    max-width: var(--va-modal-dialog-max-width);\n    max-height: var(--va-modal-dialog-max-height);\n    position: var(--va-modal-dialog-position);\n    overflow: auto;\n  }\n\n  &__overlay {\n    position: var(--va-modal-overlay-position);\n    top: var(--va-modal-overlay-top);\n    left: var(--va-modal-overlay-left);\n    z-index: var(--va-modal-overlay-z-index);\n    width: var(--va-modal-overlay-width);\n    height: var(--va-modal-overlay-height);\n  }\n\n  &-enter-from &__overlay,\n  &-leave-to &__overlay {\n    opacity: 0;\n  }\n\n  &-enter-active &__overlay,\n  &-leave-active &_overlay {\n    transition: var(--va-modal-overlay-opacity-transition);\n  }\n\n  &--fullscreen {\n    min-width: 100vw !important;\n    min-height: 100vh !important;\n    border-radius: 0;\n    margin: 0;\n  }\n\n  &--mobile-fullscreen {\n    @media all and (max-width: map-get($grid-breakpoints, sm)) {\n      margin: 0 !important;\n      min-width: 100vw !important;\n      min-height: 100vh !important;\n      border-radius: 0;\n    }\n  }\n\n  &--size {\n    &-small {\n      max-width: map_get($grid-breakpoints, sm);\n\n      @media all and (max-width: map-get($grid-breakpoints, sm)) {\n        max-width: 100vw !important;\n      }\n\n      .va-modal__inner {\n        max-width: map_get($grid-breakpoints, sm);\n\n        @media all and (max-width: map-get($grid-breakpoints, sm)) {\n          max-width: 100vw !important;\n        }\n      }\n    }\n\n    &-large {\n      max-width: map-get($grid-breakpoints, lg);\n\n      .va-modal__inner {\n        max-width: map-get($grid-breakpoints, lg);\n      }\n    }\n  }\n\n  &--fixed-layout {\n    .va-modal__inner {\n      overflow: hidden;\n      padding: var(--va-modal-padding-top) 0 var(--va-modal-padding-bottom);\n      max-height: calc(100vh - 2rem);\n\n      .va-modal__header,\n      .va-modal__footer,\n      .va-modal__title {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n      }\n\n      .va-modal__message {\n        padding: 0 var(--va-modal-padding-right) 0 var(--va-modal-padding-left);\n        overflow: auto;\n      }\n    }\n\n    .va-modal__dialog {\n      overflow: hidden;\n    }\n  }\n\n  &--no-padding {\n    .va-modal__inner {\n      padding: 0;\n    }\n  }\n\n  &__message {\n    margin-bottom: 1.5rem;\n  }\n\n  &__inner {\n    overflow: visible;\n    display: flex;\n    position: relative;\n    flex-flow: column;\n    padding: var(--va-modal-padding);\n    max-width: map_get($grid-breakpoints, md);\n    margin: auto;\n\n    > div:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n\n  &__close {\n    position: absolute;\n    top: 1rem;\n    right: 1rem;\n    cursor: pointer;\n    font-size: 1.5rem;\n    font-style: normal;\n    color: var(--va-secondary);\n    z-index: 1;\n  }\n\n  &__default-cancel-button {\n    margin-right: 0.75rem;\n  }\n\n  &__footer {\n    margin-top: auto;\n    min-height: fit-content;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n\n    &:last-of-type {\n      margin-bottom: 0;\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}