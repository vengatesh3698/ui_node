{"ast":null,"code":"import { getCurrentInstance, computed } from \"vue\";\nimport { u as useColors } from \"../../../composables/useColors-f23d24ff.mjs\";\nconst useButtonBackground = (colorComputed, isPressed, isHovered) => {\n  const instance = getCurrentInstance();\n  if (!instance) {\n    throw new Error(\"`useButtonBackground` hook must be used only inside of setup function!\");\n  }\n  const props = instance.props;\n  const {\n    getColor,\n    getGradientBackground\n  } = useColors();\n  const backgroundColor = computed(() => {\n    if (props.plain) {\n      return \"transparent\";\n    }\n    return props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value;\n  });\n  const hoveredBgState = computed(() => !props.plain && isHovered.value);\n  const pressedBgState = computed(() => !props.plain && isPressed.value);\n  const backgroundColorOpacity = computed(() => {\n    if (pressedBgState.value && props.pressedBehavior === \"opacity\") {\n      return props.pressedOpacity;\n    }\n    if (hoveredBgState.value && props.hoverBehavior === \"opacity\") {\n      return props.hoverOpacity;\n    }\n    return props.backgroundOpacity;\n  });\n  const hoveredMaskState = computed(() => hoveredBgState.value && props.hoverBehavior === \"mask\");\n  const pressedMaskState = computed(() => pressedBgState.value && props.pressedBehavior === \"mask\");\n  const backgroundMaskOpacity = computed(() => {\n    if (pressedMaskState.value) {\n      return props.pressedOpacity;\n    }\n    if (hoveredMaskState.value) {\n      return props.hoverOpacity;\n    }\n    return 0;\n  });\n  const backgroundMaskColor = computed(() => {\n    if (pressedMaskState.value) {\n      return getColor(props.pressedMaskColor);\n    }\n    if (hoveredMaskState.value) {\n      return getColor(props.hoverMaskColor);\n    }\n    return \"transparent\";\n  });\n  return {\n    backgroundColor,\n    backgroundColorOpacity,\n    backgroundMaskOpacity,\n    backgroundMaskColor\n  };\n};\nexport { useButtonBackground as u };","map":{"version":3,"names":["useButtonBackground","colorComputed","isPressed","isHovered","instance","getCurrentInstance","Error","props","getColor","getGradientBackground","useColors","backgroundColor","computed","plain","gradient","value","hoveredBgState","pressedBgState","backgroundColorOpacity","pressedBehavior","pressedOpacity","hoverBehavior","hoverOpacity","backgroundOpacity","hoveredMaskState","pressedMaskState","backgroundMaskOpacity","backgroundMaskColor","pressedMaskColor","hoverMaskColor"],"sources":["../../../../../../src/components/va-button/hooks/useButtonBackground.ts"],"sourcesContent":["import { computed, Ref, ComputedRef, getCurrentInstance } from 'vue'\n\nimport { useColors } from '../../../composables'\n\nimport type { ButtonPropsTypes } from '../types'\n\ntype UseButtonBackground = (\n  colorComputed: Ref<string>,\n  isPressed: Ref<boolean>,\n  isHovered: Ref<boolean>,\n  ) => {\n  backgroundMaskOpacity: ComputedRef<number>;\n  backgroundMaskColor: ComputedRef<string>;\n  backgroundColor: ComputedRef<string>;\n  backgroundColorOpacity: ComputedRef<number>;\n}\n\nexport const useButtonBackground: UseButtonBackground = (\n  colorComputed,\n  isPressed,\n  isHovered,\n) => {\n  const instance = getCurrentInstance()\n  if (!instance) { throw new Error('`useButtonBackground` hook must be used only inside of setup function!') }\n  const props = instance.props as Required<ButtonPropsTypes>\n\n  const { getColor, getGradientBackground } = useColors()\n\n  const backgroundColor = computed(() => {\n    if (props.plain) { return 'transparent' }\n\n    return props.gradient\n      ? getGradientBackground(colorComputed.value)\n      : colorComputed.value\n  })\n\n  const hoveredBgState = computed(() => !props.plain && isHovered.value)\n  const pressedBgState = computed(() => !props.plain && isPressed.value)\n\n  const backgroundColorOpacity = computed(() => {\n    if (pressedBgState.value && props.pressedBehavior === 'opacity') { return props.pressedOpacity }\n    if (hoveredBgState.value && props.hoverBehavior === 'opacity') { return props.hoverOpacity }\n\n    return props.backgroundOpacity\n  })\n\n  const hoveredMaskState = computed(() => hoveredBgState.value && props.hoverBehavior === 'mask')\n  const pressedMaskState = computed(() => pressedBgState.value && props.pressedBehavior === 'mask')\n\n  const backgroundMaskOpacity = computed(() => {\n    if (pressedMaskState.value) { return props.pressedOpacity }\n    if (hoveredMaskState.value) { return props.hoverOpacity }\n\n    return 0\n  })\n  const backgroundMaskColor = computed(() => {\n    if (pressedMaskState.value) { return getColor(props.pressedMaskColor) }\n    if (hoveredMaskState.value) { return getColor(props.hoverMaskColor) }\n\n    return 'transparent'\n  })\n\n  return {\n    backgroundColor,\n    backgroundColorOpacity,\n    backgroundMaskOpacity,\n    backgroundMaskColor,\n  }\n}\n"],"mappings":";;AAiBO,MAAMA,mBAAA,GAA2CA,CACtDC,aAAA,EACAC,SAAA,EACAC,SAAA,KACG;EACH,MAAMC,QAAA,GAAWC,kBAAA;EACjB,IAAI,CAACD,QAAA,EAAU;IAAQ,UAAIE,KAAA,CAAM,wEAAwE;EAAE;EAC3G,MAAMC,KAAA,GAAQH,QAAA,CAASG,KAAA;EAEvB,MAAM;IAAEC,QAAA;IAAUC;EAAsB,IAAIC,SAAA,CAAU;EAEhD,MAAAC,eAAA,GAAkBC,QAAA,CAAS,MAAM;IACrC,IAAIL,KAAA,CAAMM,KAAA,EAAO;MAAS;IAAc;IAExC,OAAON,KAAA,CAAMO,QAAA,GACTL,qBAAA,CAAsBR,aAAA,CAAcc,KAAK,IACzCd,aAAA,CAAcc,KAAA;EAAA,CACnB;EAED,MAAMC,cAAA,GAAiBJ,QAAA,CAAS,MAAM,CAACL,KAAA,CAAMM,KAAA,IAASV,SAAA,CAAUY,KAAK;EACrE,MAAME,cAAA,GAAiBL,QAAA,CAAS,MAAM,CAACL,KAAA,CAAMM,KAAA,IAASX,SAAA,CAAUa,KAAK;EAE/D,MAAAG,sBAAA,GAAyBN,QAAA,CAAS,MAAM;IAC5C,IAAIK,cAAA,CAAeF,KAAA,IAASR,KAAA,CAAMY,eAAA,KAAoB,WAAW;MAAE,OAAOZ,KAAA,CAAMa,cAAA;IAAe;IAC/F,IAAIJ,cAAA,CAAeD,KAAA,IAASR,KAAA,CAAMc,aAAA,KAAkB,WAAW;MAAE,OAAOd,KAAA,CAAMe,YAAA;IAAa;IAE3F,OAAOf,KAAA,CAAMgB,iBAAA;EAAA,CACd;EAED,MAAMC,gBAAA,GAAmBZ,QAAA,CAAS,MAAMI,cAAA,CAAeD,KAAA,IAASR,KAAA,CAAMc,aAAA,KAAkB,MAAM;EAC9F,MAAMI,gBAAA,GAAmBb,QAAA,CAAS,MAAMK,cAAA,CAAeF,KAAA,IAASR,KAAA,CAAMY,eAAA,KAAoB,MAAM;EAE1F,MAAAO,qBAAA,GAAwBd,QAAA,CAAS,MAAM;IAC3C,IAAIa,gBAAA,CAAiBV,KAAA,EAAO;MAAE,OAAOR,KAAA,CAAMa,cAAA;IAAe;IAC1D,IAAII,gBAAA,CAAiBT,KAAA,EAAO;MAAE,OAAOR,KAAA,CAAMe,YAAA;IAAa;IAEjD;EAAA,CACR;EACK,MAAAK,mBAAA,GAAsBf,QAAA,CAAS,MAAM;IACzC,IAAIa,gBAAA,CAAiBV,KAAA,EAAO;MAAS,OAAAP,QAAA,CAASD,KAAA,CAAMqB,gBAAgB;IAAE;IACtE,IAAIJ,gBAAA,CAAiBT,KAAA,EAAO;MAAS,OAAAP,QAAA,CAASD,KAAA,CAAMsB,cAAc;IAAE;IAE7D;EAAA,CACR;EAEM;IACLlB,eAAA;IACAO,sBAAA;IACAQ,qBAAA;IACAC;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}