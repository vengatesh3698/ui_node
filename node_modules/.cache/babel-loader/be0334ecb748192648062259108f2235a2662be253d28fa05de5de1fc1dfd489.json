{"ast":null,"code":"import { u as unwrapEl } from \"../utils/unwrapEl-55936fea.mjs\";\nimport { f as focusElement, b as blurElement } from \"../utils/focus-7a563842.mjs\";\nimport { ref, onMounted, onBeforeUnmount } from \"vue\";\nconst useFocusEmits = [\"focus\", \"blur\"];\nfunction useFocus(el, emit) {\n  const isFocused = ref(false);\n  const onFocus = e => {\n    isFocused.value = true;\n    emit == null ? void 0 : emit(\"focus\", e);\n  };\n  const onBlur = e => {\n    isFocused.value = false;\n    emit == null ? void 0 : emit(\"blur\", e);\n  };\n  const focus = () => {\n    if (!(el == null ? void 0 : el.value)) {\n      return;\n    }\n    focusElement(unwrapEl(el == null ? void 0 : el.value));\n  };\n  const blur = () => {\n    if (!(el == null ? void 0 : el.value)) {\n      return;\n    }\n    blurElement(unwrapEl(el == null ? void 0 : el.value));\n  };\n  let element;\n  onMounted(() => {\n    var _a;\n    element = ((_a = el == null ? void 0 : el.value) == null ? void 0 : _a.$el) ?? (el == null ? void 0 : el.value);\n    if (element) {\n      element.addEventListener(\"focus\", onFocus);\n      element.addEventListener(\"blur\", onBlur);\n    }\n  });\n  onBeforeUnmount(() => {\n    if (element) {\n      element.removeEventListener(\"focus\", onFocus);\n      element.removeEventListener(\"blur\", onBlur);\n    }\n  });\n  return {\n    isFocused,\n    onFocus,\n    onBlur,\n    focus,\n    blur\n  };\n}\nexport { useFocusEmits as a, useFocus as u };","map":{"version":3,"names":["useFocusEmits","useFocus","el","emit","isFocused","ref","onFocus","e","value","onBlur","focus","focusElement","unwrapEl","blur","blurElement","element","onMounted","_a","$el","addEventListener","onBeforeUnmount","removeEventListener"],"sources":["../../../../src/composables/useFocus.ts"],"sourcesContent":["import { unwrapEl } from './../utils/unwrapEl'\nimport { focusElement, blurElement } from './../utils/focus'\nimport { ref, onMounted, onBeforeUnmount, Ref } from 'vue'\n\nexport const useFocusEmits = ['focus', 'blur'] as const\n\nexport function useFocus (\n  el?: Ref<HTMLElement | null | undefined>,\n  emit?: (event: 'focus' | 'blur', e?: Event) => void,\n) {\n  const isFocused = ref(false)\n\n  const onFocus = (e?: Event) => {\n    isFocused.value = true\n    emit?.('focus', e)\n  }\n\n  const onBlur = (e?: Event) => {\n    isFocused.value = false\n    emit?.('blur', e)\n  }\n\n  const focus = (): void => {\n    if (!el?.value) { return }\n    focusElement(unwrapEl(el?.value))\n  }\n\n  const blur = (): void => {\n    if (!el?.value) { return }\n    blurElement(unwrapEl(el?.value))\n  }\n\n  let element: any\n  onMounted(() => {\n    element = (el?.value as any)?.$el ?? el?.value\n    if (element) {\n      element.addEventListener('focus', onFocus)\n      element.addEventListener('blur', onBlur)\n    }\n  })\n  onBeforeUnmount(() => {\n    if (element) {\n      element.removeEventListener('focus', onFocus)\n      element.removeEventListener('blur', onBlur)\n    }\n  })\n\n  return {\n    isFocused,\n    onFocus,\n    onBlur,\n    focus,\n    blur,\n  }\n}\n"],"mappings":";;;AAIa,MAAAA,aAAA,GAAgB,CAAC,SAAS,MAAM;AAE7B,SAAAC,SACdC,EAAA,EACAC,IAAA,EACA;EACM,MAAAC,SAAA,GAAYC,GAAA,CAAI,KAAK;EAErB,MAAAC,OAAA,GAAWC,CAAA,IAAc;IAC7BH,SAAA,CAAUI,KAAA,GAAQ;IAClBL,IAAA,oBAAAA,IAAA,CAAO,SAASI,CAAA;EAAC;EAGb,MAAAE,MAAA,GAAUF,CAAA,IAAc;IAC5BH,SAAA,CAAUI,KAAA,GAAQ;IAClBL,IAAA,oBAAAA,IAAA,CAAO,QAAQI,CAAA;EAAC;EAGlB,MAAMG,KAAA,GAAQA,CAAA,KAAY;IACpB,MAACR,EAAA,oBAAAA,EAAA,CAAIM,KAAA,GAAO;MAAE;IAAO;IACZG,YAAA,CAAAC,QAAA,CAASV,EAAA,oBAAAA,EAAA,CAAIM,KAAK,CAAC;EAAA;EAGlC,MAAMK,IAAA,GAAOA,CAAA,KAAY;IACnB,MAACX,EAAA,oBAAAA,EAAA,CAAIM,KAAA,GAAO;MAAE;IAAO;IACbM,WAAA,CAAAF,QAAA,CAASV,EAAA,oBAAAA,EAAA,CAAIM,KAAK,CAAC;EAAA;EAG7B,IAAAO,OAAA;EACJC,SAAA,CAAU,MAAM;;IACHD,OAAA,KAAAE,EAAA,GAAAf,EAAA,oBAAAA,EAAA,CAAIM,KAAA,KAAJ,gBAAAS,EAAA,CAAmBC,GAAA,MAAOhB,EAAA,oBAAAA,EAAA,CAAIM,KAAA;IACzC,IAAIO,OAAA,EAAS;MACHA,OAAA,CAAAI,gBAAA,CAAiB,SAASb,OAAO;MACjCS,OAAA,CAAAI,gBAAA,CAAiB,QAAQV,MAAM;IACzC;EAAA,CACD;EACDW,eAAA,CAAgB,MAAM;IACpB,IAAIL,OAAA,EAAS;MACHA,OAAA,CAAAM,mBAAA,CAAoB,SAASf,OAAO;MACpCS,OAAA,CAAAM,mBAAA,CAAoB,QAAQZ,MAAM;IAC5C;EAAA,CACD;EAEM;IACLL,SAAA;IACAE,OAAA;IACAG,MAAA;IACAC,KAAA;IACAG;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}