{"ast":null,"code":"import { ref } from \"vue\";\nimport { u as useEvent } from \"../../composables/useEvent-d1ae925d.mjs\";\nconst useSplitDraggerProps = {\n  vertical: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n};\nconst useSplitDragger = (containerSizeComputed, splitterPositionComputed, props) => {\n  const isDragging = ref(false);\n  const dragStartPosition = ref(0);\n  const dragStartSplitterPosition = ref(0);\n  const currentSplitterPosition = ref(0);\n  const getEventPosition = (e, eventName) => {\n    const event = e.type === eventName ? e : e.changedTouches[0];\n    return props.vertical ? event.pageY : event.pageX;\n  };\n  const startDragging = e => {\n    if (props.disabled || !containerSizeComputed.value) {\n      return;\n    }\n    isDragging.value = true;\n    dragStartPosition.value = getEventPosition(e, \"mousedown\");\n    dragStartSplitterPosition.value = splitterPositionComputed.value;\n  };\n  const processDragging = e => {\n    if (!isDragging.value) {\n      return;\n    }\n    const currentPosition = getEventPosition(e, \"mousemove\");\n    const distance = currentPosition - dragStartPosition.value;\n    currentSplitterPosition.value = dragStartSplitterPosition.value + Math.floor(distance / containerSizeComputed.value * 100);\n  };\n  const stopDragging = () => {\n    isDragging.value = false;\n  };\n  useEvent([\"mousemove\", \"touchmove\"], processDragging);\n  useEvent([\"mouseup\", \"touchcancel\"], stopDragging);\n  return {\n    isDragging,\n    startDragging,\n    currentSplitterPosition\n  };\n};\nexport { useSplitDragger as a, useSplitDraggerProps as u };","map":{"version":3,"names":["useSplitDraggerProps","vertical","type","Boolean","default","disabled","useSplitDragger","containerSizeComputed","splitterPositionComputed","props","isDragging","ref","dragStartPosition","dragStartSplitterPosition","currentSplitterPosition","getEventPosition","e","eventName","event","changedTouches","pageY","pageX","startDragging","value","processDragging","currentPosition","distance","Math","floor","stopDragging","useEvent"],"sources":["../../../../../src/components/va-split/useSplitDragger.ts"],"sourcesContent":["import { ExtractPropTypes, ref, Ref } from 'vue'\n\nimport { useEvent } from '../../composables'\n\nexport const useSplitDraggerProps = {\n  vertical: { type: Boolean, default: false },\n  disabled: { type: Boolean, default: false },\n}\n\nexport const useSplitDragger = (\n  containerSizeComputed: Ref<number | undefined>,\n  splitterPositionComputed: Ref<number>,\n  props: ExtractPropTypes<typeof useSplitDraggerProps>,\n) => {\n  const isDragging = ref(false)\n  const dragStartPosition = ref(0)\n  const dragStartSplitterPosition = ref(0)\n  const currentSplitterPosition = ref(0)\n\n  const getEventPosition = (e: MouseEvent | TouchEvent, eventName: 'mousemove' | 'mousedown'): number => {\n    const event = e.type === eventName ? e as MouseEvent : (e as TouchEvent).changedTouches[0]\n    return props.vertical ? event.pageY : event.pageX\n  }\n\n  const startDragging = (e: MouseEvent | TouchEvent) => {\n    if (props.disabled || !containerSizeComputed.value) { return }\n\n    isDragging.value = true\n    dragStartPosition.value = getEventPosition(e, 'mousedown')\n    dragStartSplitterPosition.value = splitterPositionComputed.value\n  }\n\n  const processDragging = (e: MouseEvent | TouchEvent) => {\n    if (!isDragging.value) { return }\n\n    const currentPosition = getEventPosition(e, 'mousemove')\n    const distance = currentPosition - dragStartPosition.value\n    currentSplitterPosition.value = dragStartSplitterPosition.value + Math.floor((distance / containerSizeComputed.value!) * 100)\n  }\n\n  const stopDragging = () => {\n    isDragging.value = false\n  }\n\n  useEvent(['mousemove', 'touchmove'], processDragging)\n  useEvent(['mouseup', 'touchcancel'], stopDragging)\n\n  return { isDragging, startDragging, currentSplitterPosition }\n}\n"],"mappings":";;AAIO,MAAMA,oBAAA,GAAuB;EAClCC,QAAA,EAAU;IAAEC,IAAA,EAAMC,OAAA;IAASC,OAAA,EAAS;EAAM;EAC1CC,QAAA,EAAU;IAAEH,IAAA,EAAMC,OAAA;IAASC,OAAA,EAAS;EAAM;AAC5C;AAEO,MAAME,eAAA,GAAkBA,CAC7BC,qBAAA,EACAC,wBAAA,EACAC,KAAA,KACG;EACG,MAAAC,UAAA,GAAaC,GAAA,CAAI,KAAK;EACtB,MAAAC,iBAAA,GAAoBD,GAAA,CAAI,CAAC;EACzB,MAAAE,yBAAA,GAA4BF,GAAA,CAAI,CAAC;EACjC,MAAAG,uBAAA,GAA0BH,GAAA,CAAI,CAAC;EAE/B,MAAAI,gBAAA,GAAmBA,CAACC,CAAA,EAA4BC,SAAA,KAAiD;IACrG,MAAMC,KAAA,GAAQF,CAAA,CAAEd,IAAA,KAASe,SAAA,GAAYD,CAAA,GAAmBA,CAAA,CAAiBG,cAAA,CAAe,CAAC;IACzF,OAAOV,KAAA,CAAMR,QAAA,GAAWiB,KAAA,CAAME,KAAA,GAAQF,KAAA,CAAMG,KAAA;EAAA;EAGxC,MAAAC,aAAA,GAAiBN,CAAA,IAA+B;IACpD,IAAIP,KAAA,CAAMJ,QAAA,IAAY,CAACE,qBAAA,CAAsBgB,KAAA,EAAO;MAAE;IAAO;IAE7Db,UAAA,CAAWa,KAAA,GAAQ;IACDX,iBAAA,CAAAW,KAAA,GAAQR,gBAAA,CAAiBC,CAAA,EAAG,WAAW;IACzDH,yBAAA,CAA0BU,KAAA,GAAQf,wBAAA,CAAyBe,KAAA;EAAA;EAGvD,MAAAC,eAAA,GAAmBR,CAAA,IAA+B;IAClD,KAACN,UAAA,CAAWa,KAAA,EAAO;MAAE;IAAO;IAE1B,MAAAE,eAAA,GAAkBV,gBAAA,CAAiBC,CAAA,EAAG,WAAW;IACjD,MAAAU,QAAA,GAAWD,eAAA,GAAkBb,iBAAA,CAAkBW,KAAA;IAC7BT,uBAAA,CAAAS,KAAA,GAAQV,yBAAA,CAA0BU,KAAA,GAAQI,IAAA,CAAKC,KAAA,CAAOF,QAAA,GAAWnB,qBAAA,CAAsBgB,KAAA,GAAU,GAAG;EAAA;EAG9H,MAAMM,YAAA,GAAeA,CAAA,KAAM;IACzBnB,UAAA,CAAWa,KAAA,GAAQ;EAAA;EAGrBO,QAAA,CAAS,CAAC,aAAa,WAAW,GAAGN,eAAe;EACpDM,QAAA,CAAS,CAAC,WAAW,aAAa,GAAGD,YAAY;EAE1C;IAAEnB,UAAA;IAAYY,aAAA;IAAeR;EAAA;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}