{"ast":null,"code":"import { _ as _sfc_main } from \"./VaTreeView.vue_vue_type_script_lang-0b9815a5.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, renderSlot, createTextVNode, Fragment, renderList, createBlock, createSlots, withCtx, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaTreeView_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-tree-view\",\n  role: \"tree\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_tree_node = resolveComponent(\"va-tree-node\");\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [_ctx.$props.filter && !_ctx.treeItems.length ? renderSlot(_ctx.$slots, \"not-found\", {\n    key: 0\n  }, () => [createTextVNode(\"No matching nodes found\")]) : (openBlock(true), createElementBlock(Fragment, {\n    key: 1\n  }, renderList(_ctx.treeItems, nodeItem => {\n    return openBlock(), createBlock(_component_va_tree_node, {\n      key: _ctx.getTrackBy(nodeItem),\n      node: nodeItem\n    }, createSlots({\n      _: 2\n    }, [renderList(_ctx.$slots, (_, name) => {\n      return {\n        name,\n        fn: withCtx(slotScope => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))])\n      };\n    })]), 1032, [\"node\"]);\n  }), 128))]);\n}\nconst _VaTreeView = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaTreeView as _ };","map":{"version":3,"names":["_hoisted_1","class","role","resolveComponent","openBlock","createElementBlock","_ctx","$props","filter","treeItems","length","renderSlot","$slots","key","createTextVNode","Fragment","renderList","nodeItem","createBlock","_component_va_tree_node","getTrackBy","node","_","name"],"sources":["../../../../../src/components/va-tree-view/VaTreeView.vue"],"sourcesContent":["<template>\n  <div class=\"va-tree-view\" role=\"tree\">\n    <template v-if=\"$props.filter && !treeItems.length\">\n      <slot name=\"not-found\">No matching nodes found</slot>\n    </template>\n    <template v-else>\n      <va-tree-node\n        v-for=\"nodeItem in treeItems\"\n        :key=\"getTrackBy(nodeItem)\"\n        :node=\"nodeItem\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"slotScope\">\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n      </va-tree-node>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport useTreeView from './hooks/useTreeView'\nimport { useTreeViewProps, useTreeViewEmits } from './hooks/useTreeHelpers'\n\nimport { VaTreeNode } from './components/VaTreeNode'\n\nexport default defineComponent({\n  name: 'VaTreeView',\n\n  props: { ...useTreeViewProps },\n\n  emits: [...useTreeViewEmits],\n\n  components: { VaTreeNode },\n\n  setup: (props, { emit }) => {\n    const { treeItems, getTrackBy } = useTreeView(props, emit)\n\n    return { treeItems, getTrackBy }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-view {\n  padding: var(--va-tree-view-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n"],"mappings":";;;;MACgCA,UAAA,GAAO;EAAAC,KAAA;EAAAC,IAAA;;;kCAArCC,gBAAA,CAeM;SAbFC,SAAA,CAAqD,GAAAC,kBAAA,QAAAL,UAAA,GAA9BM,IAAA,CAAAC,MAAA,CAAAC,MAAA,KAAAF,IAAA,CAAAG,SAAA,CAAAC,MAAA,GAAAC,UAAA,CAAAL,IAAA,CAAAM,MAAA;IAAAC,GAAA;EAAA,UAAAC,eAAA,CAGvB,yBAQe,OAAAV,SAAA,CANP,IAAmB,GAAAC,kBAAA,CAAAU,QAAA;IAAAF,GAAA;EAAA,GAAAG,UAAA,CAAAV,IAAA,CAAAG,SAAA,EAAAQ,QAAA;WAClBb,SAAA,CAAQ,GAAAc,WAAA,CAAAC,uBAAA;MAAAN,GAAA,EAAAP,IAAA,CAAAc,UAAA,CAAAH,QAAA;MAAAI,IAAA,EAAAJ;;;mBAE0CX,IAAA,CAAMM,MAAA,GAAAU,CAAA,EAAAC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}