{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { watchEffect, onBeforeUnmount } from \"vue\";\nimport { u as useCurrentComponentId } from \"../../../composables/useCurrentComponentId-01b0304d.mjs\";\nimport { u as useDocument } from \"../../../composables/useDocument-5c9446c6.mjs\";\nconst openedModals = [];\nconst useBlur = (shouldBlur, isModalShown) => {\n  const id = useCurrentComponentId();\n  const document = useDocument();\n  const blur = () => {\n    var _a;\n    if (openedModals.includes(id)) {\n      return;\n    }\n    openedModals.push(id);\n    (_a = document.value) == null ? void 0 : _a.body.classList.add(\"va-modal-overlay-background--blurred\");\n  };\n  const removeBlur = () => {\n    var _a;\n    const modalIndex = openedModals.indexOf(id);\n    if (modalIndex === -1) {\n      return;\n    }\n    openedModals.splice(modalIndex, 1);\n    if (openedModals.length === 0) {\n      (_a = document.value) == null ? void 0 : _a.body.classList.remove(\"va-modal-overlay-background--blurred\");\n    }\n  };\n  watchEffect(() => {\n    if (!shouldBlur.value) {\n      return;\n    }\n    if (isModalShown.value) {\n      blur();\n    } else {\n      removeBlur();\n    }\n  });\n  onBeforeUnmount(removeBlur);\n};\nexport { useBlur as u };","map":{"version":3,"names":["openedModals","useBlur","shouldBlur","isModalShown","id","useCurrentComponentId","document","useDocument","blur","includes","push","_a","value","body","classList","add","removeBlur","modalIndex","indexOf","splice","length","remove","watchEffect","onBeforeUnmount"],"sources":["../../../../../../src/components/va-modal/hooks/useBlur.ts"],"sourcesContent":["import { Ref, getCurrentInstance, watchEffect, onBeforeUnmount } from 'vue'\nimport { useDocument, useCurrentComponentId } from '../../../composables'\n\nconst openedModals: string[] = []\n\nexport const useBlur = (shouldBlur: Ref<boolean>, isModalShown: Ref<boolean>) => {\n  const id = useCurrentComponentId()\n  const document = useDocument()\n\n  const blur = () => {\n    if (openedModals.includes(id)) { return }\n    openedModals.push(id)\n    document.value?.body.classList.add('va-modal-overlay-background--blurred')\n  }\n\n  const removeBlur = () => {\n    const modalIndex = openedModals.indexOf(id)\n    if (modalIndex === -1) { return } // Modal is closed\n\n    openedModals.splice(modalIndex, 1) // Remove modal from opened modals\n    if (openedModals.length === 0) {\n      document.value?.body.classList.remove('va-modal-overlay-background--blurred')\n    }\n  }\n\n  watchEffect(() => {\n    if (!shouldBlur.value) { return }\n\n    if (isModalShown.value) {\n      blur()\n    } else {\n      removeBlur()\n    }\n  })\n\n  onBeforeUnmount(removeBlur)\n}\n"],"mappings":";;;;AAGA,MAAMA,YAAA,GAAyB;AAElB,MAAAC,OAAA,GAAUA,CAACC,UAAA,EAA0BC,YAAA,KAA+B;EAC/E,MAAMC,EAAA,GAAKC,qBAAA;EACX,MAAMC,QAAA,GAAWC,WAAA;EAEjB,MAAMC,IAAA,GAAOA,CAAA,KAAM;;IACb,IAAAR,YAAA,CAAaS,QAAA,CAASL,EAAE,GAAG;MAAE;IAAO;IACxCJ,YAAA,CAAaU,IAAA,CAAKN,EAAE;IACpB,CAAAO,EAAA,GAAAL,QAAA,CAASM,KAAA,KAAT,gBAAAD,EAAA,CAAgBE,IAAA,CAAKC,SAAA,CAAUC,GAAA,CAAI;EAAsC;EAG3E,MAAMC,UAAA,GAAaA,CAAA,KAAM;;IACjB,MAAAC,UAAA,GAAajB,YAAA,CAAakB,OAAA,CAAQd,EAAE;IAC1C,IAAIa,UAAA,KAAe,IAAI;MAAE;IAAO;IAEnBjB,YAAA,CAAAmB,MAAA,CAAOF,UAAA,EAAY,CAAC;IAC7B,IAAAjB,YAAA,CAAaoB,MAAA,KAAW,GAAG;MAC7B,CAAAT,EAAA,GAAAL,QAAA,CAASM,KAAA,KAAT,gBAAAD,EAAA,CAAgBE,IAAA,CAAKC,SAAA,CAAUO,MAAA,CAAO;IACxC;EAAA;EAGFC,WAAA,CAAY,MAAM;IACZ,KAACpB,UAAA,CAAWU,KAAA,EAAO;MAAE;IAAO;IAEhC,IAAIT,YAAA,CAAaS,KAAA,EAAO;MACjBJ,IAAA;IAAA,OACA;MACMQ,UAAA;IACb;EAAA,CACD;EAEDO,eAAA,CAAgBP,UAAU;AAC5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}