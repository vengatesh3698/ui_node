{"ast":null,"code":"const isServer = () => typeof window === \"undefined\";\nconst isClient = () => !isServer();\nconst getWindow = () => typeof window === \"undefined\" ? void 0 : window;\nconst fakeGlobal = {};\nconst getGlobal = () => {\n  if (isServer()) {\n    if (typeof globalThis === \"undefined\") {\n      return fakeGlobal;\n    }\n    return globalThis;\n  } else {\n    return window;\n  }\n};\nexport { getGlobal as a, isClient as b, getWindow as g, isServer as i };","map":{"version":3,"names":["isServer","window","isClient","getWindow","fakeGlobal","getGlobal","globalThis"],"sources":["../../../../src/utils/ssr.ts"],"sourcesContent":["export const isServer = () => typeof window === 'undefined'\nexport const isClient = () => !isServer()\nexport const getWindow = (): Window | undefined => typeof window === 'undefined' ? undefined : window\nexport const getDocument = (): Document | undefined => typeof document === 'undefined' ? undefined : document\n\nconst fakeGlobal = {}\n/** @deprecated why can't we just use some local object instead? */\nexport const getGlobal = () => {\n  if (isServer()) {\n    if (typeof globalThis === 'undefined') {\n      return fakeGlobal as Window\n    }\n    return globalThis as any as Window\n  } else {\n    return window\n  }\n}\n"],"mappings":"AAAa,MAAAA,QAAA,GAAWA,CAAA,KAAM,OAAOC,MAAA,KAAW;AACnC,MAAAC,QAAA,GAAWA,CAAA,KAAM,CAACF,QAAA,CAAS;AACjC,MAAMG,SAAA,GAAYA,CAAA,KAA0B,OAAOF,MAAA,KAAW,cAAc,SAAYA,MAAA;AAG/F,MAAMG,UAAA,GAAa;AAEZ,MAAMC,SAAA,GAAYA,CAAA,KAAM;EAC7B,IAAIL,QAAA,IAAY;IACV,WAAOM,UAAA,KAAe,aAAa;MAC9B,OAAAF,UAAA;IACT;IACO,OAAAE,UAAA;EAAA,OACF;IACE,OAAAL,MAAA;EACT;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}