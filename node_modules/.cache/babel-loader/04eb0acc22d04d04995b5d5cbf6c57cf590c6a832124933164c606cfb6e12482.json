{"ast":null,"code":"import { _ as _sfc_main } from \"./VaTreeNode.vue_vue_type_script_lang-4ea119a1.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, createElementVNode, renderSlot, normalizeProps, guardReactiveProps, createVNode, createCommentVNode, createTextVNode, toDisplayString, withDirectives, Fragment, renderList, createBlock, createSlots, withCtx, vShow } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaTreeNode_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"role\", \"aria-expanded\", \"aria-disabled\", \"aria-checked\", \"tabindex\"];\nconst _hoisted_2 = {\n  class: \"va-tree-node-root\"\n};\nconst _hoisted_3 = {\n  key: 2,\n  class: \"va-tree-node-content__item\"\n};\nconst _hoisted_4 = [\"aria-hidden\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_checkbox = resolveComponent(\"va-checkbox\");\n  const _component_va_tree_node = resolveComponent(\"va-tree-node\", true);\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-tree-node\", _ctx.treeNodeClassComputed]),\n    role: _ctx.roleComputed,\n    \"aria-expanded\": _ctx.isExpandedComputed,\n    \"aria-disabled\": _ctx.$props.node.disabled,\n    \"aria-checked\": !!_ctx.$props.node.checked,\n    tabindex: _ctx.tabIndexComputed,\n    onKeydown: [_cache[4] || (_cache[4] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"up\"])), _cache[5] || (_cache[5] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"right\"])), _cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"left\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"space\"])), _cache[9] || (_cache[9] = withKeys(withModifiers($event => _ctx.handleKeyboardNavigation($event, _ctx.$props.node), [\"stop\", \"prevent\"]), [\"esc\"]))]\n  }, [createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"div\", {\n    class: normalizeClass([\"va-tree-node-content\", _ctx.indentClassComputed]),\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.onNodeClick(\"node\"))\n  }, [_ctx.$props.node.hasChildren ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-tree-node-content__item va-tree-node-content__item--leaf\",\n    onClick: _cache[0] || (_cache[0] = withModifiers($event => _ctx.onNodeClick(\"leaf\"), [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"icon-toggle\", normalizeProps(guardReactiveProps(_ctx.$props.node)), () => [createVNode(_component_va_icon, {\n    name: _ctx.isExpandedComputed ? \"keyboard_arrow_down\" : \"keyboard_arrow_right\",\n    size: \"20px\"\n  }, null, 8, [\"name\"])])])) : createCommentVNode(\"\", true), _ctx.selectable ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: \"va-tree-node-content__item\",\n    onClick: _cache[2] || (_cache[2] = withModifiers(() => {}, [\"stop\"]))\n  }, [renderSlot(_ctx.$slots, \"checkbox\", normalizeProps(guardReactiveProps(_ctx.$props.node)), () => [createVNode(_component_va_checkbox, {\n    \"model-value\": _ctx.$props.node.checked,\n    color: _ctx.colorComputed,\n    indeterminate: \"\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = v => _ctx.toggleCheckbox(_ctx.$props.node, v)),\n    class: \"va-tree-node__checkbox\"\n  }, null, 8, [\"model-value\", \"color\"])])])) : createCommentVNode(\"\", true), _ctx.iconComputed ? (openBlock(), createElementBlock(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"icon\", normalizeProps(guardReactiveProps(_ctx.$props.node)), () => [createVNode(_component_va_icon, {\n    name: _ctx.iconComputed,\n    size: \"small\"\n  }, null, 8, [\"name\"])])])) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n    class: normalizeClass([\"va-tree-node-content__body\", _ctx.cursorClassComputed])\n  }, [renderSlot(_ctx.$slots, \"content\", normalizeProps(guardReactiveProps(_ctx.$props.node)), () => [createTextVNode(toDisplayString(_ctx.labelComputed), 1)])], 2)], 2)]), withDirectives(createElementVNode(\"div\", {\n    \"aria-hidden\": !_ctx.$props.node.expanded,\n    class: normalizeClass([\"va-tree-node-children\", _ctx.expandedClassComputed])\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.$props.node.children, childNode => {\n    return openBlock(), createBlock(_component_va_tree_node, {\n      key: _ctx.getTrackBy(childNode),\n      node: childNode\n    }, createSlots({\n      _: 2\n    }, [renderList(_ctx.$slots, (_, name) => {\n      return {\n        name,\n        fn: withCtx(slotScope => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))])\n      };\n    })]), 1032, [\"node\"]);\n  }), 128))], 10, _hoisted_4), [[vShow, _ctx.$props.node.hasChildren]])], 42, _hoisted_1);\n}\nconst _VaTreeNode = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaTreeNode as _ };","map":{"version":3,"names":["_hoisted_3","key","class","resolveComponent","openBlock","createElementBlock","normalizeClass","_ctx","treeNodeClassComputed","role","roleComputed","isExpandedComputed","$props","node","disabled","checked","tabindex","tabIndexComputed","onKeydown","handleKeyboardNavigation","$event","_cache","withKeys","withModifiers","createElementVNode","_hoisted_2","indentClassComputed","onClick","onNodeClick","hasChildren","renderSlot","$slots","normalizeProps","guardReactiveProps","createVNode","_component_va_icon","name","size","createCommentVNode","selectable","_component_va_checkbox","color","colorComputed","indeterminate","v","toggleCheckbox","iconComputed","cursorClassComputed","expanded","expandedClassComputed","Fragment","renderList","children","childNode","createBlock","_component_va_tree_node","getTrackBy","_"],"sources":["../../../../../../../src/components/va-tree-view/components/VaTreeNode/VaTreeNode.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"treeNodeClassComputed\"\n    :role=\"roleComputed\"\n    :aria-expanded=\"isExpandedComputed\"\n    :aria-disabled=\"$props.node.disabled\"\n    :aria-checked=\"!!$props.node.checked\"\n    :tabindex=\"tabIndexComputed\"\n    @keydown.up.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.right.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.down.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.left.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.space.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.esc.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n  >\n    <div class=\"va-tree-node-root\">\n      <div class=\"va-tree-node-content\" :class=\"indentClassComputed\" @click=\"onNodeClick('node')\">\n        <div\n          v-if=\"$props.node.hasChildren\"\n          class=\"va-tree-node-content__item va-tree-node-content__item--leaf\"\n          @click.stop=\"onNodeClick('leaf')\"\n        >\n          <slot name=\"icon-toggle\" v-bind=\"$props.node\">\n            <va-icon\n              :name=\"isExpandedComputed ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\"\n              size=\"20px\"\n            />\n          </slot>\n        </div>\n        <div\n          v-if=\"selectable\"\n          class=\"va-tree-node-content__item\"\n          @click.stop\n        >\n          <slot name=\"checkbox\" v-bind=\"$props.node\">\n            <va-checkbox\n              :model-value=\"$props.node.checked\"\n              :color=\"colorComputed\"\n              indeterminate\n              @update:model-value=\"(v) => toggleCheckbox($props.node, v)\"\n              class=\"va-tree-node__checkbox\"\n            />\n          </slot>\n        </div>\n        <div v-if=\"iconComputed\" class=\"va-tree-node-content__item\">\n          <slot name=\"icon\" v-bind=\"$props.node\">\n            <va-icon :name=\"iconComputed\" size=\"small\" />\n          </slot>\n        </div>\n        <div class=\"va-tree-node-content__body\" :class=\"cursorClassComputed\">\n          <slot name=\"content\" v-bind=\"$props.node\">{{ labelComputed }}</slot>\n        </div>\n      </div>\n    </div>\n    <div\n      v-show=\"$props.node.hasChildren\"\n      :aria-hidden=\"!$props.node.expanded\"\n      class=\"va-tree-node-children\"\n      :class=\"expandedClassComputed\"\n    >\n      <va-tree-node\n        v-for=\"childNode in $props.node.children\"\n        :key=\"getTrackBy(childNode)\"\n        :node=\"childNode\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"slotScope\">\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n      </va-tree-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useBem, useStrictInject } from '../../../../composables'\n\nimport { VaIcon, VaCheckbox } from '../../../'\nimport { TreeViewKey, TreeNode } from '../../types'\n\nconst INJECTION_ERROR_MESSAGE = 'The VaTreeNode component should be used in the context of VaTreeView component'\n\nexport default defineComponent({\n  name: 'VaTreeNode',\n\n  props: {\n    node: {\n      type: Object as PropType<TreeNode>,\n      required: true,\n    },\n  },\n\n  components: { VaCheckbox, VaIcon },\n\n  setup: (props) => {\n    const {\n      iconBy,\n      selectable,\n      expandNodeBy,\n      colorComputed,\n      selectedNodeComputed,\n      getText,\n      getTrackBy,\n      toggleNode,\n      toggleCheckbox,\n      getNodeProperty,\n      handleKeyboardNavigation,\n    } = useStrictInject(TreeViewKey, INJECTION_ERROR_MESSAGE)\n\n    const labelComputed = computed(() => getText(props.node) || '')\n    const isExpandedComputed = computed(() => props.node.hasChildren ? !!props.node.expanded : undefined)\n    const iconComputed = computed(() => getNodeProperty(props.node, iconBy))\n    const roleComputed = computed(() => props.node.hasChildren ? 'group' : 'treeitem')\n\n    const treeNodeClassComputed = useBem('va-tree-node', () => ({\n      disabled: !!props.node.disabled,\n    }))\n\n    const expandedClassComputed = useBem('va-tree-node-children', () => ({\n      expanded: !!isExpandedComputed.value,\n    }))\n\n    const indentClassComputed = useBem('va-tree-node-content', () => ({\n      indent: props.node.hasChildren === false,\n    }))\n\n    const cursorClassComputed = useBem('va-tree-node-content', () => ({\n      clickable: (props.node.hasChildren === true && expandNodeBy === 'node'),\n    }))\n\n    const tabIndexComputed = computed(() => props.node.disabled ? -1 : 0)\n\n    const onNodeClick = (type: typeof expandNodeBy) => {\n      const nodeType = expandNodeBy === 'node' && type === 'leaf' ? 'node' : type\n\n      if (expandNodeBy === nodeType) {\n        toggleNode(props.node)\n      }\n\n      selectedNodeComputed.value = props.node\n    }\n\n    return {\n      selectable,\n      expandNodeBy,\n\n      getText,\n      getTrackBy,\n      toggleNode,\n      onNodeClick,\n      handleKeyboardNavigation,\n      toggleCheckbox,\n\n      roleComputed,\n      iconComputed,\n      labelComputed,\n      colorComputed,\n      tabIndexComputed,\n      indentClassComputed,\n      isExpandedComputed,\n      expandedClassComputed,\n      treeNodeClassComputed,\n      cursorClassComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index\";\n@import 'variables';\n\n.va-tree-node {\n  &-root {\n    display: flex;\n    padding: var(--va-tree-node-padding);\n    position: relative;\n\n    &::before {\n      content: \"\";\n      background-color: var(--va-primary);\n      border-radius: var(--va-tree-node-border-radius);\n      bottom: 0;\n      left: 0;\n      opacity: 0;\n      pointer-events: none;\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n\n    &:hover::before {\n      opacity: var(--va-tree-node-interactive-bg-opacity);\n    }\n  }\n\n  &-content {\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    width: 100%;\n\n    &__item {\n      flex: var(--va-tree-node-content-item-flex);\n      min-width: var(--va-tree-node-indent);\n      line-height: 1;\n\n      &--leaf {\n        cursor: pointer;\n      }\n    }\n\n    &__body {\n      flex: var(--va-tree-node-content-body-item-flex);\n      width: 100%;\n    }\n\n    &--indent {\n      margin-left: var(--va-tree-node-indent);\n    }\n\n    &--clickable {\n      cursor: pointer;\n    }\n  }\n\n  &-children {\n    display: none;\n    background: var(--va-tree-node-children-background);\n    padding-left: var(--va-tree-node-indent);\n    width: 100%;\n\n    &--expanded {\n      display: block;\n    }\n  }\n\n  &__checkbox {\n    --va-checkbox-input-padding: 0;\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-tree-node-content__item--leaf {\n      cursor: pointer;\n      pointer-events: all;\n    }\n  }\n\n  &:focus-visible > .va-tree-node-root {\n    @include focus-outline;\n\n    &::before {\n      opacity: var(--va-tree-node-interactive-bg-opacity);\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;;;MA6CiCA,UAAA,GAAM;EAAAC,GAAA;EAAAC,KAAA;;;;;;kCA5CrCC,gBAAA,CAsEM;SAnEGC,SAAA,CAAY,GAAAC,kBAAA;IAClBH,KAAA,EAAAI,cAAA,CAAe,CAAkB,gBAAAC,IAAA,CAAAC,qBAAA;IACjCC,IAAA,EAAAF,IAAA,CAAAG,YAAA;IACA,iBAAYH,IAAA,CAAII,kBAAA;IAChB,iBAAUJ,IAAA,CAAgBK,MAAA,CAAAC,IAAA,CAAAC,QAAA;IAC1B,gBAAO,EAAAP,IAAA,CAAAK,MAAA,CAAAC,IAAA,CAAAE,OAAA;IAAAC,QAAA,EAAAT,IAAA,CAAAU,gBAAA;IAAAC,SAAA,G,2DAEoBX,IAAA,CAAyBY,wBAAA,CAAAC,MAAA,EAAQb,IAAA,CAAAK,MAAA,CAAOC,IAAI,mCAC5CQ,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAY,wBAAA,CAAyBC,MAAA,EAAQb,IAAA,CAAAK,MAAA,CAAOC,IAAI,sCAC3CQ,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAY,wBAAA,CAAyBC,MAAA,EAAQb,IAAA,CAAAK,MAAA,CAAOC,IAAI,qCAC9CQ,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAY,wBAAA,CAAyBC,MAAA,EAAQb,IAAA,CAAAK,MAAA,CAAOC,IAAI,qCAAAQ,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAY,wBAAA,CAAAC,MAAA,EAAAb,IAAA,CAAAK,MAAA,CAAAC,IAAA,sCAAAQ,MAAA,QAAAA,MAAA,MAAAC,QAAA,CAAAC,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAY,wBAAA,CAAAC,MAAA,EAAAb,IAAA,CAAAK,MAAA,CAAAC,IAAA;EAEvE,IAAAW,kBAAA,CACY,OAACC,UAAA,GAA0DD,kBAAA;IAAAtB,KAAA,EAAAI,cAAA,0BAAAC,IAAA,CAAAmB,mBAAA;IAAAC,OAAA,EAE3DN,MAAA,CAAO,CAAI,MAACA,MAAA,CAAW,KAAAD,MAAA,IAAAb,IAAA,CAAAqB,WAAA;EAAA,IACvBrB,IAAA,CAAAK,MAAA,CAAAC,IAAA,CAAAgB,WAAA,IAAAzB,SAAA,IAAAC,kBAAA;IACLJ,GAAA;IAAAC,KAAA;IAEDyB,OAAA,EAKON,MAAA,QAAAA,MAAA,MAAAE,aAAA,CAAAH,MAAA,IAAAb,IAAA,CAAAqB,WAAA,CAL0B,MAAO,UAAI,CAA5C;EAAA,IAAAE,UAAA,CAEWvB,IAAA,CAAkBwB,MAAA,iBAAAC,cAAA,CAAAC,kBAAA,CAAA1B,IAAA,CAAAK,MAAA,CAAAC,IAAA,WAAAqB,WAAA,CACpBC,kBAAA,EAAM;IAAAC,IAAA,EAAA7B,IAAA,CAAAI,kBAAA;IAAA0B,IAAA;0BAIjB,KAAAC,kBAAA,YAAA/B,IAAA,CAAAgC,UAAA,IAAAnC,SAAA,IAEoCC,kBAAA;IACjCJ,GAAA;IAAAC,KAAA;IAEDyB,OAAA,EAQON,MAAA,QAAAA,MAAA,MAAAE,aAAA;EAAA,IAAAO,UAAA,CANFvB,IAAA,CAAWwB,MAAA,EAAE,YAAYC,cAAA,CAAOC,kBAAA,CAAA1B,IAAA,CAAAK,MAAA,CAAAC,IAAA,WAAAqB,WAAA,CACzBM,sBAAA,EAAa;IACrB,eAAajC,IAAA,CAAAK,MAAA,CAAAC,IAAA,CAAAE,OAAA;IACZ0B,KAAA,EAAAlC,IAAA,CAAAmC,aAAA;IACDC,aAAA,EAAM;IAAA,uBAAAtB,MAAA,QAAAA,MAAA,MAAAuB,CAAA,IAAArC,IAAA,CAAAsC,cAAA,CAAAtC,IAAA,CAAAK,MAAA,CAAAC,IAAA,EAAA+B,CAAA;IAAA1C,KAAA;0CAIZ,KAAAoC,kBAAA,YAAA/B,IAAA,CACEuC,YAAA,IAAA1C,SAAA,IAC+CC,kBAAA,QAAAL,UAAA,GAAA8B,UAAA,CAA7BvB,IAAA,CAAYwB,MAAA,UAAAC,cAAA,CAAAC,kBAAA,CAAA1B,IAAA,CAAAK,MAAA,CAAAC,IAAA,WAAAqB,WAAA,CAAOC,kBAAA,EAAO;IAAAC,IAAA,EAAA7B,IAAA,CAAAuC,YAAA;IAAAT,IAAA;0BAG9C,KAAKC,kBAAA,CAAK,IAAC,OAAAd,kBAAA;IACTtB,KAAA,EAAAI,cAAA,CAAoE,CAAvC,8BAAAC,IAAA,CAAAwC,mBAAA;EAAA,IAAAjB,UAAA,CAAAvB,IAAA,CAAAwB,MAAA,aAAAC,cAAA,CAAAC,kBAAA,CAAA1B,IAAA,CAAAK,MAAA,CAAAC,IAAA,W,sFAO5BW,kBAAA,CAAC;IAAA,gBAAAjB,IAAA,CAAAK,MAAA,CAAAC,IAAA,CAAAmC,QAAA;IAGN9C,KAAA,EAAAI,cAAA,2BAQeC,IAAA,CAPO0C,qBAAA;EAAA,KAAA7C,SAAA,CACd,IAAoB,GAAAC,kBAAA,CAAA6C,QAAA,QAAAC,UAAA,CAAA5C,IAAA,CAAAK,MAAA,CAAAC,IAAA,CAAAuC,QAAA,EAAAC,SAAA;WACnBjD,SAAA,CAAS,GAAAkD,WAAA,CAAAC,uBAAA;MAAAtD,GAAA,EAAAM,IAAA,CAAAiD,UAAA,CAAAH,SAAA;MAAAxC,IAAA,EAAAwC;;;mBAEyC9C,IAAA,CAAMwB,MAAA,GAAA0B,CAAA,EAAArB,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}