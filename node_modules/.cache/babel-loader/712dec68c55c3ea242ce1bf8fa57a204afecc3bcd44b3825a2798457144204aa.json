{"ast":null,"code":"import { ref, computed } from \"vue\";\nimport { i as isDate } from \"../../../../vendor-fff696df.mjs\";\nconst JANUARY_MONTH_INDEX = 0;\nconst DECEMBER_MONTH_INDEX = 11;\nconst addMonth = view => {\n  if (view.month === DECEMBER_MONTH_INDEX) {\n    return {\n      ...view,\n      year: view.year + 1,\n      month: JANUARY_MONTH_INDEX\n    };\n  } else {\n    return {\n      ...view,\n      month: view.month + 1\n    };\n  }\n};\nconst subMonth = view => {\n  if (view.month === JANUARY_MONTH_INDEX) {\n    return {\n      ...view,\n      year: view.year - 1,\n      month: DECEMBER_MONTH_INDEX\n    };\n  } else {\n    return {\n      ...view,\n      month: view.month - 1\n    };\n  }\n};\nconst getDefaultDate = modelValue => {\n  if (isDate(modelValue)) {\n    return modelValue;\n  }\n  if (isDate(modelValue == null ? void 0 : modelValue.start)) {\n    return modelValue.start;\n  }\n  if (Array.isArray(modelValue) && isDate(modelValue[0])) {\n    return modelValue[0];\n  }\n  return /* @__PURE__ */new Date();\n};\nconst useView = (props, emit, defaultOverride) => {\n  const defaultDate = getDefaultDate(props.modelValue);\n  const defaultView = {\n    type: \"day\",\n    year: defaultDate.getFullYear(),\n    month: defaultDate.getMonth(),\n    ...defaultOverride\n  };\n  const statefulView = ref(defaultView);\n  const syncView = computed({\n    get() {\n      return {\n        ...statefulView.value,\n        ...props.view\n      };\n    },\n    set(view) {\n      statefulView.value = view;\n      emit(\"update:view\", view);\n    }\n  });\n  const next = () => {\n    if (syncView.value.type === \"day\") {\n      syncView.value = addMonth(syncView.value);\n    } else if (syncView.value.type === \"month\") {\n      syncView.value = {\n        ...syncView.value,\n        year: syncView.value.year + 1\n      };\n    }\n  };\n  const prev = () => {\n    if (syncView.value.type === \"day\") {\n      syncView.value = subMonth(syncView.value);\n    } else if (syncView.value.type === \"month\") {\n      syncView.value = {\n        ...syncView.value,\n        year: syncView.value.year - 1\n      };\n    }\n  };\n  return {\n    syncView,\n    next,\n    prev\n  };\n};\nexport { useView as u };","map":{"version":3,"names":["JANUARY_MONTH_INDEX","DECEMBER_MONTH_INDEX","addMonth","view","month","year","subMonth","getDefaultDate","modelValue","isDate","start","Array","isArray","Date","useView","props","emit","defaultOverride","defaultDate","defaultView","type","getFullYear","getMonth","statefulView","ref","syncView","computed","get","value","set","next","prev"],"sources":["../../../../../../src/components/va-date-picker/hooks/view.ts"],"sourcesContent":["import { computed, ref } from 'vue'\nimport isDate from 'lodash/isDate.js'\n\nimport { DatePickerView, DatePickerViewProp, DatePickerModelValue } from '../types'\n\nconst JANUARY_MONTH_INDEX = 0\nconst DECEMBER_MONTH_INDEX = 11\n\nconst addMonth = (view: DatePickerView) => {\n  if (view.month === DECEMBER_MONTH_INDEX) {\n    return { ...view, year: view.year + 1, month: JANUARY_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month + 1 }\n  }\n}\n\nconst subMonth = (view: DatePickerView) => {\n  if (view.month === JANUARY_MONTH_INDEX) {\n    return { ...view, year: view.year - 1, month: DECEMBER_MONTH_INDEX }\n  } else {\n    return { ...view, month: view.month - 1 }\n  }\n}\n\nconst getDefaultDate = (modelValue: DatePickerModelValue): Date => {\n  if (isDate(modelValue)) { return modelValue }\n  if (isDate((modelValue as any)?.start)) { return (modelValue as any).start }\n  if (Array.isArray(modelValue) && isDate(modelValue[0])) { return modelValue[0] }\n\n  return new Date()\n}\n\nexport const useView = (\n  props: { [key: string]: any, 'view'?: DatePickerViewProp },\n  emit: (event: any | 'update:view', newValue: DatePickerViewProp) => any,\n  defaultOverride?: DatePickerViewProp,\n) => {\n  const defaultDate = getDefaultDate(props.modelValue)\n  const defaultView: DatePickerView = {\n    type: 'day',\n    year: defaultDate.getFullYear(),\n    month: defaultDate.getMonth(),\n    ...defaultOverride,\n  }\n\n  const statefulView = ref(defaultView)\n\n  const syncView = computed<DatePickerView>({\n    get () {\n      // Merge default view and user view prop\n      return { ...statefulView.value, ...props.view }\n    },\n    set (view: DatePickerView) {\n      statefulView.value = view\n\n      emit('update:view', view)\n    },\n  })\n\n  const next = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = addMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year + 1 }\n    }\n  }\n\n  const prev = () => {\n    if (syncView.value.type === 'day') {\n      syncView.value = subMonth(syncView.value)\n    } else if (syncView.value.type === 'month') {\n      syncView.value = { ...syncView.value, year: syncView.value.year - 1 }\n    }\n  }\n\n  return {\n    syncView,\n    next,\n    prev,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}