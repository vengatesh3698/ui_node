{"ast":null,"code":"import { computed } from \"vue\";\nconst useAlignProps = {\n  align: {\n    type: String,\n    default: \"left\"\n  },\n  vertical: {\n    type: Boolean,\n    default: false\n  }\n};\nconst horizontalMap = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  between: \"space-between\",\n  around: \"space-around\"\n};\nconst verticalMap = {\n  left: \"flex-start\",\n  center: \"center\",\n  right: \"flex-end\",\n  stretch: \"stretch\"\n};\nconst justify = (align, vertical) => {\n  return vertical ? \"center\" : align ? horizontalMap[align] : \"flex-start\";\n};\nconst items = (align, vertical) => {\n  return vertical ? verticalMap[align] : \"center\";\n};\nfunction useAlign(props) {\n  const alignComputed = computed(() => {\n    return {\n      display: \"flex\",\n      flexDirection: props.vertical ? \"column\" : \"row\",\n      justifyContent: justify(props.align, props.vertical),\n      alignItems: items(props.align, props.vertical)\n    };\n  });\n  return {\n    alignComputed\n  };\n}\nexport { useAlign as a, useAlignProps as u };","map":{"version":3,"names":["useAlignProps","align","type","String","default","vertical","Boolean","horizontalMap","left","center","right","between","around","verticalMap","stretch","justify","items","useAlign","props","alignComputed","computed","display","flexDirection","justifyContent","alignItems"],"sources":["../../../../src/composables/useAlign.ts"],"sourcesContent":["import { computed } from 'vue'\n\nexport const useAlignProps = {\n  align: {\n    type: String,\n    default: 'left',\n  },\n  vertical: {\n    type: Boolean,\n    default: false,\n  },\n}\n\nconst horizontalMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  between: 'space-between',\n  around: 'space-around',\n}\n\nconst verticalMap = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n  stretch: 'stretch',\n}\n\nconst justify = (align: string, vertical: boolean) => {\n  return vertical\n    ? 'center'\n    : align\n      ? horizontalMap[align as keyof typeof horizontalMap]\n      : 'flex-start'\n}\n\nconst items = (align: string, vertical: boolean) => {\n  return vertical ? verticalMap[align as keyof typeof verticalMap] : 'center'\n}\n\nexport function useAlign (props: any) {\n  const alignComputed = computed(() => {\n    return {\n      display: 'flex',\n      flexDirection: props.vertical ? 'column' : 'row' as 'row' | 'column',\n      justifyContent: justify(props.align, props.vertical),\n      alignItems: items(props.align, props.vertical),\n    }\n  })\n\n  return {\n    alignComputed,\n  }\n}\n"],"mappings":";AAEO,MAAMA,aAAA,GAAgB;EAC3BC,KAAA,EAAO;IACLC,IAAA,EAAMC,MAAA;IACNC,OAAA,EAAS;EACX;EACAC,QAAA,EAAU;IACRH,IAAA,EAAMI,OAAA;IACNF,OAAA,EAAS;EACX;AACF;AAEA,MAAMG,aAAA,GAAgB;EACpBC,IAAA,EAAM;EACNC,MAAA,EAAQ;EACRC,KAAA,EAAO;EACPC,OAAA,EAAS;EACTC,MAAA,EAAQ;AACV;AAEA,MAAMC,WAAA,GAAc;EAClBL,IAAA,EAAM;EACNC,MAAA,EAAQ;EACRC,KAAA,EAAO;EACPI,OAAA,EAAS;AACX;AAEA,MAAMC,OAAA,GAAUA,CAACd,KAAA,EAAeI,QAAA,KAAsB;EACpD,OAAOA,QAAA,GACH,WACAJ,KAAA,GACEM,aAAA,CAAcN,KAAmC,IACjD;AACR;AAEA,MAAMe,KAAA,GAAQA,CAACf,KAAA,EAAeI,QAAA,KAAsB;EAC3C,OAAAA,QAAA,GAAWQ,WAAA,CAAYZ,KAAiC,IAAI;AACrE;AAEO,SAASgB,SAAUC,KAAA,EAAY;EAC9B,MAAAC,aAAA,GAAgBC,QAAA,CAAS,MAAM;IAC5B;MACLC,OAAA,EAAS;MACTC,aAAA,EAAeJ,KAAA,CAAMb,QAAA,GAAW,WAAW;MAC3CkB,cAAA,EAAgBR,OAAA,CAAQG,KAAA,CAAMjB,KAAA,EAAOiB,KAAA,CAAMb,QAAQ;MACnDmB,UAAA,EAAYR,KAAA,CAAME,KAAA,CAAMjB,KAAA,EAAOiB,KAAA,CAAMb,QAAQ;IAAA;EAC/C,CACD;EAEM;IACLc;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}