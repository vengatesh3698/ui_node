{"ast":null,"code":"import { defineComponent, toRef, computed } from \"vue\";\nimport { u as useColors } from \"../../../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTextColor } from \"../../../../composables/useTextColor-f36510ca.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaDropdownContent\",\n  props: {\n    noPadding: {\n      type: Boolean,\n      default: false\n    },\n    background: {\n      type: String,\n      default: \"background-secondary\"\n    },\n    textColor: {\n      type: String\n    }\n  },\n  setup(props) {\n    const {\n      getColor\n    } = useColors();\n    const {\n      textColorComputed\n    } = useTextColor(toRef(props, \"background\"));\n    const computedStyle = computed(() => ({\n      background: getColor(props.background, void 0, true),\n      color: textColorComputed.value,\n      padding: props.noPadding ? 0 : void 0\n    }));\n    return {\n      computedStyle\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaDropdownContent.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","noPadding","type","Boolean","default","background","String","textColor","setup","getColor","useColors","textColorComputed","useTextColor","toRef","computedStyle","computed","color","value","padding"],"sources":["../../../../../../../src/components/va-dropdown/components/VaDropdownContent/VaDropdownContent.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-dropdown__content\"\n    :style=\"computedStyle\"\n    role=\"listbox\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useColors, useTextColor } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDropdownContent',\n  props: {\n    noPadding: { type: Boolean, default: false },\n    background: { type: String, default: 'background-secondary' },\n    textColor: { type: String },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { textColorComputed } = useTextColor(toRef(props, 'background'))\n\n    const computedStyle = computed(() => ({\n      background: getColor(props.background, undefined, true),\n      color: textColorComputed.value,\n      padding: props.noPadding ? 0 : undefined,\n    }))\n\n    return { computedStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-dropdown {\n  &__content {\n    padding: var(--va-dropdown-content-padding);\n    box-shadow: var(--va-dropdown-content-box-shadow);\n    border-radius: var(--va-dropdown-content-border-radius);\n    font-family: var(--va-font-family);\n  }\n}\n</style>\n"],"mappings":";;;AAeA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACLC,SAAA,EAAW;MAAEC,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC3CC,UAAA,EAAY;MAAEH,IAAA,EAAMI,MAAA;MAAQF,OAAA,EAAS;IAAuB;IAC5DG,SAAA,EAAW;MAAEL,IAAA,EAAMI;IAAO;EAC5B;EAEAE,MAAOR,KAAA,EAAO;IACN;MAAES;IAAA,IAAaC,SAAA;IACrB,MAAM;MAAEC;IAAkB,IAAIC,YAAA,CAAaC,KAAA,CAAMb,KAAA,EAAO,YAAY,CAAC;IAE/D,MAAAc,aAAA,GAAgBC,QAAA,CAAS,OAAO;MACpCV,UAAA,EAAYI,QAAA,CAAST,KAAA,CAAMK,UAAA,EAAY,QAAW,IAAI;MACtDW,KAAA,EAAOL,iBAAA,CAAkBM,KAAA;MACzBC,OAAA,EAASlB,KAAA,CAAMC,SAAA,GAAY,IAAI;IAC/B;IAEF,OAAO;MAAEa;IAAc;EACzB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}