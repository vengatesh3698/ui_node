{"ast":null,"code":"import { computed, ref, watch } from \"vue\";\nimport { b as isClient } from \"../utils/ssr-fd33979c.mjs\";\nconst useClientOnly = cb => {\n  const isMounted = computed(isClient);\n  const result = ref(null);\n  watch(isMounted, () => {\n    if (isMounted.value) {\n      result.value = cb();\n    }\n  }, {\n    immediate: true\n  });\n  return result;\n};\nexport { useClientOnly as u };","map":{"version":3,"names":["useClientOnly","cb","isMounted","computed","isClient","result","ref","watch","value","immediate"],"sources":["../../../../src/composables/useClientOnly.ts"],"sourcesContent":["import { computed, ref, UnwrapRef, watch } from 'vue'\nimport { isClient } from '../utils/ssr'\n\n/** Returns cb result only on client. Returns null on server  */\nexport const useClientOnly = <T>(cb: () => T) => {\n  const isMounted = computed(isClient)\n  const result = ref<T | null>(null)\n\n  watch(isMounted, () => {\n    if (isMounted.value) {\n      result.value = cb() as UnwrapRef<T>\n    }\n  }, { immediate: true })\n\n  return result\n}\n"],"mappings":";;AAIa,MAAAA,aAAA,GAAoBC,EAAA,IAAgB;EACzC,MAAAC,SAAA,GAAYC,QAAA,CAASC,QAAQ;EAC7B,MAAAC,MAAA,GAASC,GAAA,CAAc,IAAI;EAEjCC,KAAA,CAAML,SAAA,EAAW,MAAM;IACrB,IAAIA,SAAA,CAAUM,KAAA,EAAO;MACnBH,MAAA,CAAOG,KAAA,GAAQP,EAAA;IACjB;EAAA,GACC;IAAEQ,SAAA,EAAW;EAAA,CAAM;EAEf,OAAAJ,MAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}