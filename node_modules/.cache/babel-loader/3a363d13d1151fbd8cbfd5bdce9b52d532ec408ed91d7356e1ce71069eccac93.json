{"ast":null,"code":"import { _ as _sfc_main } from \"./VaDayPicker.vue_vue_type_script_lang-56d3e02c.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createVNode, withCtx, createElementVNode, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaDayPicker_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"onMouseenter\"];\nconst _hoisted_2 = {\n  class: \"va-date-picker-cell__day\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_date_picker_cell = resolveComponent(\"va-date-picker-cell\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: \"va-day-picker\"\n  }, _ctx.containerAttributes), [!_ctx.hideWeekDays ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.weekdayNamesComputed, weekday => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: weekday,\n      class: \"va-day-picker__weekday\"\n    }, [renderSlot(_ctx.$slots, \"weekday\", {}, () => [createTextVNode(toDisplayString(weekday), 1)])]);\n  }), 128)) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.calendarDates, (date, index) => {\n    return openBlock(), createElementBlock(\"div\", {\n      class: \"va-day-picker__calendar__day-wrapper\",\n      key: index,\n      onMouseenter: $event => _ctx.hoveredIndex = index,\n      onMouseleave: _cache[0] || (_cache[0] = $event => _ctx.hoveredIndex = -1)\n    }, [createVNode(_component_va_date_picker_cell, {\n      hidden: _ctx.isOtherMonth(date) && !_ctx.showOtherMonths,\n      today: _ctx.isToday(date),\n      selected: _ctx.isSelected(date),\n      \"in-range\": _ctx.isInRange(date),\n      \"other-month\": _ctx.isOtherMonth(date),\n      weekend: _ctx.isDateWeekend(date),\n      disabled: _ctx.isDateDisabled(date),\n      focused: _ctx.hoveredIndex === index,\n      \"highlight-today\": _ctx.highlightToday,\n      \"highlight-weekend\": _ctx.highlightWeekend,\n      readonly: _ctx.$props.readonly,\n      color: _ctx.color,\n      onClick: $event => {\n        _ctx.onClick(date);\n        _ctx.focusedCellIndex = index;\n      }\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", _hoisted_2, [renderSlot(_ctx.$slots, \"day\", normalizeProps(guardReactiveProps({\n        date\n      })), () => [createTextVNode(toDisplayString(date.getDate()), 1)])])]),\n      _: 2\n    }, 1032, [\"hidden\", \"today\", \"selected\", \"in-range\", \"other-month\", \"weekend\", \"disabled\", \"focused\", \"highlight-today\", \"highlight-weekend\", \"readonly\", \"color\", \"onClick\"])], 40, _hoisted_1);\n  }), 128))], 16);\n}\nconst VaDayPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaDayPicker as V };","map":{"version":3,"names":["resolveComponent","mergeProps","class","_ctx","containerAttributes","hideWeekDays","openBlock","createElementBlock","Fragment","key","renderList","weekdayNamesComputed","weekday","renderSlot","$slots","createCommentVNode","calendarDates","date","index","onMouseenter","$event","hoveredIndex","onMouseleave","_cache","createVNode","_component_va_date_picker_cell","hidden","isOtherMonth","showOtherMonths","today","isToday","selected","isSelected","isInRange","weekend","isDateWeekend","disabled","isDateDisabled","focused","highlightToday","highlightWeekend","readonly","$props","color","onClick","focusedCellIndex","default","withCtx","createElementVNode","_hoisted_2","normalizeProps","guardReactiveProps","createTextVNode","toDisplayString","getDate"],"sources":["../../../../../../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: Function as PropType<(date: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;yCACEA,gBAAA,CAAW;yCAEP,OAOMC,UAAA;IAAAC,KAAA;EAAA,GAAAC,IAAA,CAAAC,mBANG,GAAO,EAAAD,IAAA,CAAAE,YAAA,IAAAC,SAAA,CAAgC,IAAO,GAAAC,kBAAA,CAAAC,QAAA;IAAAC,GAAA;EAAA,GAAAC,UAAA,CAAAP,IAAA,CAAAQ,oBAAA,EAAAC,OAAA;IAChD,OAAAN,SAAA,IAAyBC,kBAAA;MAAAE,GAAA,EAAAG,OAAA;MAE9BV,KAAA;IAAA,IAAAW,UAAA,CAAAV,IAAA,CAAAW,MAAA,wB;EAMJ,YAAAC,kBAAA,aAAAT,SAAA,CACQ,IAAsC,GAAAC,kBAAA,CAAAC,QAAA,QAAAE,UAAA,CAAAP,IAAA,CAAAa,aAAA,GAAAC,IAAA,EAAAC,KAAA;WAEtCZ,SAAA,CAAK,GAAAC,kBAAA;MACVL,KAAA;MACAO,GAAA,EAAAS,KAAA;MAAAC,YAAA,EAAAC,MAAA,IAAAjB,IAAA,CAAAkB,YAAA,GAAAH,KAAA;MAEDI,YAAA,EAoBsBC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAAjB,IAAA,CAAAkB,YAAA;IAAA,IAAAG,WAAA,CAlBZC,8BAAA,EAAY;MACnBC,MAAA,EAAQvB,IAAA,CAAEwB,YAAA,CAAWV,IAAI,MAAAd,IAAA,CAAAyB,eAAA;MACzBC,KAAA,EAAU1B,IAAA,CAAA2B,OAAA,CAAAb,IAAA;MACVc,QAAA,EAAa5B,IAAA,CAAA6B,UAAA,CAAAf,IAAA;MACb,YAASd,IAAA,CAAA8B,SAAA,CAAahB,IAAC;MACvB,eAAUd,IAAA,CAAAwB,YAAA,CAAeV,IAAI;MAC7BiB,OAAA,EAAS/B,IAAA,CAAAgC,aAAA,CAAYlB,IAAK;MAC1BmB,QAAA,EAAiBjC,IAAA,CAAAkC,cAAA,CAAApB,IAAA;MACjBqB,OAAA,EAAmBnC,IAAA,CAAAkB,YAAA,KAAAH,KAAA;MACnB,mBAAUf,IAAA,CAAOoC,cAAA;MACjB,qBAAYpC,IAAA,CAAAqC,gBAAA;MACZC,QAAA,EAAKtC,IAAA,CAAEuC,MAAA,CAAAD,QAAA;MAAAE,KAAA,EAAAxC,IAAA,CAAAwC,KAAA;MAMDC,OAAA,EAAAxB,MAAA;QAAAjB,IAAA,CAAAyC,OAAA,CAAA3B,IAAA;QAAAd,IAAA,CAAA0C,gBAAA,GAAA3B,KAAA;MAAA;IAAA;MAAA4B,OAAA,EAHLC,OAAA,CAEO,OADFC,kBAAA,SAAAC,UAAA,GAAApC,UAAA,CAAAV,IAAA,CAAAW,MAAA,SAAAoC,cAAA,CAAAC,kBAAA;QAAAlC;MAAA,YAAAmC,eAAA,CAAAC,eAAA,CAAApC,IAAA,CAAAqC,OAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}