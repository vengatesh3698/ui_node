{"ast":null,"code":"import { ref, computed, watch } from \"vue\";\nimport { u as useCurrentPageProp } from \"./useCommonProps-59d5fc97.mjs\";\nconst useAnimationNameProps = {\n  ...useCurrentPageProp,\n  animated: {\n    type: Boolean,\n    default: true\n  }\n};\nconst useAnimationName = (props, rows) => {\n  const animationType = ref(\"shuffle\");\n  const animationName = computed(() => props.animated ? `table-transition-${animationType.value}` : \"\");\n  const oldRowsLength = ref(rows.value.length);\n  const isDifferentRowLength = computed(() => rows.value.length !== oldRowsLength.value);\n  watch(rows, (newRows, oldRows) => {\n    const hasRows = !!(newRows.length && oldRows.length);\n    animationType.value = newRows.length > 50 || isDifferentRowLength.value && hasRows ? \"fade\" : \"shuffle\";\n    oldRowsLength.value = newRows.length;\n  });\n  watch(() => props.currentPage, () => {\n    if (!isDifferentRowLength.value) {\n      animationType.value = \"shuffle\";\n    }\n  });\n  return animationName;\n};\nexport { useAnimationName as a, useAnimationNameProps as u };","map":{"version":3,"names":["useAnimationNameProps","useCurrentPageProp","animated","type","Boolean","default","useAnimationName","props","rows","animationType","ref","animationName","computed","value","oldRowsLength","length","isDifferentRowLength","watch","newRows","oldRows","hasRows","currentPage"],"sources":["../../../../../../src/components/va-data-table/hooks/useAnimationName.ts"],"sourcesContent":["import { computed, ExtractPropTypes, Ref, ref, watch, ComputedRef } from 'vue'\n\nimport { useCurrentPageProp } from './useCommonProps'\n\nimport type { DataTableRow } from '../types'\n\ntype AnimationName = 'shuffle' | 'fade'\n\nexport const useAnimationNameProps = {\n  ...useCurrentPageProp,\n  animated: { type: Boolean, default: true },\n}\n\nexport const useAnimationName = (\n  props: ExtractPropTypes<typeof useAnimationNameProps>,\n  rows: Ref<DataTableRow[]>,\n) => {\n  const animationType = ref<AnimationName>('shuffle')\n\n  const animationName = computed(() => props.animated ? `table-transition-${animationType.value}` : '')\n\n  const oldRowsLength = ref(rows.value.length)\n  const isDifferentRowLength = computed(() => rows.value.length !== oldRowsLength.value)\n\n  watch(rows, (newRows, oldRows) => {\n    const hasRows = !!(newRows.length && oldRows.length)\n\n    animationType.value = newRows.length > 50 || (isDifferentRowLength.value && hasRows)\n      ? 'fade'\n      : 'shuffle'\n\n    oldRowsLength.value = newRows.length\n  })\n\n  watch(() => props.currentPage, () => {\n    if (!isDifferentRowLength.value) {\n      animationType.value = 'shuffle'\n    }\n  })\n\n  return animationName\n}\n"],"mappings":";;AAQO,MAAMA,qBAAA,GAAwB;EACnC,GAAGC,kBAAA;EACHC,QAAA,EAAU;IAAEC,IAAA,EAAMC,OAAA;IAASC,OAAA,EAAS;EAAK;AAC3C;AAEa,MAAAC,gBAAA,GAAmBA,CAC9BC,KAAA,EACAC,IAAA,KACG;EACG,MAAAC,aAAA,GAAgBC,GAAA,CAAmB,SAAS;EAE5C,MAAAC,aAAA,GAAgBC,QAAA,CAAS,MAAML,KAAA,CAAML,QAAA,GAAW,oBAAoBO,aAAA,CAAcI,KAAA,KAAU,EAAE;EAEpG,MAAMC,aAAA,GAAgBJ,GAAA,CAAIF,IAAA,CAAKK,KAAA,CAAME,MAAM;EAC3C,MAAMC,oBAAA,GAAuBJ,QAAA,CAAS,MAAMJ,IAAA,CAAKK,KAAA,CAAME,MAAA,KAAWD,aAAA,CAAcD,KAAK;EAE/EI,KAAA,CAAAT,IAAA,EAAM,CAACU,OAAA,EAASC,OAAA,KAAY;IAChC,MAAMC,OAAA,GAAU,CAAC,EAAEF,OAAA,CAAQH,MAAA,IAAUI,OAAA,CAAQJ,MAAA;IAE7CN,aAAA,CAAcI,KAAA,GAAQK,OAAA,CAAQH,MAAA,GAAS,MAAOC,oBAAA,CAAqBH,KAAA,IAASO,OAAA,GACxE,SACA;IAEJN,aAAA,CAAcD,KAAA,GAAQK,OAAA,CAAQH,MAAA;EAAA,CAC/B;EAEKE,KAAA,OAAMV,KAAA,CAAMc,WAAA,EAAa,MAAM;IAC/B,KAACL,oBAAA,CAAqBH,KAAA,EAAO;MAC/BJ,aAAA,CAAcI,KAAA,GAAQ;IACxB;EAAA,CACD;EAEM,OAAAF,aAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}