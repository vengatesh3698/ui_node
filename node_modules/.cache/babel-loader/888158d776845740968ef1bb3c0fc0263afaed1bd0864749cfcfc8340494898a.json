{"ast":null,"code":"import { _ as _sfc_main } from \"./VaTabs.vue_vue_type_script_lang-881019f9.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, createBlock, createCommentVNode, normalizeStyle, createVNode, withCtx, renderSlot } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaTabs_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"aria-disabled\"];\nconst _hoisted_2 = /* @__PURE__ */createElementVNode(\"div\", {\n  class: \"va-tabs__slider\"\n}, null, -1);\nconst _hoisted_3 = [_hoisted_2];\nconst _hoisted_4 = {\n  class: \"va-tabs__tabs-items\"\n};\nconst _hoisted_5 = {\n  class: \"va-tabs__content\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_button = resolveComponent(\"va-button\");\n  const _component_va_config = resolveComponent(\"va-config\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-tabs\", _ctx.computedTabsClass])\n  }, [createElementVNode(\"div\", {\n    ref: \"wrapper\",\n    class: \"va-tabs__wrapper\",\n    role: \"tablist\",\n    \"aria-disabled\": _ctx.$props.disabled\n  }, [_ctx.showPagination && !_ctx.$props.hidePagination ? (openBlock(), createBlock(_component_va_button, {\n    key: 0,\n    class: \"va-tabs__pagination\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaMoveLeftLabel),\n    size: \"medium\",\n    disabled: _ctx.disablePaginationLeft,\n    color: _ctx.color,\n    preset: \"secondary\",\n    icon: _ctx.$props.prevIcon,\n    onClick: _ctx.movePaginationLeft\n  }, null, 8, [\"aria-label\", \"disabled\", \"color\", \"icon\", \"onClick\"])) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n    ref: \"container\",\n    class: normalizeClass([\"va-tabs__container\", _ctx.computedClass])\n  }, [createElementVNode(\"div\", {\n    ref: \"tabs\",\n    class: \"va-tabs__tabs\",\n    style: normalizeStyle(_ctx.paginationControlledStyles)\n  }, [createElementVNode(\"div\", {\n    class: \"va-tabs__slider-wrapper\",\n    \"aria-hidden\": \"true\",\n    style: normalizeStyle(_ctx.sliderStyles)\n  }, _hoisted_3, 4), createVNode(_component_va_config, {\n    components: _ctx.tabConfig\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", _hoisted_4, [renderSlot(_ctx.$slots, \"tabs\")])]),\n    _: 3\n  }, 8, [\"components\"])], 4)], 2), _ctx.showPagination && !_ctx.$props.hidePagination ? (openBlock(), createBlock(_component_va_button, {\n    key: 1,\n    class: \"va-tabs__pagination\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaMoveRightLabel),\n    size: \"medium\",\n    color: _ctx.color,\n    disabled: _ctx.disablePaginationRight,\n    preset: \"secondary\",\n    icon: _ctx.$props.nextIcon,\n    onClick: _ctx.movePaginationRight\n  }, null, 8, [\"aria-label\", \"color\", \"disabled\", \"icon\", \"onClick\"])) : createCommentVNode(\"\", true)], 8, _hoisted_1), createElementVNode(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"default\")])], 2);\n}\nconst _VaTabs = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaTabs as _ };","map":{"version":3,"names":["_hoisted_2","createElementVNode","class","resolveComponent","normalizeClass","_ctx","computedTabsClass","ref","role","$props","disabled","showPagination","hidePagination","openBlock","createBlock","_component_va_button","key","tp","ariaMoveLeftLabel","size","disablePaginationLeft","color","preset","icon","prevIcon","onClick","movePaginationLeft","createCommentVNode","computedClass","style","normalizeStyle","paginationControlledStyles","sliderStyles","_hoisted_3","createVNode","_component_va_config","components","tabConfig","default","withCtx","_hoisted_4","renderSlot","$slots","ariaMoveRightLabel","disablePaginationRight","nextIcon","movePaginationRight","_hoisted_1","_hoisted_5"],"sources":["../../../../../src/components/va-tabs/VaTabs.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-tabs\"\n    :class=\"computedTabsClass\"\n  >\n    <div\n      ref=\"wrapper\"\n      class=\"va-tabs__wrapper\"\n      role=\"tablist\"\n      :aria-disabled=\"$props.disabled\"\n    >\n      <va-button\n        v-if=\"showPagination && !$props.hidePagination\"\n        class=\"va-tabs__pagination\"\n        :aria-label=\"tp($props.ariaMoveLeftLabel)\"\n        size=\"medium\"\n        :disabled=\"disablePaginationLeft\"\n        :color=\"color\"\n        preset=\"secondary\"\n        :icon=\"$props.prevIcon\"\n        @click=\"movePaginationLeft\"\n      />\n      <div\n        ref=\"container\"\n        class=\"va-tabs__container\"\n        :class=\"computedClass\"\n      >\n        <div\n          ref=\"tabs\"\n          class=\"va-tabs__tabs\"\n          :style=\"paginationControlledStyles\"\n        >\n          <div\n            class=\"va-tabs__slider-wrapper\"\n            aria-hidden=\"true\"\n            :style=\"sliderStyles\"\n          >\n            <div class=\"va-tabs__slider\" />\n          </div>\n\n          <va-config :components=\"tabConfig\">\n            <div class=\"va-tabs__tabs-items\">\n              <slot name=\"tabs\" />\n            </div>\n          </va-config>\n        </div>\n      </div>\n      <va-button\n        v-if=\"showPagination && !$props.hidePagination\"\n        class=\"va-tabs__pagination\"\n        :aria-label=\"tp($props.ariaMoveRightLabel)\"\n        size=\"medium\"\n        :color=\"color\"\n        :disabled=\"disablePaginationRight\"\n        preset=\"secondary\"\n        :icon=\"$props.nextIcon\"\n        @click=\"movePaginationRight\"\n      />\n    </div>\n    <div class=\"va-tabs__content\">\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  provide,\n  reactive,\n  ref,\n  unref,\n  watch,\n  Ref,\n  shallowRef,\n  StyleValue,\n  WritableComputedRef,\n  onMounted,\n} from 'vue'\n\nimport {\n  useComponentPresetProp,\n  useStateful, useStatefulProps,\n  useColors,\n  useResizeObserver,\n  useTranslation,\n} from '../../composables'\n\nimport { TabsViewKey, TabComponent, TabSelected } from './types'\n\nimport { VaButton } from '../va-button'\nimport { VaConfig } from '../va-config'\n\nconst getClientWidth = (element: HTMLElement | null | undefined): number => element?.clientWidth || 0\n\nexport default defineComponent({\n  name: 'VaTabs',\n  components: { VaButton, VaConfig },\n  emits: ['update:modelValue', 'click:next', 'click:prev'],\n\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: [String, Number], default: null },\n    left: { type: Boolean, default: true },\n    right: { type: Boolean, default: false },\n    center: { type: Boolean, default: false },\n    grow: { type: Boolean, default: false },\n    hidePagination: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    hideSlider: { type: Boolean, default: false },\n    vertical: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    prevIcon: { type: String, default: 'va-arrow-left' },\n    nextIcon: { type: String, default: 'va-arrow-right' },\n    ariaMoveRightLabel: { type: String, default: '$t:movePaginationLeft' },\n    ariaMoveLeftLabel: { type: String, default: '$t:movePaginationRight' },\n  },\n\n  setup: (props, { emit }) => {\n    const wrapper = shallowRef<HTMLElement>()\n    const container = shallowRef<HTMLElement>()\n    const tabs = shallowRef<HTMLElement>()\n\n    const tabsList: Ref<TabComponent[]> = ref([])\n    const sliderHeight = ref<number | null>(null)\n    const sliderWidth = ref<number | null>(null)\n    const sliderOffsetX = ref(0)\n    const sliderOffsetY = ref(0)\n    const showPagination = ref(false)\n    const tabsContentOffset = ref(0)\n    const startingXPoint = ref(0)\n    const animationIncluded = ref(false)\n    const { valueComputed: tabSelected }: { valueComputed: WritableComputedRef<TabSelected> } = useStateful(props, emit)\n\n    const tabConfig = reactive({\n      VaTab: {\n        color: props.color,\n      },\n    })\n\n    const computedClass = computed(() => {\n      const { left, right, center, grow, disabled } = props\n\n      return {\n        'va-tabs__container--left': left && !right && !center && !grow,\n        'va-tabs__container--right': right,\n        'va-tabs__container--center': center,\n        'va-tabs__container--grow': grow,\n        'va-tabs__container--disabled': disabled,\n      }\n    })\n\n    const computedTabsClass = computed(() => ({ 'va-tabs--vertical': props.vertical }))\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const sliderStyles = computed<StyleValue>(() => {\n      if (props.hideSlider) {\n        return { display: 'none' }\n      }\n\n      return {\n        backgroundColor: colorComputed.value,\n        height: props.vertical ? `${sliderHeight.value}px` : '',\n        width: props.vertical ? '' : `${sliderWidth.value}px`,\n        transform: `translateY(-${sliderOffsetY.value}px) translateX(${sliderOffsetX.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-wrapper-transition)' : '',\n      }\n    })\n\n    const paginationControlledStyles = computed<StyleValue>(() => {\n      // Prevents the movement of vertical tabs\n      if (props.vertical) {\n        return {\n          transform: 'translateX(0px)',\n        }\n      }\n\n      return {\n        transform: `translateX(${startingXPoint.value - tabsContentOffset.value}px)`,\n        transition: animationIncluded.value ? 'var(--va-tabs-slider-transition)' : '',\n        position: props.hidePagination ? 'unset' : 'absolute',\n      }\n    })\n\n    const disablePaginationLeft = computed(() => tabsContentOffset.value === 0)\n\n    const disablePaginationRight = computed(() => {\n      const lastTab = tabsList.value[tabsList.value.length - 1]\n      const leftSidePosition = unref(lastTab.leftSidePosition)\n      const rightSidePosition = unref(lastTab.rightSidePosition)\n      const containerClientWidth = getClientWidth(container.value)\n\n      return rightSidePosition <= tabsContentOffset.value + containerClientWidth ||\n        leftSidePosition <= tabsContentOffset.value\n    })\n\n    // Methods\n    const resetSliderSizes = () => {\n      sliderWidth.value = 0\n      sliderHeight.value = 0\n    }\n\n    const moveToTab = (tab: TabComponent) => {\n      const containerClientWidth = getClientWidth(container.value)\n      const leftSidePosition = unref(tab.leftSidePosition)\n      const rightSidePosition = unref(tab.rightSidePosition)\n\n      // tabsContainer must be at the beginning of container\n      if (!showPagination.value) {\n        tabsContentOffset.value = 0\n        return\n      }\n\n      // tab is completely placed in the container - no need to move tabsContainer\n      if (\n        (leftSidePosition - tabsContentOffset.value >= 0) &&\n        (rightSidePosition - tabsContentOffset.value <= containerClientWidth)\n      ) {\n        return\n      }\n\n      // tab does not fit at the beginning of the container -\n      // move tabsContainer so that the beginning of the tab is at the beginning of the container\n      if (leftSidePosition - tabsContentOffset.value < 0) {\n        tabsContentOffset.value = leftSidePosition\n        return\n      }\n\n      // tab does not fit at the end of the container -\n      // move tabsContainer so that the end of the tab is at the end of the container\n      if (rightSidePosition - tabsContentOffset.value > containerClientWidth) {\n        tabsContentOffset.value = rightSidePosition - containerClientWidth\n        return\n      }\n\n      tabsContentOffset.value = 0\n    }\n\n    const updateStartingXPoint = () => {\n      startingXPoint.value = 0\n\n      if (!showPagination.value) {\n        return\n      }\n\n      const containerClientWidth = getClientWidth(container.value)\n      const tabsClientWidth = getClientWidth(tabs.value)\n\n      if (props.right) {\n        startingXPoint.value = tabsClientWidth - containerClientWidth\n      } else if (props.center) {\n        startingXPoint.value = Math.floor((tabsClientWidth - containerClientWidth) / 2)\n      }\n    }\n\n    const updateTabsState = () => {\n      resetSliderSizes()\n\n      tabsList.value.forEach((tab: TabComponent) => {\n        tab.updateSidePositions()\n\n        const isTabSelected = (tab.name?.value || tab.id) === tabSelected.value\n\n        tab.isActive = tab.isActiveRouterLink || isTabSelected\n\n        if (tab.isActive) {\n          moveToTab(tab)\n          updateSlider(tab)\n        }\n      })\n\n      updateStartingXPoint()\n    }\n\n    const updatePagination = () => {\n      const tabsClientWidth = getClientWidth(tabs.value)\n      const wrapperClientWidth = getClientWidth(wrapper.value)\n\n      // we use requestAnimationFrame to prevent error \"ResizeObserver loop limit exceeded\"\n      requestAnimationFrame(() => {\n        showPagination.value = !!(tabs.value && wrapper.value && tabsClientWidth > wrapperClientWidth)\n      })\n    }\n\n    const movePaginationLeft = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      let offsetToSet = tabsContentOffset.value - containerClientWidth\n\n      for (let i = 0; i < tabsList.value.length - 1; i++) {\n        const currentTabLeftSidePosition = unref(tabsList.value[i]?.leftSidePosition)\n        const nextTabLeftSidePosition = unref(tabsList.value[i + 1]?.leftSidePosition)\n\n        if (\n          (currentTabLeftSidePosition > offsetToSet && currentTabLeftSidePosition < tabsContentOffset.value) ||\n          nextTabLeftSidePosition >= tabsContentOffset.value\n        ) {\n          offsetToSet = currentTabLeftSidePosition\n          break\n        }\n      }\n\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:prev')\n    }\n\n    const movePaginationRight = () => {\n      const containerClientWidth = getClientWidth(container.value)\n      const containerRightSide = tabsContentOffset.value + containerClientWidth\n      let offsetToSet = containerRightSide\n\n      for (let i = 0; i < tabsList.value.length - 1; i++) {\n        const rightSidePosition = unref(tabsList.value[i].rightSidePosition)\n\n        if (rightSidePosition > containerRightSide) {\n          offsetToSet = unref(tabsList.value[i].leftSidePosition)\n\n          if (tabsContentOffset.value < offsetToSet) {\n            break\n          }\n        }\n      }\n\n      const rightSidePosition = unref(tabsList.value[tabsList.value.length - 1]?.rightSidePosition)\n      const maxOffset = rightSidePosition - containerClientWidth\n\n      offsetToSet = Math.min(maxOffset, offsetToSet)\n      tabsContentOffset.value = Math.max(0, offsetToSet)\n\n      emit('click:next')\n    }\n\n    const updateSlider = (tab: TabComponent) => {\n      const tabElement = unref(tab.tabElement)\n      const tabOffsetTop = tabElement?.offsetTop || 0\n      const tabOffsetLeft = tabElement?.offsetLeft || 0\n      const tabClientHeight = tabElement?.clientHeight || 0\n      const tabClientWidth = tabElement?.clientWidth || 0\n\n      if (props.vertical) {\n        const containerClientHeight = container.value?.clientHeight || 0\n        const calculatedSliderOffsetY = containerClientHeight - tabOffsetTop - tabClientHeight\n\n        sliderOffsetY.value = Math.max(calculatedSliderOffsetY, 0)\n        sliderHeight.value = tabClientHeight\n        sliderOffsetX.value = 0\n        sliderWidth.value = 0\n      } else {\n        sliderOffsetX.value = tabOffsetLeft\n        sliderWidth.value = tabClientWidth\n        sliderOffsetY.value = 0\n        sliderHeight.value = 0\n      }\n    }\n\n    const includeAnimation = () => {\n      if (!animationIncluded.value) {\n        requestAnimationFrame(() => {\n          animationIncluded.value = true\n        })\n      }\n    }\n\n    const selectTab = (tab: TabComponent) => {\n      if (!tab) { return }\n\n      tabSelected.value = tab.name?.value || tab.id\n\n      if (props.stateful) {\n        updateTabsState()\n      }\n    }\n\n    const registerTab = (tab: TabComponent) => {\n      const idx = tabsList.value.push(tab) - 1\n\n      tab.id = tab.name?.value || idx\n    }\n\n    const unregisterTab = (tab: TabComponent) => {\n      tabsList.value = tabsList.value.filter((filteredTab: TabComponent) => filteredTab.id !== tab.id)\n\n      tabsList.value.forEach((tabListItem: TabComponent, idx: number) => {\n        tabListItem.id = tabListItem.name?.value || idx\n      })\n    }\n\n    provide(TabsViewKey, {\n      parentDisabled: props.disabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    })\n\n    watch(() => props.modelValue, updateTabsState)\n\n    useResizeObserver([wrapper], updatePagination)\n    useResizeObserver([container], updateTabsState)\n\n    onMounted(() => {\n      requestAnimationFrame(() => {\n        includeAnimation()\n      })\n    })\n\n    return {\n      ...useTranslation(),\n      wrapper,\n      container,\n      tabs,\n      tabsList,\n      sliderHeight,\n      sliderWidth,\n      sliderOffsetX,\n      sliderOffsetY,\n      showPagination,\n      tabsContentOffset,\n      startingXPoint,\n      animationIncluded,\n      colorComputed,\n      tabConfig,\n      computedClass,\n      computedTabsClass,\n      tabSelected,\n      sliderStyles,\n      paginationControlledStyles,\n      disablePaginationLeft,\n      disablePaginationRight,\n      resetSliderSizes,\n      moveToTab,\n      updateStartingXPoint,\n      updateTabsState,\n      updatePagination,\n      movePaginationLeft,\n      movePaginationRight,\n      updateSlider,\n      includeAnimation,\n      selectTab,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-tabs {\n  display: var(--va-tabs-display);\n  align-items: var(--va-tabs-align-items-horizontal);\n  flex-direction: column;\n  position: relative;\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    overflow: hidden;\n    contain: content;\n    display: flex;\n    flex: 1 1 auto;\n    width: 100%;\n  }\n\n  .va-tabs__pagination {\n    flex: 0 0 auto;\n  }\n\n  .va-tabs__container {\n    overflow: hidden;\n    flex: 1 1 auto;\n    display: flex;\n    height: var(--va-tabs-container-height);\n    margin: var(--va-tabs-container-margin);\n    white-space: nowrap;\n    position: relative;\n\n    .va-tabs__tabs {\n      height: 100%;\n    }\n\n    .va-tabs__tabs-items {\n      display: flex;\n    }\n\n    &--right {\n      justify-content: flex-end;\n    }\n\n    &--grow {\n      .va-tabs__tabs {\n        display: flex;\n        min-width: 100%;\n      }\n\n      .va-tabs__tabs-items {\n        width: 100%;\n      }\n\n      .va-tab {\n        flex: 1 0 auto;\n        max-width: none;\n      }\n    }\n\n    &--center {\n      justify-content: center;\n    }\n\n    &--disabled {\n      @include va-disabled();\n\n      pointer-events: none;\n    }\n  }\n\n  &--vertical {\n    align-items: var(--va-tabs-align-items-vertical);\n    flex-direction: row;\n\n    .va-tabs__wrapper {\n      flex: 0 0 auto;\n      width: unset;\n    }\n\n    .va-tabs__container {\n      height: auto;\n\n      .va-tabs__tabs-items {\n        flex-direction: column;\n      }\n\n      .va-tabs__tabs {\n        position: relative;\n      }\n    }\n\n    .va-tab {\n      display: flex;\n\n      &__content {\n        flex: 0 0 auto;\n      }\n    }\n\n    .va-tabs__content {\n      flex: 1 0 auto;\n    }\n  }\n\n  .va-tabs__slider-wrapper {\n    bottom: var(--va-tabs-slider-wrapper-bottom);\n    margin: var(--va-tabs-slider-wrapper-margin);\n    position: absolute;\n    z-index: var(--va-tabs-slider-wrapper-z-index);\n\n    .va-tabs__slider {\n      width: var(--va-tabs-slider-width);\n      height: var(--va-tabs-slider-height);\n    }\n  }\n\n  .va-button {\n    @include keyboard-focus-outline($offset: -2px);\n  }\n}\n</style>\n"],"mappings":";;;;;MAqCYA,UAAA,GAA+B,eAAAC,kBAAA;EAAAC,KAAA;AAAA;;;;;;;;;;+BApCzCC,gBAAA,CA6DM;;IAzDJD,KAAA,EAqDME,cAAA,aAAAC,IAAA,CAAAC,iBAAA;EAAA,IAAAL,kBAAA,CAnDE,OAAkB;IACxBM,GAAA,EAAI;IACHL,KAAA;IAAAM,IAAA;IAGO,iBAAAH,IAAA,CAAcI,MAAA,CAAKC;EAAA,IAAAL,IAAA,CAAAM,cAAA,KAAAN,IAAA,CAAAI,MAAA,CAAAG,cAAA,IAAAC,SAAA,IACEC,WAAA,CAAAC,oBAAA;IAC1BC,GAAA;IACDd,KAAA,EAAK;IACJ,cAAUG,IAAA,CAAqBY,EAAA,CAAAZ,IAAA,CAAAI,MAAA,CAAAS,iBAAA;IAC/BC,IAAA,EAAK;IACNT,QAAA,EAAOL,IAAA,CAAAe,qBAAA;IACNC,KAAA,EAAMhB,IAAA,CAAAgB,KAAA;IACNC,MAAA,EAAK;IAAAC,IAAA,EAAAlB,IAAA,CAAAI,MAAA,CAAAe,QAAA;IAAAC,OAAA,EAAApB,IAAA,CAAAqB;EAER,2BAwBM,4CAvBJC,kBAAA,CAAe,WAAA1B,kBAAA,CACV,OAAC;IAAAM,GAAA;IAGNL,KAAA,EAkBME,cAAA,wBAAAC,IAAA,CAAAuB,aAAA;EAAA,IAAA3B,kBAAA,CAhBE,OAAe;IACpBM,GAAA,EAAK;IAAAL,KAAA;IAEN2B,KAAA,EAMMC,cAAA,CAAAzB,IAAA,CAAA0B,0BAAA;EAAA,IAAA9B,kBAAA,CAJQ,OAAM;IACjBC,KAAA,EAAK;IAAA;IAKR2B,KAAA,EAAAC,cAAA,CAIYzB,IAAA,CAJA2B,YAAA;EAAA,GAAAC,UAAA,MAAAC,WAAA,CACVC,oBAAA,EAEM;IAAAC,UAAA,EAAA/B,IAAA,CAAAgC;EAAA;IAAAC,OAAA,EADJC,OAAA,CAAoB,OAAAtC,kBAAA,QAAAuC,UAAA,GAAAC,UAAA,CAAApC,IAAA,CAAAqC,MAAA,U;;wBAMpB,WAAArC,IAAA,CAAAM,cAAA,KAAAN,IAAA,CAAAI,MAAA,CAAAG,cAAA,IAAAC,SAAA,IACqBC,WAAA,CAAAC,oBAAA;IAC1BC,GAAA;IACDd,KAAA,EAAK;IACJ,cAAOG,IAAA,CAAKY,EAAA,CAAAZ,IAAA,CAAAI,MAAA,CAAAkC,kBAAA;IACZxB,IAAA;IACDE,KAAA,EAAMhB,IAAA,CAACgB,KAAA;IACNX,QAAA,EAAML,IAAA,CAAAuC,sBAAA;IACNtB,MAAA,EAAK;IAAAC,IAAA,EAAAlB,IAAA,CAAAI,MAAA,CAAAoC,QAAA;IAAApB,OAAA,EAAApB,IAAA,CAAAyC;EAGV,uEAAAnB,kBAAA,CAEM,IAFN,QACE,GAAQoB,UAAA,GAAA9C,kBAAA,QAAA+C,UAAA,GAAAP,UAAA,CAAApC,IAAA,CAAAqC,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}