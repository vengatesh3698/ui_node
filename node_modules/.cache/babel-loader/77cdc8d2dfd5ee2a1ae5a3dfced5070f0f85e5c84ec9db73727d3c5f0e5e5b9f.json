{"ast":null,"code":"import { ref, watch } from \"vue\";\nimport { u as useHTMLElement } from \"./useHTMLElement-beee793a.mjs\";\nimport { u as useEvent } from \"./useEvent-d1ae925d.mjs\";\nfunction useHover(el, disabled) {\n  const isHovered = ref(false);\n  const onMouseEnter = () => {\n    isHovered.value = true;\n  };\n  const onMouseLeave = () => {\n    isHovered.value = false;\n  };\n  disabled && watch(disabled, v => {\n    if (v) {\n      isHovered.value = false;\n    }\n  });\n  const target = useHTMLElement(el);\n  useEvent(\"mouseenter\", onMouseEnter, target);\n  useEvent(\"mouseleave\", onMouseLeave, target);\n  return {\n    isHovered,\n    onMouseEnter,\n    onMouseLeave\n  };\n}\nexport { useHover as u };","map":{"version":3,"names":["useHover","el","disabled","isHovered","ref","onMouseEnter","value","onMouseLeave","watch","v","target","useHTMLElement","useEvent"],"sources":["../../../../src/composables/useHover.ts"],"sourcesContent":["import { ref, Ref, watch, onMounted } from 'vue'\n\nimport { useHTMLElement, useEvent } from './'\n\nexport function useHover (el?: Ref<HTMLElement | null | undefined>, disabled?: Ref<boolean>) {\n  const isHovered = ref(false)\n\n  const onMouseEnter = () => { isHovered.value = true }\n  const onMouseLeave = () => { isHovered.value = false }\n\n  disabled && watch(disabled, (v) => {\n    if (v) { isHovered.value = false }\n  })\n\n  const target = useHTMLElement(el as Ref<HTMLElement>)\n\n  useEvent('mouseenter', onMouseEnter, target)\n  useEvent('mouseleave', onMouseLeave, target)\n\n  return { isHovered, onMouseEnter, onMouseLeave }\n}\n"],"mappings":";;;AAIgB,SAAAA,SAAUC,EAAA,EAA0CC,QAAA,EAAyB;EACrF,MAAAC,SAAA,GAAYC,GAAA,CAAI,KAAK;EAE3B,MAAMC,YAAA,GAAeA,CAAA,KAAM;IAAEF,SAAA,CAAUG,KAAA,GAAQ;EAAA;EAC/C,MAAMC,YAAA,GAAeA,CAAA,KAAM;IAAEJ,SAAA,CAAUG,KAAA,GAAQ;EAAA;EAEnCJ,QAAA,IAAAM,KAAA,CAAMN,QAAA,EAAWO,CAAA,IAAM;IACjC,IAAIA,CAAA,EAAG;MAAEN,SAAA,CAAUG,KAAA,GAAQ;IAAM;EAAA,CAClC;EAEK,MAAAI,MAAA,GAASC,cAAA,CAAeV,EAAsB;EAE3CW,QAAA,eAAcP,YAAA,EAAcK,MAAM;EAClCE,QAAA,eAAcL,YAAA,EAAcG,MAAM;EAEpC;IAAEP,SAAA;IAAWE,YAAA;IAAcE;EAAA;AACpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}