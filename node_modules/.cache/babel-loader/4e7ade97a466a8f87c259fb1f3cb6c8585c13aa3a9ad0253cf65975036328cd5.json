{"ast":null,"code":"import { defineComponent } from \"vue\";\nimport { u as useView } from \"../../hooks/view-22b54eb2.mjs\";\nimport { V as VaButton } from \"../../../va-button/index-b0a9ef70.mjs\";\nimport { u as useTranslation } from \"../../../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaDatePickerHeader\",\n  components: {\n    VaButton\n  },\n  emits: [\"update:view\"],\n  props: {\n    monthNames: {\n      type: Array,\n      required: true\n    },\n    view: {\n      type: Object\n    },\n    color: {\n      type: String\n    },\n    textColor: {\n      type: String\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    ariaNextPeriodLabel: {\n      type: String,\n      default: \"$t:nextPeriod\"\n    },\n    ariaPreviousPeriodLabel: {\n      type: String,\n      default: \"$t:previousPeriod\"\n    },\n    ariaSwitchViewLabel: {\n      type: String,\n      default: \"$t:switchView\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      syncView,\n      prev,\n      next\n    } = useView(props, emit);\n    const switchView = () => {\n      if (syncView.value.type === \"day\") {\n        syncView.value = {\n          ...syncView.value,\n          type: \"month\"\n        };\n      } else if (syncView.value.type === \"month\") {\n        syncView.value = {\n          ...syncView.value,\n          type: \"year\"\n        };\n      }\n    };\n    const changeView = view => {\n      syncView.value = view;\n    };\n    return {\n      ...useTranslation(),\n      prev,\n      next,\n      changeView,\n      switchView,\n      syncView\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaDatePickerHeader.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaButton","emits","props","monthNames","type","Array","required","view","Object","color","String","textColor","disabled","Boolean","default","ariaNextPeriodLabel","ariaPreviousPeriodLabel","ariaSwitchViewLabel","setup","emit","syncView","prev","next","useView","switchView","value","changeView","useTranslation"],"sources":["../../../../../../../src/components/va-date-picker/components/VaDatePickerHeader/VaDatePickerHeader.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"syncView.type !== 'year'\"\n    class=\"va-date-picker-header va-date-picker__header\"\n    :style=\"{ color: textColor }\"\n  >\n    <slot name=\"buttonPrev\" v-bind=\"{ onClick: prev }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-left\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"textColor\"\n        :aria-label=\"tp($props.ariaPreviousPeriodLabel)\"\n        round\n        @click=\"prev\"\n      />\n    </slot>\n\n    <div class=\"va-date-picker__header__text\">\n      <slot name=\"header\" v-bind=\"{ year: syncView.year, month: syncView.month, monthNames, view: syncView, changeView, switchView }\">\n        <va-button\n          :disabled=\"$props.disabled\"\n          preset=\"plain\"\n          size=\"small\"\n          :color=\"color\"\n          :textColor=\"textColor\"\n          :aria-label=\"tp($props.ariaSwitchViewLabel)\"\n          @click=\"switchView\"\n        >\n          <slot name=\"year\" v-bind=\"{ year: syncView.year }\">{{ syncView.year }}</slot>\n\n          <slot v-if=\"syncView.type === 'day'\" name=\"month\" v-bind=\"{ month: syncView.month }\">\n            <span class=\"va-date-picker__header__month\">{{ monthNames[syncView.month] }}</span>\n          </slot>\n        </va-button>\n      </slot>\n    </div>\n\n    <slot name=\"buttonNext\" v-bind=\"{ onClick: next }\">\n      <va-button\n        :disabled=\"$props.disabled\"\n        icon=\"va-arrow-right\"\n        preset=\"plain\"\n        size=\"small\"\n        :color=\"color\"\n        :textColor=\"textColor\"\n        :aria-label=\"tp($props.ariaNextPeriodLabel)\"\n        @click=\"next\"\n        round\n      />\n    </slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useView } from '../../hooks/view'\n\nimport { DatePickerView } from '../../types'\n\nimport { VaButton } from '../../../va-button'\nimport { useTranslation } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaDatePickerHeader',\n  components: { VaButton },\n  emits: ['update:view'],\n  props: {\n    monthNames: { type: Array, required: true },\n    view: { type: Object as PropType<DatePickerView> },\n    color: { type: String },\n    textColor: { type: String },\n    disabled: { type: Boolean, default: false },\n\n    ariaNextPeriodLabel: { type: String, default: '$t:nextPeriod' },\n    ariaPreviousPeriodLabel: { type: String, default: '$t:previousPeriod' },\n    ariaSwitchViewLabel: { type: String, default: '$t:switchView' },\n  },\n\n  setup (props, { emit }) {\n    const { syncView, prev, next } = useView(props, emit)\n\n    const switchView = () => {\n      if (syncView.value.type === 'day') {\n        syncView.value = { ...syncView.value, type: 'month' }\n      } else if (syncView.value.type === 'month') {\n        syncView.value = { ...syncView.value, type: 'year' }\n      }\n    }\n\n    const changeView = (view: DatePickerView) => {\n      syncView.value = view\n    }\n\n    return {\n      ...useTranslation(),\n      prev,\n      next,\n      changeView,\n      switchView,\n      syncView,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-date-picker {\n  &__header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &__text {\n      color: currentColor;\n    }\n\n    &__month {\n      margin-left: 0.25rem;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;AAkEA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAEC;EAAS;EACvBC,KAAA,EAAO,CAAC,aAAa;EACrBC,KAAA,EAAO;IACLC,UAAA,EAAY;MAAEC,IAAA,EAAMC,KAAA;MAAOC,QAAA,EAAU;IAAK;IAC1CC,IAAA,EAAM;MAAEH,IAAA,EAAMI;IAAmC;IACjDC,KAAA,EAAO;MAAEL,IAAA,EAAMM;IAAO;IACtBC,SAAA,EAAW;MAAEP,IAAA,EAAMM;IAAO;IAC1BE,QAAA,EAAU;MAAER,IAAA,EAAMS,OAAA;MAASC,OAAA,EAAS;IAAM;IAE1CC,mBAAA,EAAqB;MAAEX,IAAA,EAAMM,MAAA;MAAQI,OAAA,EAAS;IAAgB;IAC9DE,uBAAA,EAAyB;MAAEZ,IAAA,EAAMM,MAAA;MAAQI,OAAA,EAAS;IAAoB;IACtEG,mBAAA,EAAqB;MAAEb,IAAA,EAAMM,MAAA;MAAQI,OAAA,EAAS;IAAgB;EAChE;EAEAI,MAAOhB,KAAA,EAAO;IAAEiB;EAAA,GAAQ;IACtB,MAAM;MAAEC,QAAA;MAAUC,IAAA;MAAMC;IAAS,IAAAC,OAAA,CAAQrB,KAAA,EAAOiB,IAAI;IAEpD,MAAMK,UAAA,GAAaA,CAAA,KAAM;MACnB,IAAAJ,QAAA,CAASK,KAAA,CAAMrB,IAAA,KAAS,OAAO;QACjCgB,QAAA,CAASK,KAAA,GAAQ;UAAE,GAAGL,QAAA,CAASK,KAAA;UAAOrB,IAAA,EAAM;QAAA;MACnC,WAAAgB,QAAA,CAASK,KAAA,CAAMrB,IAAA,KAAS,SAAS;QAC1CgB,QAAA,CAASK,KAAA,GAAQ;UAAE,GAAGL,QAAA,CAASK,KAAA;UAAOrB,IAAA,EAAM;QAAA;MAC9C;IAAA;IAGI,MAAAsB,UAAA,GAAcnB,IAAA,IAAyB;MAC3Ca,QAAA,CAASK,KAAA,GAAQlB,IAAA;IAAA;IAGZ;MACL,GAAGoB,cAAA,CAAe;MAClBN,IAAA;MACAC,IAAA;MACAI,UAAA;MACAF,UAAA;MACAJ;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}