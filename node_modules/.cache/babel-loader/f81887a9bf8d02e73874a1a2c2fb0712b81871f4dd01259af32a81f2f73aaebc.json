{"ast":null,"code":"import { computed, inject, provide } from \"vue\";\nconst LocalConfigKey = \"VaLocalConfig\";\nconst CONFIGS_DEFAULT = computed(() => []);\nfunction useLocalConfig() {\n  return inject(LocalConfigKey, CONFIGS_DEFAULT);\n}\nfunction provideLocalConfig(config) {\n  provide(LocalConfigKey, config);\n}\nfunction useLocalConfigProvider(config) {\n  const prevChain = useLocalConfig();\n  const nextChain = computed(() => [...prevChain.value, config.value]);\n  provideLocalConfig(nextChain);\n}\nexport { useLocalConfigProvider as a, provideLocalConfig as p, useLocalConfig as u };","map":{"version":3,"names":["LocalConfigKey","CONFIGS_DEFAULT","computed","useLocalConfig","inject","provideLocalConfig","config","provide","useLocalConfigProvider","prevChain","nextChain","value"],"sources":["../../../../src/composables/useLocalConfig.ts"],"sourcesContent":["import { inject, provide, computed, ComputedRef } from 'vue'\nimport { ComponentConfig } from '../services/component-config'\n\n/**\n * We need another key to provide injected value.\n */\nexport const LocalConfigKey = 'VaLocalConfig'\n\nexport const CONFIGS_DEFAULT = computed(() => [])\n\nexport function useLocalConfig (): ComputedRef<ComponentConfig[]> {\n  return inject(LocalConfigKey, CONFIGS_DEFAULT)\n}\n\nexport function provideLocalConfig (config: ComputedRef<ComponentConfig[]>) {\n  provide(LocalConfigKey, config)\n}\n\nexport function useLocalConfigProvider (config: ComputedRef<ComponentConfig>) {\n  const prevChain = useLocalConfig()\n  // We want it to be an array and not a merged object for optimization purposes\n  const nextChain = computed(() => [...prevChain.value, config.value])\n\n  provideLocalConfig(nextChain)\n}\n"],"mappings":";AAMO,MAAMA,cAAA,GAAiB;AAEvB,MAAMC,eAAA,GAAkBC,QAAA,CAAS,MAAM,EAAE;AAEzC,SAASC,eAAA,EAAkD;EACzD,OAAAC,MAAA,CAAOJ,cAAA,EAAgBC,eAAe;AAC/C;AAEO,SAASI,mBAAoBC,MAAA,EAAwC;EAC1EC,OAAA,CAAQP,cAAA,EAAgBM,MAAM;AAChC;AAEO,SAASE,uBAAwBF,MAAA,EAAsC;EAC5E,MAAMG,SAAA,GAAYN,cAAA;EAEZ,MAAAO,SAAA,GAAYR,QAAA,CAAS,MAAM,CAAC,GAAGO,SAAA,CAAUE,KAAA,EAAOL,MAAA,CAAOK,KAAK,CAAC;EAEnEN,kBAAA,CAAmBK,SAAS;AAC9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}