{"ast":null,"code":"import { defineComponent, shallowRef, ref, watch, computed } from \"vue\";\nimport { V as VaStepperControls } from \"./VaStepperControls-2c672da3.mjs\";\nimport { V as VaStepperStepButton } from \"./VaStepperStepButton-086b2afd.mjs\";\nimport { a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaStepper\",\n  components: {\n    VaStepperControls,\n    VaStepperStepButton\n  },\n  props: {\n    ...useStatefulProps,\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    steps: {\n      type: Array,\n      default: () => [],\n      required: true\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    navigationDisabled: {\n      type: Boolean,\n      default: false\n    },\n    controlsHidden: {\n      type: Boolean,\n      default: false\n    },\n    nextDisabled: {\n      type: Boolean,\n      default: false\n    },\n    finishButtonHidden: {\n      type: Boolean,\n      default: false\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:progress\"\n    }\n  },\n  emits: [\"update:modelValue\", \"finish\"],\n  setup(props, {\n    emit\n  }) {\n    const stepperNavigation = shallowRef();\n    const {\n      valueComputed: modelValue\n    } = useStateful(props, emit, \"modelValue\", {\n      defaultValue: 0\n    });\n    const focusedStep = ref({\n      trigger: false,\n      stepIndex: props.navigationDisabled ? -1 : props.modelValue\n    });\n    const {\n      getColor\n    } = useColors();\n    const stepperColor = getColor(props.color);\n    const isNextStepDisabled = index => props.nextDisabled && index > modelValue.value;\n    const setStep = index => {\n      if (props.steps[index].disabled) {\n        return;\n      }\n      emit(\"update:modelValue\", index);\n    };\n    const setFocus = direction => {\n      if (props.navigationDisabled) {\n        return;\n      }\n      if (direction === \"next\") {\n        setFocusNextStep(1);\n      } else {\n        setFocusPrevStep(1);\n      }\n    };\n    const setFocusNextStep = idx => {\n      const newValue = focusedStep.value.stepIndex + idx;\n      if (isNextStepDisabled(newValue)) {\n        return;\n      }\n      if (newValue < props.steps.length) {\n        if (props.steps[newValue].disabled) {\n          setFocusNextStep(idx + 1);\n          return;\n        }\n        focusedStep.value.stepIndex = newValue;\n        focusedStep.value.trigger = true;\n      } else {\n        for (let availableIdx = 0; availableIdx < props.steps.length; availableIdx++) {\n          if (!props.steps[availableIdx].disabled) {\n            focusedStep.value.stepIndex = availableIdx;\n            focusedStep.value.trigger = true;\n            break;\n          }\n        }\n      }\n    };\n    const setFocusPrevStep = idx => {\n      const newValue = focusedStep.value.stepIndex - idx;\n      if (newValue >= 0) {\n        if (props.steps[newValue].disabled) {\n          setFocusPrevStep(idx + 1);\n          return;\n        }\n        focusedStep.value.stepIndex = newValue;\n        focusedStep.value.trigger = true;\n      } else {\n        for (let availableIdx = props.steps.length - 1; availableIdx >= 0; availableIdx--) {\n          if (!props.steps[availableIdx].disabled && !isNextStepDisabled(availableIdx)) {\n            focusedStep.value.stepIndex = availableIdx;\n            focusedStep.value.trigger = true;\n            break;\n          }\n        }\n      }\n    };\n    const resetFocus = () => {\n      requestAnimationFrame(() => {\n        var _a;\n        if (!((_a = stepperNavigation.value) == null ? void 0 : _a.contains(document.activeElement))) {\n          focusedStep.value.stepIndex = props.modelValue;\n          focusedStep.value.trigger = false;\n        }\n      });\n    };\n    watch(() => props.modelValue, () => {\n      focusedStep.value.stepIndex = props.modelValue;\n      focusedStep.value.trigger = false;\n    });\n    const nextStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value + 1 + stepsToSkip;\n      if (!props.steps[targetIndex]) {\n        return;\n      }\n      if (props.steps[targetIndex].disabled) {\n        nextStep(stepsToSkip + 1);\n      }\n      setStep(targetIndex);\n    };\n    const prevStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value - 1 - stepsToSkip;\n      if (!props.steps[targetIndex]) {\n        return;\n      }\n      if (props.steps[targetIndex].disabled) {\n        prevStep(stepsToSkip + 1);\n      }\n      setStep(targetIndex);\n    };\n    const stepControls = {\n      setStep,\n      nextStep,\n      prevStep\n    };\n    const getIterableSlotData = (step, index) => ({\n      ...stepControls,\n      step,\n      focus: focusedStep,\n      isActive: props.modelValue === index,\n      isCompleted: props.modelValue > index\n    });\n    const {\n      tp\n    } = useTranslation();\n    return {\n      stepperNavigation,\n      resetFocus,\n      focusedStep,\n      isNextStepDisabled,\n      stepperColor,\n      getColor,\n      stepControls,\n      getIterableSlotData,\n      onArrowKeyPress: direction => {\n        setFocus(direction);\n      },\n      onValueChange: () => {\n        focusedStep.value.stepIndex = props.modelValue;\n        focusedStep.value.trigger = true;\n      },\n      ariaAttributesComputed: computed(() => ({\n        role: \"group\",\n        \"aria-label\": tp(props.ariaLabel),\n        \"aria-orientation\": props.vertical ? \"vertical\" : \"horizontal\"\n      }))\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaStepper.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaStepperControls","VaStepperStepButton","props","useStatefulProps","modelValue","type","Number","default","steps","Array","required","color","String","vertical","Boolean","navigationDisabled","controlsHidden","nextDisabled","finishButtonHidden","ariaLabel","emits","setup","emit","stepperNavigation","shallowRef","valueComputed","useStateful","defaultValue","focusedStep","ref","trigger","stepIndex","getColor","useColors","stepperColor","isNextStepDisabled","index","value","setStep","disabled","setFocus","direction","setFocusNextStep","setFocusPrevStep","idx","newValue","length","availableIdx","resetFocus","requestAnimationFrame","_a","contains","document","activeElement","watch","nextStep","stepsToSkip","targetIndex","prevStep","stepControls","getIterableSlotData","step","focus","isActive","isCompleted","tp","useTranslation","onArrowKeyPress","onValueChange","ariaAttributesComputed","computed","role"],"sources":["../../../../../src/components/va-stepper/VaStepper.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-stepper\"\n    :class=\"{ 'va-stepper--vertical': $props.vertical }\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <ol\n      class=\"va-stepper__navigation\"\n      ref=\"stepperNavigation\"\n      :class=\"{ 'va-stepper__navigation--vertical': $props.vertical }\"\n\n      @click=\"onValueChange\"\n      @keyup.enter=\"onValueChange\"\n      @keyup.space=\"onValueChange\"\n      @keyup.left=\"onArrowKeyPress('prev')\"\n      @keyup.right=\"onArrowKeyPress('next')\"\n      @focusout=\"resetFocus\"\n    >\n      <template\n        v-for=\"(step, i) in $props.steps\"\n        :key=\"i\"\n      >\n        <slot\n          v-if=\"i > 0\"\n          name=\"divider\"\n          v-bind=\"getIterableSlotData(step, i)\"\n        >\n          <span\n            class=\"va-stepper__divider\"\n            :class=\"{ 'va-stepper__divider--vertical': $props.vertical }\"\n            aria-hidden=\"true\"\n          />\n        </slot>\n\n        <slot\n          :name=\"`step-button-${i}`\"\n          v-bind=\"getIterableSlotData(step, i)\"\n        >\n          <va-stepper-step-button\n            :stepIndex=\"i\"\n            :color=\"stepperColor\"\n            :modelValue=\"modelValue\"\n            :nextDisabled=\"nextDisabled\"\n            :step=\"step\"\n            :stepControls=\"stepControls\"\n            :navigationDisabled=\"navigationDisabled\"\n\n            :focus=\"focusedStep\"\n          />\n        </slot>\n      </template>\n    </ol>\n    <div\n      class=\"va-stepper__step-content-wrapper\"\n      :class=\"{ 'va-stepper__step-content-wrapper--vertical': $props.vertical }\"\n    >\n      <template\n        v-for=\"(step, i) in $props.steps\"\n        :key=\"i\"\n      >\n        <div\n          class=\"va-stepper__step-content\"\n          v-if=\"$slots[`step-content-${i}`] && modelValue === i\"\n        >\n          <slot\n            :name=\"`step-content-${i}`\"\n            v-bind=\"getIterableSlotData(step, i)\"\n          />\n        </div>\n      </template>\n      <div class=\"va-stepper__controls\">\n        <va-stepper-controls\n          v-if=\"!controlsHidden\"\n          :modelValue=\"modelValue\"\n          :nextDisabled=\"nextDisabled\"\n          :steps=\"steps\"\n          :stepControls=\"stepControls\"\n          @finish=\"$emit('finish')\"\n        />\n        <slot\n          name=\"controls\"\n          v-bind=\"stepControls\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, Ref, shallowRef, watch } from 'vue'\nimport { useColors, useStateful, useStatefulProps, useTranslation } from '../../composables'\nimport type { Step, StepControls } from './types'\nimport VaStepperControls from './VaStepperControls.vue'\nimport VaStepperStepButton from './VaStepperStepButton.vue'\n\nexport default defineComponent({\n  name: 'VaStepper',\n  components: { VaStepperControls, VaStepperStepButton },\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 0 },\n    steps: {\n      type: Array as PropType<Step[]>,\n      default: () => [],\n      required: true,\n    },\n    color: { type: String, default: 'primary' },\n    vertical: { type: Boolean, default: false },\n    navigationDisabled: { type: Boolean, default: false },\n    controlsHidden: { type: Boolean, default: false },\n    nextDisabled: { type: Boolean, default: false },\n    finishButtonHidden: { type: Boolean, default: false },\n    ariaLabel: { type: String, default: '$t:progress' },\n  },\n  emits: ['update:modelValue', 'finish'],\n  setup (props, { emit }) {\n    const stepperNavigation = shallowRef<HTMLElement>()\n    const { valueComputed: modelValue }: { valueComputed: Ref<number> } = useStateful(props, emit, 'modelValue', { defaultValue: 0 })\n\n    const focusedStep = ref({ trigger: false, stepIndex: props.navigationDisabled ? -1 : props.modelValue })\n\n    const { getColor } = useColors()\n    const stepperColor = getColor(props.color)\n\n    const isNextStepDisabled = (index: number) => props.nextDisabled && index > modelValue.value\n\n    const setStep = (index: number) => {\n      if (props.steps[index].disabled) { return }\n      emit('update:modelValue', index)\n    }\n\n    const setFocus = (direction: 'prev' | 'next') => {\n      if (props.navigationDisabled) { return }\n      if (direction === 'next') {\n        setFocusNextStep(1)\n      } else {\n        setFocusPrevStep(1)\n      }\n    }\n    const setFocusNextStep = (idx: number) => {\n      const newValue = focusedStep.value.stepIndex + idx\n\n      if (isNextStepDisabled(newValue)) { return }\n\n      if (newValue < props.steps.length) {\n        if (props.steps[newValue].disabled) {\n          setFocusNextStep(idx + 1)\n          return\n        }\n        focusedStep.value.stepIndex = newValue\n        focusedStep.value.trigger = true\n      } else {\n        for (let availableIdx = 0; availableIdx < props.steps.length; availableIdx++) {\n          if (!props.steps[availableIdx].disabled) {\n            focusedStep.value.stepIndex = availableIdx\n            focusedStep.value.trigger = true\n            break\n          }\n        }\n      }\n    }\n    const setFocusPrevStep = (idx: number) => {\n      const newValue = focusedStep.value.stepIndex - idx\n      if (newValue >= 0) {\n        if (props.steps[newValue].disabled) {\n          setFocusPrevStep(idx + 1)\n          return\n        }\n        focusedStep.value.stepIndex = newValue\n        focusedStep.value.trigger = true\n      } else {\n        for (let availableIdx = props.steps.length - 1; availableIdx >= 0; availableIdx--) {\n          if (!props.steps[availableIdx].disabled && !(isNextStepDisabled(availableIdx))) {\n            focusedStep.value.stepIndex = availableIdx\n            focusedStep.value.trigger = true\n            break\n          }\n        }\n      }\n    }\n\n    const resetFocus = () => {\n      requestAnimationFrame(() => {\n        if (!stepperNavigation.value?.contains(document.activeElement)) {\n          focusedStep.value.stepIndex = props.modelValue\n          focusedStep.value.trigger = false\n        }\n      })\n    }\n    watch(() => props.modelValue, () => {\n      focusedStep.value.stepIndex = props.modelValue\n      focusedStep.value.trigger = false\n    })\n\n    const nextStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value + 1 + stepsToSkip\n\n      if (!props.steps[targetIndex]) { return }\n      if (props.steps[targetIndex].disabled) {\n        nextStep(stepsToSkip + 1)\n      }\n\n      setStep(targetIndex)\n    }\n\n    const prevStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value - 1 - stepsToSkip\n\n      if (!props.steps[targetIndex]) { return }\n      if (props.steps[targetIndex].disabled) {\n        prevStep(stepsToSkip + 1)\n      }\n\n      setStep(targetIndex)\n    }\n\n    const stepControls: StepControls = { setStep, nextStep, prevStep }\n    const getIterableSlotData = (step: Step, index: number) => ({\n      ...stepControls,\n      step,\n      focus: focusedStep,\n      isActive: props.modelValue === index,\n      isCompleted: props.modelValue > index,\n    })\n\n    const { tp } = useTranslation()\n\n    return {\n      stepperNavigation,\n      resetFocus,\n      focusedStep,\n      isNextStepDisabled,\n      stepperColor,\n      getColor,\n      stepControls,\n      getIterableSlotData,\n      onArrowKeyPress: (direction: 'prev' | 'next') => {\n        setFocus(direction)\n      },\n      onValueChange: () => {\n        focusedStep.value.stepIndex = props.modelValue\n        focusedStep.value.trigger = true\n      },\n      ariaAttributesComputed: computed(() => ({\n        role: 'group',\n        'aria-label': tp(props.ariaLabel),\n        'aria-orientation': props.vertical ? 'vertical' as const : 'horizontal' as const,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-stepper {\n  display: flex;\n  flex-direction: column;\n\n  &--vertical {\n    flex-direction: row;\n  }\n\n  &__navigation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    &--vertical {\n      flex-direction: column;\n      align-items: flex-start;\n      flex-wrap: nowrap;\n    }\n  }\n\n  &__divider {\n    flex-grow: 1;\n    height: var(--va-stepper-divider-thickness);\n    width: var(--va-stepper-divider-length);\n    min-width: var(--va-stepper-divider-min-length);\n    margin: 0 var(--va-stepper-divider-spacing);\n    background: var(--va-stepper-divider-color);\n\n    &--vertical {\n      min-height: var(--va-stepper-divider-min-length);\n      height: var(--va-stepper-divider-length);\n      width: var(--va-stepper-divider-thickness);\n      min-width: var(--va-stepper-divider-thickness);\n      margin: var(--va-stepper-divider-spacing) 0;\n      margin-left: var(--va-stepper-divider-vertical-margin-left);\n    }\n  }\n\n  &__step-content-wrapper {\n    padding: var(--va-stepper-step-content-wrapper-padding);\n  }\n\n  &__step-content {\n    margin: var(--va-stepper-step-content-margin);\n  }\n\n  &__controls {\n    display: flex;\n    gap: var(--va-stepper-controls-gap);\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}