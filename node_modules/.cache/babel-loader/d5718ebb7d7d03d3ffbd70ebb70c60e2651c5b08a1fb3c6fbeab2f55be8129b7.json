{"ast":null,"code":"import { _ as _sfc_main } from \"./VaColorIndicator.vue_vue_type_script_lang-589d2e8f.mjs\";\nimport { openBlock, createElementBlock, mergeProps, withKeys, toHandlers, createElementVNode, normalizeStyle } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaColorIndicator_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: [\"va-color-indicator\", _ctx.computedClass],\n    style: typeof _ctx.computedStyle === \"object\" ? Array.isArray(_ctx.computedStyle) ? [..._ctx.computedStyle, `--va-0-border-radius-computed: ${String(_ctx.borderRadiusComputed)}`] : {\n      ..._ctx.computedStyle,\n      \"--va-0-border-radius-computed\": String(_ctx.borderRadiusComputed)\n    } : _ctx.computedStyle + `;--va-0-border-radius-computed: ${String(_ctx.borderRadiusComputed)}`,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args)),\n    onKeydown: [_cache[1] || (_cache[1] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"enter\"])), _cache[2] || (_cache[2] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"space\"]))]\n  }, toHandlers(_ctx.keyboardFocusListeners, true)), [createElementVNode(\"div\", {\n    class: \"va-color-indicator__core\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, null, 4)], 16);\n}\nconst _VaColorIndicatort = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaColorIndicatort as _ };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as _sfc_main } from \"./VaColorIndicator.vue_vue_type_script_lang-589d2e8f.mjs\";\nimport { openBlock, createElementBlock, mergeProps, withKeys, toHandlers, createElementVNode, normalizeStyle } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaColorIndicator_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: [\"va-color-indicator\", _ctx.computedClass],\n    style: typeof _ctx.computedStyle === \"object\" ? Array.isArray(_ctx.computedStyle) ? [..._ctx.computedStyle, `--va-0-border-radius-computed: ${String(_ctx.borderRadiusComputed)}`] : { ..._ctx.computedStyle, \"--va-0-border-radius-computed\": String(_ctx.borderRadiusComputed) } : _ctx.computedStyle + `;--va-0-border-radius-computed: ${String(_ctx.borderRadiusComputed)}`,\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args)),\n    onKeydown: [\n      _cache[1] || (_cache[1] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"enter\"])),\n      _cache[2] || (_cache[2] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), [\"space\"]))\n    ]\n  }, toHandlers(_ctx.keyboardFocusListeners, true)), [\n    createElementVNode(\"div\", {\n      class: \"va-color-indicator__core\",\n      style: normalizeStyle(_ctx.computedStyle)\n    }, null, 4)\n  ], 16);\n}\nconst _VaColorIndicatort = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport {\n  _VaColorIndicatort as _\n};\n//# sourceMappingURL=VaColorIndicator-20c0e1e6.mjs.map\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}