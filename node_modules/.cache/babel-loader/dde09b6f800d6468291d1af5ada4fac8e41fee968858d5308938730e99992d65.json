{"ast":null,"code":"import { _ as _sfc_main } from \"./VaColorPalette.vue_vue_type_script_lang-7e55a14c.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, Fragment, renderList, createBlock } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaColorPalette_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"aria-label\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_color_indicator = resolveComponent(\"va-color-indicator\");\n  return openBlock(), createElementBlock(\"ul\", {\n    class: \"va-color-palette\",\n    role: \"listbox\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaLabel)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.palette, (color, index) => {\n    return openBlock(), createBlock(_component_va_color_indicator, {\n      key: index,\n      role: \"option\",\n      \"aria-label\": _ctx.tp(_ctx.$props.ariaIndicatorLabel, {\n        color\n      }),\n      \"aria-selected\": _ctx.isSelected(color),\n      tabindex: \"0\",\n      modelValue: _ctx.isSelected(color),\n      color,\n      square: _ctx.indicator === \"square\",\n      \"onUpdate:modelValue\": $event => _ctx.valueComputed = color\n    }, null, 8, [\"aria-label\", \"aria-selected\", \"modelValue\", \"color\", \"square\", \"onUpdate:modelValue\"]);\n  }), 128))], 8, _hoisted_1);\n}\nconst _VaColorPalette = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaColorPalette as _ };","map":{"version":3,"names":["resolveComponent","openBlock","createElementBlock","class","role","_ctx","tp","$props","ariaLabel","Fragment","renderList","palette","color","index","createBlock","_component_va_color_indicator","key","ariaIndicatorLabel","isSelected","tabindex","modelValue","square","indicator","$event","valueComputed"],"sources":["../../../../../src/components/va-color-palette/VaColorPalette.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"va-color-palette\"\n    role=\"listbox\"\n    :aria-label=\"tp($props.ariaLabel)\"\n  >\n    <va-color-indicator\n      v-for=\"(color, index) in palette\"\n      :key=\"index\"\n      role=\"option\"\n      :aria-label=\"tp($props.ariaIndicatorLabel, { color })\"\n      :aria-selected=\"isSelected(color)\"\n      tabindex=\"0\"\n      :modelValue=\"isSelected(color)\"\n      :color=\"color\"\n      :square=\"indicator === 'square'\"\n      @update:modelValue=\"valueComputed = color\"\n    />\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n    ariaLabel: { type: String, default: '$t:colorSelection' },\n    ariaIndicatorLabel: { type: String, default: '$t:color' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  display: flex;\n  padding-left: 0;\n  margin: 0;\n\n  & > * {\n    margin-right: 0.25rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;wCACEA,gBAAA,CAiBK;SAfEC,SAAA,CAAS,GAAAC,kBAAA;IACbC,KAAA;IAAAC,IAAA;IAAA,cAAAC,IAAA,CAEDC,EAAA,CAWED,IAAA,CAAAE,MAAA,CAAAC,SAAA;EAAA,KAAAP,SAAA,CATM,IAAK,GAAAC,kBAAA,CAAAO,QAAA,QAAAC,UAAA,CAAAL,IAAA,CAAAM,OAAA,GAAAC,KAAA,EAAAC,KAAA;WACNZ,SAAA,CAAQ,GAAAa,WAAA,CAAAC,6BAAA;MACZC,GAAA,EAAAH,KAAA;MACAT,IAAA;MACD,cAAYC,IAAA,CAAAC,EAAA,CAAAD,IAAA,CAAAE,MAAA,CAAAU,kBAAA;QAAAL;MAAA;MACX,iBAAYP,IAAA,CAAgBa,UAAA,CAAAN,KAAA;MAC5BO,QAAA,EAAO;MACPC,UAAA,EAAQf,IAAA,CAASa,UAAA,CAAAN,KAAA;MACjBA,KAAA;MAAAS,MAAA,EAAAhB,IAAA,CAAAiB,SAAA;MAAA,uBAAAC,MAAA,IAAAlB,IAAA,CAAAmB,aAAA,GAAAZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}