{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { p as pick, o as omit } from \"../../../vendor-fff696df.mjs\";\nimport { u as useColumnsProps, a as useColumns } from \"./hooks/useColumns-eff0602f.mjs\";\nimport { u as usePaginatedRowsProps, a as usePaginatedRows } from \"./hooks/usePaginatedRows-f3fd32b2.mjs\";\nimport { u as useSelectableProps, a as useSelectableRow } from \"./hooks/useSelectableRow-3a4a9dd6.mjs\";\nimport { u as useStylableProps, a as useStylable } from \"./hooks/useStylable-d0944e31.mjs\";\nimport { u as useBindingProps, a as useBinding } from \"./hooks/useBinding-84ec971a.mjs\";\nimport { u as useAnimationNameProps, a as useAnimationName } from \"./hooks/useAnimationName-650cd4ce.mjs\";\nimport { u as useRowsProps, a as useRows } from \"./hooks/useRows-4dd6ceac.mjs\";\nimport { u as useFilterableProps, a as useFilterable } from \"./hooks/useFilterable-334f2b56.mjs\";\nimport { u as useSortableProps, a as useSortable } from \"./hooks/useSortable-c84a6b96.mjs\";\nimport { u as useTableScrollProps, a as useTableScrollEmits, b as useTableScroll } from \"./hooks/useTableScroll-25045920.mjs\";\nimport { V as VaDataTableThRow } from \"./components/index-0047dd71.mjs\";\nimport { V as VaVirtualScroller } from \"../va-virtual-scroller/index-c6f356cf.mjs\";\nimport { V as VaInnerLoading } from \"../va-inner-loading/index-c9dae102.mjs\";\nimport { V as VaCheckbox } from \"../va-checkbox/index-18feaacf.mjs\";\nimport { e as extractComponentProps } from \"../../utils/component-options/extract-component-options-6b96d215.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useThrottleProps } from \"../../composables/useThrottle-cdbdff3a.mjs\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props-9727421a.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst VaVirtualScrollerProps = extractComponentProps(VaVirtualScroller, [\"items\", \"trackBy\", \"horizontal\", \"disabled\", \"table\"]);\nconst VaDataTableThRowProps = extractComponentProps(VaDataTableThRow);\nconst _sfc_main = defineComponent({\n  name: \"VaDataTable\",\n  components: {\n    VaDataTableThRow,\n    VaVirtualScroller,\n    VaInnerLoading,\n    VaCheckbox\n  },\n  inheritAttrs: false,\n  props: {\n    ...useComponentPresetProp,\n    ...VaVirtualScrollerProps,\n    ...useAnimationNameProps,\n    ...useBindingProps,\n    ...useTableScrollProps,\n    ...useSortableProps,\n    ...useStylableProps,\n    ...useColumnsProps,\n    ...useFilterableProps,\n    ...usePaginatedRowsProps,\n    ...useRowsProps,\n    ...useSelectableProps,\n    ...useThrottleProps,\n    ...pick(VaDataTableThRowProps, [\"ariaSelectAllRowsLabel\", \"ariaSortColumnByLabel\"]),\n    hoverable: {\n      type: Boolean,\n      default: false\n    },\n    clickable: {\n      type: Boolean,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    loadingColor: {\n      type: String,\n      default: \"primary\"\n    },\n    noDataHtml: {\n      type: String,\n      default: \"No items\"\n    },\n    noDataFilteredHtml: {\n      type: String,\n      default: \"No items match the provided filtering condition\"\n    },\n    hideDefaultHeader: {\n      type: Boolean,\n      default: false\n    },\n    footerClone: {\n      type: Boolean,\n      default: false\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    virtualScroller: {\n      type: Boolean,\n      default: false\n    },\n    virtualTrackBy: {\n      type: [String, Number],\n      default: \"initialIndex\"\n    },\n    grid: {\n      type: Boolean,\n      default: false\n    },\n    gridColumns: {\n      type: Number,\n      default: 0\n    },\n    wrapperSize: {\n      type: [Number, String],\n      default: \"auto\"\n    },\n    ariaSelectRowLabel: {\n      type: String,\n      default: \"$t:selectRowByIndex\"\n    }\n  },\n  emits: [\"update:modelValue\",\n  // `modelValue` is selectedItems\n  \"update:sortBy\", \"update:sortingOrder\", \"filtered\", \"sorted\", \"selectionChange\", \"row:click\", \"row:dblclick\", \"row:contextmenu\", ...useTableScrollEmits],\n  setup(props, {\n    attrs,\n    emit\n  }) {\n    const {\n      columnsComputed\n    } = useColumns(props);\n    const {\n      rowsComputed\n    } = useRows(columnsComputed, props);\n    const {\n      filteredRows\n    } = useFilterable(rowsComputed, props, emit);\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n      sortingOrderIconName\n    } = useSortable(columnsComputed, filteredRows, props, emit);\n    const {\n      paginatedRows\n    } = usePaginatedRows(sortedRows, props);\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      toggleRowSelection\n    } = useSelectableRow(paginatedRows, props, emit);\n    const {\n      CSSVariables,\n      getCellCSSVariables,\n      getClass,\n      getStyle\n    } = useStylable(props);\n    const {\n      getRowBind,\n      getCellBind\n    } = useBinding(props);\n    const animationName = useAnimationName(props, paginatedRows);\n    const showNoDataHtml = computed(() => props.items.length === 0);\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0);\n    const onRowClickHandler = (name, event, row) => {\n      if (props.clickable) {\n        emit(name, {\n          event,\n          item: row.source,\n          itemIndex: row.initialIndex\n        });\n      }\n      if (props.selectable && props.grid) {\n        toggleRowSelection(row);\n      }\n    };\n    const computedTableAttributes = computed(() => ({\n      ...omit(attrs, [\"class\", \"style\"]),\n      class: pick(props, [\"striped\", \"selectable\", \"hoverable\", \"clickable\"])\n    }));\n    const filteredVirtualScrollerProps = filterComponentProps(VaVirtualScrollerProps);\n    const virtualScrollerPropsComputed = computed(() => ({\n      ...filteredVirtualScrollerProps.value,\n      items: paginatedRows.value,\n      trackBy: props.virtualTrackBy,\n      disabled: !props.virtualScroller,\n      table: true\n    }));\n    const computedAttributes = computed(() => ({\n      class: [{\n        \"va-data-table--sticky\": props.stickyHeader || props.stickyFooter\n      }, {\n        \"va-data-table--scroll\": !!props.height\n      }, {\n        \"va-data-table--virtual-scroller\": isVirtualScroll.value\n      }, {\n        \"va-data-table--grid\": props.grid\n      }, attrs.class],\n      style: [attrs.style],\n      ...virtualScrollerPropsComputed.value\n    }));\n    const filteredThProps = filterComponentProps(VaDataTableThRowProps);\n    const thAttributesComputed = computed(() => ({\n      ...filteredThProps.value,\n      columns: columnsComputed.value,\n      sortingOrderIconName: sortingOrderIconName.value,\n      severalRowsSelected: severalRowsSelected.value,\n      sortingOrderSync: sortingOrderSync.value,\n      allRowsSelected: allRowsSelected.value,\n      sortBySync: sortBySync.value\n    }));\n    const {\n      scrollContainer,\n      topTrigger,\n      bottomTrigger,\n      doRenderTopTrigger,\n      doRenderBottomTrigger\n    } = useTableScroll(props, emit);\n    const isVirtualScroll = computed(() => props.virtualScroller && !props.grid);\n    const gridColumnsCount = computed(() => props.gridColumns || \"var(--va-data-table-grid-tbody-columns)\");\n    return {\n      ...useTranslation(),\n      scrollContainer,\n      topTrigger,\n      bottomTrigger,\n      columnsComputed,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      toggleSorting,\n      CSSVariables,\n      getCellCSSVariables,\n      getClass,\n      getStyle,\n      thAttributesComputed,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      computedAttributes,\n      computedTableAttributes,\n      animationName,\n      getRowBind,\n      getCellBind,\n      doRenderTopTrigger,\n      doRenderBottomTrigger,\n      isVirtualScroll,\n      gridColumnsCount\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaDataTable.css';","map":{"version":3,"names":["VaVirtualScrollerProps","extractComponentProps","VaVirtualScroller","VaDataTableThRowProps","VaDataTableThRow","_sfc_main","defineComponent","name","components","VaInnerLoading","VaCheckbox","inheritAttrs","props","useComponentPresetProp","useAnimationNameProps","useBindingProps","useTableScrollProps","useSortableProps","useStylableProps","useColumnsProps","useFilterableProps","usePaginatedRowsProps","useRowsProps","useSelectableProps","useThrottleProps","pick","hoverable","type","Boolean","default","clickable","loading","loadingColor","String","noDataHtml","noDataFilteredHtml","hideDefaultHeader","footerClone","striped","virtualScroller","virtualTrackBy","Number","grid","gridColumns","wrapperSize","ariaSelectRowLabel","emits","useTableScrollEmits","setup","attrs","emit","columnsComputed","useColumns","rowsComputed","useRows","filteredRows","useFilterable","sortBySync","sortingOrderSync","toggleSorting","sortedRows","sortingOrderIconName","useSortable","paginatedRows","usePaginatedRows","ctrlSelectRow","shiftSelectRows","toggleBulkSelection","isRowSelected","severalRowsSelected","allRowsSelected","toggleRowSelection","useSelectableRow","CSSVariables","getCellCSSVariables","getClass","getStyle","useStylable","getRowBind","getCellBind","useBinding","animationName","useAnimationName","showNoDataHtml","computed","items","length","showNoDataFilteredHtml","value","onRowClickHandler","event","row","item","source","itemIndex","initialIndex","selectable","computedTableAttributes","omit","class","filteredVirtualScrollerProps","filterComponentProps","virtualScrollerPropsComputed","trackBy","disabled","table","computedAttributes","stickyHeader","stickyFooter","height","isVirtualScroll","style","filteredThProps","thAttributesComputed","columns","scrollContainer","topTrigger","bottomTrigger","doRenderTopTrigger","doRenderBottomTrigger","useTableScroll","gridColumnsCount","useTranslation"],"sources":["../../../../../src/components/va-data-table/VaDataTable.vue"],"sourcesContent":["<template>\n  <va-virtual-scroller\n    class=\"va-data-table\"\n    v-bind=\"computedAttributes\"\n    ref=\"scrollContainer\"\n   :style=\"`--va-0-css-variables-selected-color: ${String(CSSVariables.selectedColor)};--va-1-css-variables-hover-color: ${String(CSSVariables.hoverColor)};--va-2-css-variables-table-height: ${String(CSSVariables.tableHeight)};--va-3-css-variables-thead-bg: ${String(CSSVariables.theadBg)};--va-4-css-variables-tfoot-bg: ${String(CSSVariables.tfootBg)};--va-5-grid-columns-count: ${String(gridColumnsCount)}`\">\n    <template #content=\"{\n        uniqueKey,\n        renderBuffer,\n        currentListOffset,\n        listStyleComputed,\n        containerStyleComputed,\n      }\">\n      <va-inner-loading\n        aria-live=\"polite\"\n        :style=\"containerStyleComputed\"\n        :loading=\"loading\"\n        :color=\"loadingColor\"\n      >\n        <div\n          v-if=\"doRenderTopTrigger\"\n          ref=\"topTrigger\"\n          class=\"va-data-table__scroll-trigger\"\n        />\n\n        <table\n          class=\"va-data-table__table\"\n          :style=\"listStyleComputed\"\n          v-bind=\"computedTableAttributes\"\n        >\n\n          <colgroup v-if=\"'colgroup' in $slots\">\n            <slot name=\"colgroup\" v-bind=\"columnsComputed\" />\n          </colgroup>\n\n          <thead\n            class=\"va-data-table__table-thead\"\n            :class=\"{ 'va-data-table__table-thead--sticky': $props.stickyHeader }\"\n            :style=\"{ top: isVirtualScroll && $props.stickyHeader ? `-${currentListOffset}px` : undefined }\"\n          >\n\n            <slot name=\"headerPrepend\" />\n\n            <slot name=\"header\">\n              <va-data-table-th-row\n                v-if=\"!hideDefaultHeader\"\n                v-bind=\"thAttributesComputed\"\n                v-on:toggleBulkSelection=\"toggleBulkSelection\"\n                v-on:toggleSorting=\"toggleSorting\"\n              >\n                <template v-for=\"(_, slot) of $slots\" v-slot:[slot]=\"scope\">\n                  <slot :name=\"slot\" v-bind=\"scope\" />\n                </template>\n              </va-data-table-th-row>\n            </slot>\n\n            <slot name=\"headerAppend\" />\n          </thead>\n\n          <tbody\n            ref=\"list\"\n            class=\"va-data-table__table-tbody\"\n          >\n            <slot name=\"bodyPrepend\" />\n\n            <transition-group\n              :name=\"isVirtualScroll ? '' : animationName\"\n              :css=\"!$props.virtualScroller\"\n              :appear=\"!$props.virtualScroller\"\n            >\n              <tr\n                v-if=\"showNoDataHtml\"\n                key=\"showNoDataHtml\"\n              >\n                <td\n                  class=\"no-data\"\n                  :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n                  v-html=\"noDataHtml\"\n                />\n              </tr>\n\n              <tr\n                v-else-if=\"showNoDataFilteredHtml\"\n                key=\"showNoDataFilteredHtml\"\n              >\n                <td\n                  class=\"no-data\"\n                  :colspan=\"columnsComputed.length + (selectable ? 1 : 0)\"\n                  v-html=\"noDataFilteredHtml\"\n                />\n              </tr>\n\n              <template\n                v-for=\"(row, index) in renderBuffer\"\n                :key=\"`table-row_${uniqueKey(row, index)}`\"\n              >\n                <tr\n                  class=\"va-data-table__table-tr\"\n                  :class=\"[{ selected: isRowSelected(row), 'va-data-table__table-tr--expanded': row.isExpandableRowVisible }]\"\n                  v-bind=\"getRowBind(row)\"\n                  @click=\"onRowClickHandler('row:click', $event, row)\"\n                  @dblclick=\"onRowClickHandler('row:dblclick', $event, row)\"\n                  @contextmenu=\"onRowClickHandler('row:contextmenu', $event, row)\"\n                >\n                  <td\n                    v-if=\"selectable && !$props.grid\"\n                    class=\"va-data-table__table-td va-data-table__table-cell-select\"\n                    :key=\"`selectable_${uniqueKey(row, index)}`\"\n                    @selectstart.prevent\n                  >\n                    <va-checkbox\n                      class=\"va-data-table__table-cell-checkbox\"\n                      :model-value=\"isRowSelected(row)\"\n                      :color=\"selectedColor\"\n                      :aria-label=\"tp($props.ariaSelectRowLabel, { index: row.initialIndex })\"\n                      @click.shift.exact.stop=\"shiftSelectRows(row)\"\n                      @click.ctrl.exact.stop=\"ctrlSelectRow(row)\"\n                      @click.exact.stop=\"ctrlSelectRow(row)\"\n                    />\n                  </td>\n\n                  <td\n                    v-for=\"(cell, cellIndex) in row.cells\"\n                    :key=\"`table-cell_${cell.column.name + cell.rowIndex}`\"\n                    class=\"va-data-table__table-td\"\n                    :class=\"getClass(cell.column.tdClass)\"\n                    :style=\"[getCellCSSVariables(cell), getStyle(cell.column.tdStyle)]\"\n                    v-bind=\"getCellBind(cell, row)\"\n                  >\n                    <slot\n                      v-if=\"`cell(${cell.column.name})` in $slots\"\n                      :name=\"`cell(${cell.column.name})`\"\n                      v-bind=\"{ ...cell, row, isExpanded: row.isExpandableRowVisible }\"\n                    />\n\n                    <slot v-else name=\"cell\" v-bind=\"{ cell, row }\">\n                      <span v-if=\"$props.grid\" class=\"va-data-table__grid-column-header\">{{ columnsComputed[cellIndex].label }}</span>\n                      {{ cell.value }}\n                    </slot>\n                  </td>\n                </tr>\n                <tr\n                  v-if=\"row.isExpandableRowVisible\"\n                  class=\"va-data-table__table-tr--expanded va-data-table__table-expanded-content\"\n                >\n                  <td :colspan=\"row.cells.length\">\n                    <slot\n                      name=\"expandableRow\"\n                      v-bind=\"row\"\n                    />\n                  </td>\n                </tr>\n              </template>\n            </transition-group>\n\n            <slot name=\"bodyAppend\" />\n          </tbody>\n\n          <tfoot\n            v-if=\"$slots.footer || (footerClone && !$props.grid)\"\n            class=\"va-data-table__table-tfoot\"\n            :class=\"{ 'va-data-table__table-tfoot--sticky': $props.stickyFooter }\"\n            :style=\"{ bottom: isVirtualScroll && $props.stickyFooter ? `${currentListOffset}px` : undefined }\"\n          >\n            <slot name=\"footerPrepend\" />\n\n            <slot name=\"footer\">\n              <va-data-table-th-row\n                v-if=\"!hideDefaultHeader\"\n                v-bind=\"thAttributesComputed\"\n                is-footer\n                v-on:toggleBulkSelection=\"toggleBulkSelection\"\n                v-on:toggleSorting=\"toggleSorting\"\n              >\n                <template v-for=\"(_, slot) of $slots\" v-slot:[slot]=\"scope\">\n                  <slot :name=\"slot\" v-bind=\"scope\" />\n                </template>\n              </va-data-table-th-row>\n            </slot>\n\n            <slot name=\"footerAppend\" />\n          </tfoot>\n        </table>\n\n        <div\n          v-if=\"doRenderBottomTrigger\"\n          ref=\"bottomTrigger\"\n          class=\"va-data-table__scroll-trigger\"\n        />\n      </va-inner-loading>\n    </template>\n  </va-virtual-scroller>\n</template>\n\n<script lang=\"ts\">\nimport { PropType, defineComponent, computed, TableHTMLAttributes, StyleValue } from 'vue'\nimport omit from 'lodash/omit.js'\nimport pick from 'lodash/pick.js'\n\nimport { useColumns, useColumnsProps } from './hooks/useColumns'\nimport { usePaginatedRows, usePaginatedRowsProps } from './hooks/usePaginatedRows'\nimport { useSelectableRow, useSelectableProps } from './hooks/useSelectableRow'\nimport { useStylable, useStylableProps } from './hooks/useStylable'\nimport { useBinding, useBindingProps } from './hooks/useBinding'\nimport { useAnimationName, useAnimationNameProps } from './hooks/useAnimationName'\nimport { useRows, useRowsProps } from './hooks/useRows'\nimport { useFilterable, useFilterableProps } from './hooks/useFilterable'\nimport { useSortable, useSortableProps } from './hooks/useSortable'\nimport { useTableScroll, useTableScrollProps, useTableScrollEmits } from './hooks/useTableScroll'\n\nimport { useComponentPresetProp, useTranslation, useThrottleProps } from '../../composables'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport type { DataTableRow } from './types'\n\nimport { VaDataTableThRow } from './components'\nimport { VaVirtualScroller } from '../va-virtual-scroller'\nimport { VaInnerLoading } from '../va-inner-loading'\nimport { VaCheckbox } from '../va-checkbox'\n\nconst VaVirtualScrollerProps = extractComponentProps(VaVirtualScroller, ['items', 'trackBy', 'horizontal', 'disabled', 'table'])\nconst VaDataTableThRowProps = extractComponentProps(VaDataTableThRow)\n\ntype emitNames = 'update:modelValue' |\n  'update:sortBy' |\n  'update:sortingOrder' |\n  'filtered' |\n  'sorted' |\n  'selectionChange' |\n  'row:click' |\n  'row:dblclick' |\n  'row:contextmenu' |\n  'scroll:top' |\n  'scroll:bottom'\n\nexport default defineComponent({\n  name: 'VaDataTable',\n\n  components: {\n    VaDataTableThRow,\n    VaVirtualScroller,\n    VaInnerLoading,\n    VaCheckbox,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    ...useComponentPresetProp,\n    ...VaVirtualScrollerProps,\n    ...useAnimationNameProps,\n    ...useBindingProps,\n    ...useTableScrollProps,\n    ...useSortableProps,\n    ...useStylableProps,\n    ...useColumnsProps,\n    ...useFilterableProps,\n    ...usePaginatedRowsProps,\n    ...useRowsProps,\n    ...useSelectableProps,\n    ...useThrottleProps,\n    ...pick(VaDataTableThRowProps, ['ariaSelectAllRowsLabel', 'ariaSortColumnByLabel']),\n    hoverable: { type: Boolean, default: false },\n    clickable: { type: Boolean, default: false },\n    loading: { type: Boolean, default: false },\n    loadingColor: { type: String, default: 'primary' },\n    noDataHtml: { type: String, default: 'No items' },\n    noDataFilteredHtml: { type: String, default: 'No items match the provided filtering condition' },\n    hideDefaultHeader: { type: Boolean, default: false },\n    footerClone: { type: Boolean, default: false },\n    striped: { type: Boolean, default: false },\n    virtualScroller: { type: Boolean, default: false },\n    virtualTrackBy: { type: [String, Number] as PropType<string | number>, default: 'initialIndex' },\n    grid: { type: Boolean, default: false },\n    gridColumns: { type: Number, default: 0 },\n    wrapperSize: { type: [Number, String] as PropType<number | string | 'auto'>, default: 'auto' },\n\n    ariaSelectRowLabel: { type: String, default: '$t:selectRowByIndex' },\n  },\n\n  emits: [\n    'update:modelValue', // `modelValue` is selectedItems\n    'update:sortBy',\n    'update:sortingOrder',\n    'filtered',\n    'sorted',\n    'selectionChange',\n    'row:click',\n    'row:dblclick',\n    'row:contextmenu',\n    ...useTableScrollEmits,\n  ],\n\n  setup (props, { attrs, emit }) {\n    const { columnsComputed } = useColumns(props)\n\n    const { rowsComputed } = useRows(columnsComputed, props)\n\n    const { filteredRows } = useFilterable(rowsComputed, props, emit)\n\n    const {\n      sortBySync,\n      sortingOrderSync,\n      toggleSorting,\n      sortedRows,\n      sortingOrderIconName,\n    } = useSortable(columnsComputed, filteredRows, props, emit)\n\n    const { paginatedRows } = usePaginatedRows(sortedRows, props)\n\n    const {\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      severalRowsSelected,\n      allRowsSelected,\n      toggleRowSelection,\n    } = useSelectableRow(paginatedRows, props, emit)\n\n    const {\n      CSSVariables,\n      getCellCSSVariables,\n      getClass,\n      getStyle,\n    } = useStylable(props)\n\n    const { getRowBind, getCellBind } = useBinding(props)\n\n    const animationName = useAnimationName(props, paginatedRows)\n\n    const showNoDataHtml = computed(() => props.items.length === 0)\n\n    const showNoDataFilteredHtml = computed(() => paginatedRows.value.length === 0)\n\n    const onRowClickHandler = (name: emitNames, event: Event, row: DataTableRow) => {\n      if (props.clickable) {\n        emit(name, {\n          event,\n          item: row.source,\n          itemIndex: row.initialIndex,\n        })\n      }\n\n      if (props.selectable && props.grid) {\n        toggleRowSelection(row)\n      }\n    }\n\n    const computedTableAttributes = computed(() => ({\n      ...omit(attrs, ['class', 'style']),\n      class: pick(props, ['striped', 'selectable', 'hoverable', 'clickable']),\n    }) as TableHTMLAttributes)\n\n    const filteredVirtualScrollerProps = filterComponentProps(VaVirtualScrollerProps)\n    const virtualScrollerPropsComputed = computed(() => ({\n      ...filteredVirtualScrollerProps.value,\n      items: paginatedRows.value,\n      trackBy: props.virtualTrackBy,\n      disabled: !props.virtualScroller,\n      table: true,\n    }))\n\n    const computedAttributes = computed(() => ({\n      class: [\n        { 'va-data-table--sticky': props.stickyHeader || props.stickyFooter },\n        { 'va-data-table--scroll': !!props.height },\n        { 'va-data-table--virtual-scroller': isVirtualScroll.value },\n        { 'va-data-table--grid': props.grid },\n        attrs.class as string[],\n      ],\n      style: [attrs.style as StyleValue],\n      ...virtualScrollerPropsComputed.value,\n    }))\n\n    const filteredThProps = filterComponentProps(VaDataTableThRowProps)\n    const thAttributesComputed = computed(() => ({\n      ...filteredThProps.value,\n      columns: columnsComputed.value,\n      sortingOrderIconName: sortingOrderIconName.value,\n      severalRowsSelected: severalRowsSelected.value,\n      sortingOrderSync: sortingOrderSync.value,\n      allRowsSelected: allRowsSelected.value,\n      sortBySync: sortBySync.value,\n    }))\n\n    const {\n      scrollContainer,\n      topTrigger,\n      bottomTrigger,\n      doRenderTopTrigger,\n      doRenderBottomTrigger,\n    } = useTableScroll(props, emit)\n\n    const isVirtualScroll = computed(() => props.virtualScroller && !props.grid)\n\n    const gridColumnsCount = computed(() => props.gridColumns || 'var(--va-data-table-grid-tbody-columns)')\n\n    return {\n      ...useTranslation(),\n      scrollContainer,\n      topTrigger,\n      bottomTrigger,\n      columnsComputed,\n      ctrlSelectRow,\n      shiftSelectRows,\n      toggleBulkSelection,\n      isRowSelected,\n      toggleSorting,\n      CSSVariables,\n      getCellCSSVariables,\n      getClass,\n      getStyle,\n      thAttributesComputed,\n      showNoDataHtml,\n      showNoDataFilteredHtml,\n      onRowClickHandler,\n      computedAttributes,\n      computedTableAttributes,\n      animationName,\n      getRowBind,\n      getCellBind,\n      doRenderTopTrigger,\n      doRenderBottomTrigger,\n      isVirtualScroll,\n      gridColumnsCount,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources/index.scss\";\n@import \"variables\";\n\n.va-data-table {\n  // we set variables below via the `useStylable` hook\n  --va-data-table-selected-color: var(--va-0-css-variables-selected-color);\n  --va-data-table-hover-color: var(--va-1-css-variables-hover-color);\n  --va-data-table-height--computed: var(--va-2-css-variables-table-height);\n  --va-data-table-thead-background--computed: var(--va-3-css-variables-thead-bg);\n  --va-data-table-tfoot-background--computed: var(--va-4-css-variables-tfoot-bg);\n  --va-data-table-grid-tbody-columns: 4;\n\n  @include media-breakpoint-down(lg) {\n    --va-data-table-grid-tbody-columns: 3;\n  }\n\n  @include media-breakpoint-down(md) {\n    --va-data-table-grid-tbody-columns: 2;\n  }\n\n  @include media-breakpoint-down(sm) {\n    --va-data-table-grid-tbody-columns: 1;\n  }\n\n  min-width: unset;\n  font-family: var(--va-font-family);\n\n  &:not(.va-data-table--virtual-scroller) {\n    overflow-x: auto;\n    overflow-y: hidden;\n  }\n\n  &--sticky:not(.va-data-table--virtual-scroller),\n  &--scroll {\n    overflow-y: auto;\n    height: var(--va-data-table-height--computed);\n    max-height: var(--va-data-table-max-height);\n  }\n\n  .va-data-table__table {\n    width: 100%;\n    cursor: default;\n    white-space: nowrap;\n\n    .va-data-table__table-thead {\n      color: var(--va-data-table-thead-color);\n      border-bottom: var(--va-data-table-thead-border);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-bottom-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        top: 0;\n        z-index: 1;\n        background: var(--va-data-table-thead-background--computed);\n      }\n    }\n\n    .va-data-table__table-tbody {\n      .no-data {\n        text-align: var(--va-data-table-no-data-text-align);\n        vertical-align: var(--va-data-table-no-data-vertical-align);\n      }\n    }\n\n    .va-data-table__table-tfoot {\n      color: var(--va-data-table-tfoot-color);\n      border-top: var(--va-data-table-thead-border);\n\n      th {\n        border-bottom: none;\n        box-shadow: var(--va-data-table-thead-border-top-shadow);\n      }\n\n      &--sticky {\n        position: sticky;\n        bottom: 0;\n        z-index: 1;\n        background: var(--va-data-table-tfoot-background--computed);\n      }\n    }\n\n    .va-data-table__table-td {\n      padding: var(--va-data-table-cell-padding);\n      text-align: var(--va-data-table-align);\n      vertical-align: var(--va-data-table-vertical-align);\n    }\n\n    .va-data-table__table-th,\n    .va-data-table__table-td {\n      &.va-data-table__table-cell-select {\n        width: var(--va-data-table-selectable-cell-width);\n        min-width: var(--va-data-table-selectable-cell-width);\n        text-align: var(--va-data-table-selectable-cell-text-align);\n        vertical-align: var(--va-data-table-selectable-cell-vertical-align);\n        cursor: var(--va-data-table-selectable-tr-cursor);\n      }\n\n      & .va-data-table__table-cell-checkbox {\n        display: block;\n      }\n    }\n\n    .va-data-table__table-tr {\n      &.selected {\n        background-color: var(--va-data-table-selected-color);\n      }\n    }\n\n    &.clickable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    &.striped {\n      .va-data-table__table-tbody {\n        .va-data-table__table-tr {\n          &:nth-child(even) {\n            &:not(.selected) {\n              position: relative;\n\n              @include va-background(var(--va-data-table-striped-tr-background-color), var(--va-data-table-striped-tr-opacity), -1);\n            }\n          }\n        }\n      }\n    }\n\n    &.selectable,\n    &.hoverable {\n      .va-data-table__table-tbody {\n        .va-data-table__table-tr,\n        .va-data-table__table-tr:nth-child(even) {\n          &:hover {\n            position: relative;\n\n            @include va-background(var(--va-data-table-hover-color), 1, -1);\n          }\n        }\n      }\n    }\n\n    .table-transition-fade-leave-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n\n    .table-transition-fade-enter-active {\n      transition: opacity var(--va-data-table-transition) 0.2s;\n    }\n\n    .table-transition-fade-enter-from,\n    .table-transition-shuffle-enter-from,\n    .table-transition-fade-leave-to,\n    .table-transition-shuffle-leave-to {\n      opacity: 0;\n    }\n\n    .table-transition-shuffle-move {\n      transition: transform var(--va-data-table-transition);\n    }\n\n    .table-transition-shuffle-leave-active {\n      transition: none;\n    }\n\n    .table-transition-shuffle-enter-active {\n      transition: opacity var(--va-data-table-transition);\n    }\n  }\n\n  &__scroll-trigger {\n    user-select: none;\n  }\n\n  &--grid {\n    .va-data-table__table-thead {\n      .va-data-table__table-tr {\n        display: flex;\n        justify-content: space-between;\n\n        .va-data-table__table-th {\n          box-shadow: none;\n        }\n\n        @include media-breakpoint-down(sm) {\n          flex-direction: column;\n        }\n      }\n    }\n\n    .va-data-table__table-tbody {\n      margin-top: var(--va-data-table-grid-tbody-margin-top);\n      display: grid;\n      grid-template-columns: repeat(var(--va-5-grid-columns-count), minmax(0, 1fr));\n      gap: var(--va-data-table-grid-tbody-gap);\n\n      .va-data-table__table-tr {\n        grid-column: span 1 / span 1;\n        padding: var(--va-data-table-grid-tr-padding);\n        display: flex;\n        flex-direction: column;\n        border: var(--va-data-table-grid-tr-border);\n        border-radius: var(--va-data-table-grid-tr-border-radius);\n      }\n\n      .va-data-table__table-td {\n        overflow: hidden;\n      }\n    }\n\n    .selectable {\n      .va-data-table__table-tr {\n        cursor: pointer;\n      }\n    }\n\n    .va-data-table__table-td {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .va-data-table__grid-column-header {\n      font-weight: var(--va-data-table-grid-tr-header-font-weight);\n      color: var(--va-data-table-grid-tr-header-color);\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}