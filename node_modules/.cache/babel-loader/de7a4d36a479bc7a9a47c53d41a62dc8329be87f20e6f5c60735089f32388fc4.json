{"ast":null,"code":"import { _ as _sfc_main } from \"./VaSlider.vue_vue_type_script_lang-0322d838.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, renderSlot, createCommentVNode, normalizeStyle, createTextVNode, toDisplayString, createVNode, createElementVNode, Fragment, renderList, normalizeClass, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaSlider_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"va-slider__input-wrapper\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_2 = [\"id\"];\nconst _hoisted_3 = {\n  key: 2,\n  class: \"va-input__label\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_4 = [\"tabindex\", \"onFocus\"];\nconst _hoisted_5 = [\"tabindex\"];\nconst _hoisted_6 = {\n  key: 3,\n  class: \"va-input__label--inverse\",\n  \"aria-hidden\": \"true\"\n};\nconst _hoisted_7 = [\"id\"];\nconst _hoisted_8 = {\n  key: 5,\n  class: \"va-slider__input-wrapper\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: [\"va-slider\", _ctx.sliderClass]\n  }, _ctx.ariaAttributesComputed), [(_ctx.vertical ? _ctx.$slots.append : _ctx.$slots.prepend) ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, _ctx.vertical ? \"append\" : \"prepend\")])) : createCommentVNode(\"\", true), (_ctx.$slots.label || _ctx.label) && !_ctx.invertLabel ? (openBlock(), createElementBlock(\"span\", {\n    key: 1,\n    class: \"va-input__label\",\n    id: _ctx.ariaLabelIdComputed,\n    style: normalizeStyle(_ctx.labelStyles)\n  }, [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 12, _hoisted_2)) : createCommentVNode(\"\", true), (_ctx.vertical ? _ctx.iconAppend : _ctx.iconPrepend) ? (openBlock(), createElementBlock(\"span\", _hoisted_3, [createVNode(_component_va_icon, {\n    name: _ctx.vertical ? _ctx.iconAppend : _ctx.iconPrepend,\n    color: _ctx.getColor(_ctx.$props.color),\n    size: 16\n  }, null, 8, [\"name\", \"color\"])])) : createCommentVNode(\"\", true), createElementVNode(\"div\", {\n    ref: \"sliderContainer\",\n    class: \"va-slider__container\",\n    onMousedown: _cache[3] || (_cache[3] = (...args) => _ctx.clickOnContainer && _ctx.clickOnContainer(...args)),\n    onTouchstart: _cache[4] || (_cache[4] = (...args) => _ctx.clickOnContainer && _ctx.clickOnContainer(...args))\n  }, [createElementVNode(\"div\", {\n    class: \"va-slider__track\",\n    \"aria-hidden\": \"true\",\n    style: normalizeStyle(_ctx.trackStyles)\n  }, null, 4), _ctx.pins ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList(_ctx.pinsCol, (pin, i) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: i,\n      class: normalizeClass([\"va-slider__mark\", {\n        \"va-slider__mark--active\": _ctx.checkActivePin(pin)\n      }]),\n      style: normalizeStyle(_ctx.getPinStyles(pin))\n    }, null, 6);\n  }), 128)) : createCommentVNode(\"\", true), _ctx.$props.range ? (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [createElementVNode(\"div\", {\n    ref: \"process\",\n    class: normalizeClass([\"va-slider__track va-slider__track--selected\", {\n      \"va-slider__track--active\": _ctx.isFocused\n    }]),\n    \"aria-hidden\": \"true\",\n    style: normalizeStyle(_ctx.processedStyles)\n  }, null, 6), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.orders, order => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: \"dot\" + order,\n      ref_for: true,\n      ref: _ctx.setItemRefByIndex(order),\n      class: normalizeClass([\"va-slider__handler\", _ctx.dotClass]),\n      style: normalizeStyle(_ctx.getDottedStyles(order)),\n      tabindex: _ctx.disabled || _ctx.readonly ? void 0 : 0,\n      onFocus: $event => (_ctx.isFocused = true, _ctx.currentSliderDotIndex = order),\n      onBlur: _cache[0] || (_cache[0] = $event => _ctx.isFocused = false)\n    }, [_ctx.isActiveDot(order) ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      style: normalizeStyle({\n        backgroundColor: _ctx.getColor(_ctx.$props.color)\n      }),\n      class: \"va-slider__handler__dot--focus\"\n    }, null, 4)) : createCommentVNode(\"\", true), _ctx.trackLabelVisible ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      style: normalizeStyle(_ctx.labelStyles),\n      class: \"va-slider__handler__dot--value\"\n    }, [renderSlot(_ctx.$slots, \"trackLabel\", normalizeProps(guardReactiveProps({\n      value: _ctx.getValueByOrder(order),\n      order\n    })), () => [createTextVNode(toDisplayString(_ctx.getTrackLabel(_ctx.getValueByOrder(order), order)), 1)])], 4)) : createCommentVNode(\"\", true)], 46, _hoisted_4);\n  }), 128))], 64)) : (openBlock(), createElementBlock(Fragment, {\n    key: 2\n  }, [createElementVNode(\"div\", {\n    ref: \"process\",\n    \"aria-hidden\": \"true\",\n    class: normalizeClass([\"va-slider__track va-slider__track--selected\", {\n      \"va-slider__track--active\": _ctx.isFocused\n    }]),\n    style: normalizeStyle(_ctx.processedStyles)\n  }, null, 6), createElementVNode(\"div\", {\n    ref: \"dot\",\n    class: normalizeClass([\"va-slider__handler\", _ctx.dotClass]),\n    style: normalizeStyle(_ctx.dottedStyles),\n    tabindex: _ctx.$props.disabled || _ctx.$props.readonly ? void 0 : 0,\n    onFocus: _cache[1] || (_cache[1] = $event => _ctx.isFocused = true),\n    onBlur: _cache[2] || (_cache[2] = $event => _ctx.isFocused = false)\n  }, [_ctx.isActiveDot(0) ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-slider__handler__dot--focus\",\n    style: normalizeStyle({\n      backgroundColor: _ctx.getColor(_ctx.$props.color)\n    })\n  }, null, 4)) : createCommentVNode(\"\", true), _ctx.trackLabelVisible ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: \"va-slider__handler__dot--value\",\n    style: normalizeStyle(_ctx.labelStyles)\n  }, [renderSlot(_ctx.$slots, \"trackLabel\", normalizeProps(guardReactiveProps({\n    value: _ctx.getValueByOrder()\n  })), () => [createTextVNode(toDisplayString(_ctx.getTrackLabel(_ctx.getValueByOrder())), 1)])], 4)) : createCommentVNode(\"\", true)], 46, _hoisted_5)], 64))], 544), (_ctx.vertical ? _ctx.iconPrepend : _ctx.iconAppend) ? (openBlock(), createElementBlock(\"span\", _hoisted_6, [createVNode(_component_va_icon, {\n    name: _ctx.vertical ? _ctx.iconPrepend : _ctx.iconAppend,\n    color: _ctx.getColor(_ctx.$props.color),\n    size: 16\n  }, null, 8, [\"name\", \"color\"])])) : createCommentVNode(\"\", true), (_ctx.$slots.label || _ctx.label) && _ctx.invertLabel ? (openBlock(), createElementBlock(\"span\", {\n    key: 4,\n    class: \"va-input__label va-input__label--inverse\",\n    style: normalizeStyle(_ctx.labelStyles),\n    id: _ctx.ariaLabelIdComputed\n  }, [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])], 12, _hoisted_7)) : createCommentVNode(\"\", true), (_ctx.vertical ? _ctx.$slots.prepend : _ctx.$slots.append) ? (openBlock(), createElementBlock(\"div\", _hoisted_8, [renderSlot(_ctx.$slots, _ctx.vertical ? \"prepend\" : \"append\")])) : createCommentVNode(\"\", true)], 16);\n}\nconst _VaSlider = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaSlider as _ };","map":{"version":3,"names":["_hoisted_1","key","class","_hoisted_3","_hoisted_6","_hoisted_8","_component_va_icon","resolveComponent","openBlock","createElementBlock","mergeProps","_ctx","sliderClass","ariaAttributesComputed","vertical","$slots","append","prepend","renderSlot","createCommentVNode","label","invertLabel","id","ariaLabelIdComputed","style","normalizeStyle","labelStyles","_hoisted_2","iconAppend","iconPrepend","createVNode","name","color","getColor","$props","size","createElementVNode","ref","onMousedown","_cache","args","clickOnContainer","onTouchstart","trackStyles","pins","Fragment","renderList","pinsCol","pin","i","normalizeClass","checkActivePin","getPinStyles","range","isFocused","processedStyles","orders","order","ref_for","setItemRefByIndex","dotClass","getDottedStyles","tabindex","disabled","readonly","onFocus","$event","currentSliderDotIndex","onBlur","isActiveDot","backgroundColor","trackLabelVisible","normalizeProps","guardReactiveProps","value","getValueByOrder","dottedStyles","_hoisted_7"],"sources":["../../../../../src/components/va-slider/VaSlider.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-slider\"\n    :class=\"sliderClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <div\n      v-if=\"vertical ? $slots.append : $slots.prepend\"\n      class=\"va-slider__input-wrapper\"\n      aria-hidden=\"true\"\n    >\n      <slot :name=\"vertical ? 'append' : 'prepend'\" />\n    </div>\n    <span\n      v-if=\"($slots.label || label) && !invertLabel\"\n      class=\"va-input__label\"\n      :id=\"ariaLabelIdComputed\"\n      :style=\"labelStyles\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <span\n      v-if=\"vertical ? iconAppend : iconPrepend\"\n      class=\"va-input__label\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconAppend : iconPrepend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <div\n      ref=\"sliderContainer\"\n      class=\"va-slider__container\"\n      @mousedown=\"clickOnContainer\"\n      @touchstart=\"clickOnContainer\"\n    >\n      <div\n        class=\"va-slider__track\"\n        aria-hidden=\"true\"\n        :style=\"trackStyles\"\n      />\n      <template v-if=\"pins\">\n        <div\n          v-for=\"(pin, i) in pinsCol\"\n          :key=\"i\"\n          class=\"va-slider__mark\"\n          :class=\"{ 'va-slider__mark--active': checkActivePin(pin) }\"\n          :style=\"getPinStyles(pin)\"\n        />\n      </template>\n      <template v-if=\"$props.range\">\n        <div\n          ref=\"process\"\n          class=\"va-slider__track va-slider__track--selected\"\n          aria-hidden=\"true\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          v-for=\"order in orders\"\n          :key=\"'dot' + order\"\n          :ref=\"setItemRefByIndex(order)\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"getDottedStyles(order)\"\n          :tabindex=\"disabled || readonly ? undefined : 0\"\n          @focus=\"isFocused = true, currentSliderDotIndex = order\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(order)\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n            class=\"va-slider__handler__dot--focus\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            :style=\"labelStyles\"\n            class=\"va-slider__handler__dot--value\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder(order), order }\"\n            >\n              {{ getTrackLabel(getValueByOrder(order), order) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n      <template v-else>\n        <div\n          ref=\"process\"\n          aria-hidden=\"true\"\n          class=\"va-slider__track va-slider__track--selected\"\n          :class=\"{'va-slider__track--active': isFocused}\"\n          :style=\"processedStyles\"\n        />\n        <div\n          ref=\"dot\"\n          class=\"va-slider__handler\"\n          :class=\"dotClass\"\n          :style=\"dottedStyles\"\n          :tabindex=\"$props.disabled || $props.readonly ? undefined : 0\"\n          @focus=\"isFocused = true\"\n          @blur=\"isFocused = false\"\n        >\n          <div\n            v-if=\"isActiveDot(0)\"\n            class=\"va-slider__handler__dot--focus\"\n            :style=\"{ backgroundColor: getColor($props.color) }\"\n          />\n          <div\n            v-if=\"trackLabelVisible\"\n            class=\"va-slider__handler__dot--value\"\n            :style=\"labelStyles\"\n          >\n            <slot\n              name=\"trackLabel\"\n              v-bind=\"{ value: getValueByOrder() }\"\n            >\n              {{ getTrackLabel(getValueByOrder()) }}\n            </slot>\n          </div>\n        </div>\n      </template>\n    </div>\n    <span\n      v-if=\"vertical ? iconPrepend : iconAppend\"\n      class=\"va-input__label--inverse\"\n      aria-hidden=\"true\"\n    >\n      <va-icon\n        :name=\"vertical ? iconPrepend : iconAppend\"\n        :color=\"getColor($props.color)\"\n        :size=\"16\"\n      />\n    </span>\n    <span\n      v-if=\"($slots.label || label) && invertLabel\"\n      class=\"va-input__label va-input__label--inverse\"\n      :style=\"labelStyles\"\n      :id=\"ariaLabelIdComputed\"\n    >\n      <slot name=\"label\">\n        {{ label }}\n      </slot>\n    </span>\n    <div\n      v-if=\"vertical ? $slots.prepend : $slots.append\"\n      class=\"va-slider__input-wrapper\"\n    >\n      <slot :name=\"vertical ? 'prepend' : 'append'\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, ref, computed, onMounted, onBeforeUnmount, shallowRef, CSSProperties, WritableComputedRef } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { generateUniqueId } from '../../utils/uuid'\nimport { useComponentPresetProp, useColors, useArrayRefs, useBem, useStateful, useStatefulProps, useTranslation } from '../../composables'\nimport { validateSlider } from './validateSlider'\n\nimport { VaIcon } from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaSlider',\n  components: { VaIcon },\n  emits: ['drag-start', 'drag-end', 'change', 'update:modelValue'],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    range: { type: Boolean, default: false },\n    modelValue: ({ type: [Number, Array] as PropType<number | number[]>, default: 0 }),\n    trackLabel: ({ type: [Function, String] as PropType<string | ((val: number, order?: number) => string) | undefined> }),\n    color: { type: String, default: 'primary' },\n    trackColor: { type: String, default: '' },\n    labelColor: { type: String, default: '' },\n    trackLabelVisible: { type: Boolean, default: false },\n    min: { type: Number, default: 0 },\n    max: { type: Number, default: 100 },\n    step: { type: Number, default: 1 },\n    label: { type: String, default: '' },\n    invertLabel: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    pins: { type: Boolean, default: false },\n    iconPrepend: { type: String, default: '' },\n    iconAppend: { type: String, default: '' },\n    vertical: { type: Boolean, default: false },\n    showTrack: { type: Boolean, default: true },\n    ariaLabel: { type: String, default: '$t:sliderValue' },\n  },\n  setup (props, { emit, slots }) {\n    const { getColor, getHoverColor } = useColors()\n\n    const sliderContainer = shallowRef<HTMLElement>()\n    const dot = shallowRef<HTMLElement>()\n    const { setItemRefByIndex, itemRefs: dots } = useArrayRefs()\n\n    const isFocused = ref(false)\n    const flag = ref(false)\n    const offset = ref(0)\n    const size = ref(0)\n\n    const defaultValue: number | number[] = props.range ? [0, 100] : 0\n    const { valueComputed }: { valueComputed: WritableComputedRef<number | number[]> } = useStateful(props, emit, 'modelValue', { defaultValue })\n\n    const currentSliderDotIndex = ref(0)\n    const hasMouseDown = ref(false)\n\n    const orders = computed(() => props.vertical ? [1, 0] : [0, 1])\n\n    const pinPositionStyle = computed(() => props.vertical ? 'bottom' : 'left')\n    const trackSizeStyle = computed(() => props.vertical ? 'height' : 'width')\n\n    const moreToLess = computed(() => Array.isArray(val.value) && (val.value[1] - props.step) < val.value[0])\n\n    const lessToMore = computed(() => Array.isArray(val.value) && (val.value[0] + props.step) > val.value[1])\n\n    const sliderClass = useBem('va-slider', () => ({\n      ...pick(props, ['disabled', 'readonly', 'vertical']),\n      active: isFocused.value,\n      horizontal: !props.vertical,\n      grabbing: hasMouseDown.value,\n    }))\n\n    const dotClass = useBem('va-slider__handler', () => ({\n      onFocus: !props.range && (flag.value || isFocused.value),\n      inactive: !isFocused.value,\n    }))\n\n    const labelStyles = computed(() => ({\n      color: props.labelColor ? getColor(props.labelColor) : getColor(props.color),\n    }))\n\n    const trackStyles = computed(() => ({\n      backgroundColor: props.trackColor\n        ? getColor(props.trackColor)\n        : getHoverColor(getColor(props.color)),\n    }))\n\n    const processedStyles = computed(() => {\n      if (Array.isArray(val.value)) {\n        const val0 = ((val.value[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((val.value[1] - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          [trackSizeStyle.value]: `${val1 - val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      } else {\n        const val0 = ((val.value - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [trackSizeStyle.value]: `${val0}%`,\n          backgroundColor: getColor(props.color),\n          visibility: props.showTrack ? 'visible' : 'hidden',\n        } as CSSProperties\n      }\n    })\n\n    const dottedStyles = computed(() => {\n      if (Array.isArray(val.value)) {\n        const val0 = ((val.value[0] - props.min) / (props.max - props.min)) * 100\n        const val1 = ((val.value[1] - props.min) / (props.max - props.min)) * 100\n\n        return [\n          {\n            [pinPositionStyle.value]: `${val0}%`,\n            backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n          {\n            [pinPositionStyle.value]: `${val1}%`,\n            backgroundColor: isActiveDot(1) ? getColor(props.color) : '#ffffff',\n            borderColor: getColor(props.color),\n          },\n        ] as CSSProperties[]\n      } else {\n        const val0 = ((val.value - props.min) / (props.max - props.min)) * 100\n\n        return {\n          [pinPositionStyle.value]: `${val0}%`,\n          backgroundColor: isActiveDot(0) ? getColor(props.color) : '#ffffff',\n          borderColor: getColor(props.color),\n        } as CSSProperties\n      }\n    })\n\n    const getDottedStyles = (index: number) => props.range\n      ? (dottedStyles.value as CSSProperties[])[index]\n      : dottedStyles.value\n\n    const val = computed({\n      get: () => valueComputed.value,\n      set: (val) => {\n        if (!flag.value) {\n          emit('change', val)\n        }\n\n        valueComputed.value = val\n      },\n    })\n\n    const getValueByOrder = (order?: number) => props.range && order !== undefined\n      ? (val.value as number[])[order]\n      : val.value as number\n\n    const gap = computed(() => {\n      const total = (props.max - props.min) / props.step\n\n      return size.value / total\n    })\n\n    const multiple = computed(() => {\n      const decimals = `${props.step}`.split('.')[1]\n\n      return decimals ? Math.pow(10, decimals.length) : 1\n    })\n\n    const pinsCol = computed(() => ((props.max - props.min) / props.step) - 1)\n\n    const position = computed(() => {\n      return Array.isArray(val.value)\n        ? [(val.value[0] - props.min) / props.step * gap.value, (val.value[1] - props.min) / props.step * gap.value]\n        : ((val.value - props.min) / props.step * gap.value)\n    })\n\n    const limit = computed(() => [0, size.value])\n\n    const valueLimit = computed(() => [props.min, props.max])\n\n    const isActiveDot = (index: number) => {\n      if ((!isFocused.value && !flag.value) || props.disabled || props.readonly) {\n        return false\n      }\n\n      return props.range ? currentSliderDotIndex.value === index : currentSliderDotIndex.value === 0\n    }\n\n    const moveStart = (e: MouseEvent | TouchEvent, index = currentSliderDotIndex.value) => {\n      e.preventDefault() // prevent page scrolling\n\n      if (!index) {\n        if (!props.range) {\n          index = 0\n        } else if (Array.isArray(position.value)) {\n          const touch = 'touches' in e ? e.touches[0] : e\n          const pos = getPos(touch)\n\n          index = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n        }\n      }\n\n      if (Array.isArray(val.value)) {\n        currentSliderDotIndex.value = index\n      }\n\n      Array.isArray(val.value)\n        ? dots.value[index]?.focus()\n        : dot.value?.focus()\n\n      flag.value = true\n\n      emit('drag-start')\n    }\n\n    const moving = (e: TouchEvent | MouseEvent) => {\n      if (!hasMouseDown.value || !flag.value || props.disabled || props.readonly) { return }\n\n      e.preventDefault()\n\n      if ('touches' in e) {\n        setValueOnPos(getPos(e.touches[0]))\n      } else {\n        setValueOnPos(getPos(e))\n      }\n    }\n\n    const moveEnd = () => {\n      if (!props.disabled && !props.readonly) {\n        if (flag.value) {\n          emit('drag-end')\n          emit('change', val.value)\n        }\n\n        flag.value = false\n        hasMouseDown.value = false\n      }\n    }\n\n    const clamp = (min: number, v: number, max: number) => Math.max(Math.min(v, max), min)\n\n    const moveWithKeys = (event: KeyboardEvent) => {\n      // don't do anything if a dot isn't focused or if the slider's disabled or readonly\n      if (![dots.value[0], dots.value[1], dot.value].includes(document.activeElement as HTMLElement)) {\n        return\n      }\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      /*\n        where: where to move\n          0 - to left\n          1 - to right\n\n        which: which dot to move (only makes sense when isRange is true)\n          0 - left dot\n          1 - right dot\n        */\n      const moveDot = (where: number, which: number) => {\n        if (Array.isArray(val.value)) {\n          const value = val.value[which] + (where ? props.step : -props.step)\n          const limitedValue = clamp(props.min, value, props.max)\n          val.value = [\n            which === 0 ? limitedValue : val.value[0],\n            which === 1 ? limitedValue : val.value[1],\n          ]\n        } else {\n          const value = val.value + (where ? props.step : -props.step)\n          const limitedValue = clamp(props.min, value, props.max)\n          val.value = limitedValue\n        }\n      }\n\n      // prevent page scroll\n      if (['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault()\n      }\n\n      const isActive = (el?: HTMLElement) => el === document.activeElement\n\n      if (props.range && Array.isArray(val.value)) {\n        const isVerticalDot0More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowUp'\n        const isVerticalDot0Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[0]) && event.key === 'ArrowDown'\n        const isVerticalDot1More = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowUp'\n        const isVerticalDot1Less = (event: KeyboardEvent) => props.vertical && isActive(dots.value[1]) && event.key === 'ArrowDown'\n        const isHorizontalDot0Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowLeft'\n        const isHorizontalDot0More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[0]) && event.key === 'ArrowRight'\n        const isHorizontalDot1Less = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowLeft'\n        const isHorizontalDot1More = (event: KeyboardEvent) => !props.vertical && isActive(dots.value[1]) && event.key === 'ArrowRight'\n\n        switch (true) {\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && moreToLess.value && val.value[0] !== props.min:\n            dots.value[0]?.focus()\n            moveDot(0, 0)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && lessToMore.value && val.value[1] !== props.max:\n            dots.value[1]?.focus()\n            moveDot(1, 1)\n            break\n          case (isVerticalDot0Less(event) || isHorizontalDot0Less(event)) && val.value[0] !== props.min:\n            moveDot(0, 0)\n            break\n          case (isVerticalDot1More(event) || isHorizontalDot1More(event)) && val.value[1] !== props.max:\n            moveDot(1, 1)\n            break\n          case (isVerticalDot1Less(event) || isHorizontalDot1Less(event)) && val.value[1] !== props.min:\n            moveDot(0, 1)\n            break\n          case (isVerticalDot0More(event) || isHorizontalDot0More(event)) && val.value[0] !== props.max:\n            moveDot(1, 0)\n            break\n          default:\n            break\n        }\n      } else {\n        if (props.vertical) {\n          if (event.key === 'ArrowDown') {\n            moveDot(0, 0)\n          }\n          if (event.key === 'ArrowUp') {\n            moveDot(1, 0)\n          }\n        } else {\n          if (event.key === 'ArrowLeft') {\n            moveDot(0, 0)\n          }\n          if (event.key === 'ArrowRight') {\n            moveDot(1, 0)\n          }\n        }\n      }\n    }\n\n    const checkActivePin = (pin: number) => {\n      if (Array.isArray(val.value)) {\n        return pin * props.step > val.value[0] && pin * props.step < val.value[1]\n      } else {\n        return pin * props.step < val.value\n      }\n    }\n\n    const pinPositionStep = computed(() => props.step / (props.max - props.min) * 100)\n    const getPinStyles = (pin: number) => ({\n      backgroundColor: checkActivePin(pin) ? getColor(props.color) : getHoverColor(getColor(props.color)),\n      [pinPositionStyle.value]: `${pin * pinPositionStep.value}%`,\n      transition: hasMouseDown.value ? 'none' : 'var(--va-slider-pin-transition)',\n    })\n\n    const getPos = (e: MouseEvent | Touch) => {\n      getStaticData()\n\n      return props.vertical ? offset.value - e.clientY : e.clientX - offset.value\n    }\n\n    const getStaticData = () => {\n      if (sliderContainer.value) {\n        size.value = sliderContainer.value[props.vertical ? 'offsetHeight' : 'offsetWidth']\n\n        offset.value = sliderContainer.value.getBoundingClientRect()[pinPositionStyle.value]\n      }\n    }\n\n    const getValueByIndex = (index: number) => {\n      return ((props.step * multiple.value) * index + (props.min * multiple.value)) / multiple.value\n    }\n\n    const getTrackLabel = (val: number, order?: number) => {\n      if (!props.trackLabel) { return val }\n\n      return typeof props.trackLabel === 'function'\n        ? props.trackLabel(val, order)\n        : props.trackLabel\n    }\n\n    const setCurrentValue = (newValue: number) => {\n      const slider = currentSliderDotIndex.value\n\n      if (Array.isArray(val.value)) {\n        if (isDiff(val.value[slider], newValue)) {\n          if (slider === 0) {\n            val.value = [newValue, val.value[1]]\n          } else {\n            val.value = [val.value[0], newValue]\n          }\n        }\n      } else {\n        if (newValue < props.min) {\n          val.value = props.min\n        } else if (newValue > props.max) {\n          val.value = props.max\n        } else if (isDiff(val.value, newValue)) {\n          val.value = newValue\n        }\n      }\n    }\n\n    const setValueOnPos = (pixelPosition: number) => {\n      const range = limit.value\n      const valueRange = valueLimit.value\n\n      // set focus on current thumb\n      const dotToFocus = Array.isArray(val.value)\n        ? dots.value[currentSliderDotIndex.value]\n        : dot.value\n\n      dotToFocus?.focus()\n\n      if (pixelPosition >= range[0] && pixelPosition <= range[1]) {\n        const v = getValueByIndex(Math.round(pixelPosition / gap.value))\n        if (currentSliderDotIndex.value) {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition <= position.value[0]) {\n            val.value = [v, val.value[0]]\n            currentSliderDotIndex.value = 0\n          } else {\n            setCurrentValue(v)\n          }\n        } else {\n          if (Array.isArray(position.value) && Array.isArray(val.value) && pixelPosition >= position.value[1]) {\n            val.value = [val.value[1], v]\n            currentSliderDotIndex.value = 1\n          } else {\n            setCurrentValue(v)\n          }\n        }\n      } else if (pixelPosition < range[0]) {\n        setCurrentValue(valueRange[0])\n      } else {\n        setCurrentValue(valueRange[1])\n      }\n    }\n\n    const isDiff = (a: unknown, b: unknown) => JSON.stringify(a) !== JSON.stringify(b)\n\n    const clickOnContainer = (e: MouseEvent | TouchEvent) => {\n      if (props.disabled || props.readonly) {\n        return\n      }\n\n      const pos = ('touches' in e) ? getPos(e.touches[0]) : getPos(e)\n\n      if (Array.isArray(position.value)) {\n        currentSliderDotIndex.value = pos > ((position.value[1] - position.value[0]) / 2 + position.value[0]) ? 1 : 0\n      }\n\n      hasMouseDown.value = true\n      setValueOnPos(pos)\n      moveStart(e, currentSliderDotIndex.value)\n    }\n\n    const bindEvents = () => {\n      document.addEventListener('mousemove', moving)\n      document.addEventListener('touchmove', moving, { passive: false })\n      document.addEventListener('mouseup', moveEnd)\n      document.addEventListener('mouseleave', moveEnd)\n      document.addEventListener('touchcancel', moveEnd)\n      document.addEventListener('touchend', moveEnd)\n      document.addEventListener('keydown', moveWithKeys)\n    }\n\n    const unbindEvents = () => {\n      document.removeEventListener('mousemove', moving)\n      document.removeEventListener('touchmove', moving)\n      document.removeEventListener('mouseup', moveEnd)\n      document.removeEventListener('mouseleave', moveEnd)\n      document.removeEventListener('touchcancel', moveEnd)\n      document.removeEventListener('touchend', moveEnd)\n      document.removeEventListener('keydown', moveWithKeys)\n    }\n\n    const ariaLabelIdComputed = computed(() => `aria-label-id-${generateUniqueId()}`)\n\n    const { tp } = useTranslation()\n\n    const ariaAttributesComputed = computed(() => ({\n      role: 'slider',\n      'aria-valuemin': props.min,\n      'aria-valuemax': props.max,\n      'aria-label': !slots.label && !props.label ? tp(props.ariaLabel, { value: String(val.value) }) : undefined,\n      'aria-labelledby': slots.label || props.label ? ariaLabelIdComputed.value : undefined,\n      'aria-orientation': props.vertical ? 'vertical' as const : 'horizontal' as const,\n      'aria-disabled': props.disabled,\n      'aria-readonly': props.readonly,\n      'aria-valuenow': !Array.isArray(val.value) ? val.value : undefined,\n      'aria-valuetext': Array.isArray(val.value) ? String(val.value) : undefined,\n    }))\n\n    onMounted(() => {\n      if (validateSlider(val.value, props.step, props.min, props.max, props.range)) {\n        getStaticData()\n        bindEvents()\n      }\n    })\n\n    onBeforeUnmount(unbindEvents)\n\n    watch([\n      val,\n      () => props.step,\n      () => props.min,\n      () => props.max,\n      () => props.range,\n    ], ([value, step, min, max, range]) => {\n      validateSlider(value, step, min, max, range)\n    })\n\n    watch(hasMouseDown, (hasMouseDown) => {\n      document.documentElement.style.cursor = hasMouseDown ? 'grabbing' : ''\n    })\n\n    return {\n      getColor,\n      dot,\n      dots,\n      setItemRefByIndex,\n      orders,\n      sliderContainer,\n      val,\n      getValueByOrder,\n      sliderClass,\n      dotClass,\n      labelStyles,\n      processedStyles,\n      getPinStyles,\n      dottedStyles,\n      getDottedStyles,\n      clickOnContainer,\n      hasMouseDown,\n      trackStyles,\n      pinsCol,\n      checkActivePin,\n      isFocused,\n      isActiveDot,\n      getTrackLabel,\n      currentSliderDotIndex,\n      ariaLabelIdComputed,\n      ariaAttributesComputed,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-slider {\n  display: flex;\n  align-items: center;\n  font-family: var(--va-font-family);\n\n  &__input-wrapper {\n    position: relative;\n    display: flex;\n  }\n\n  &__container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    cursor: grab;\n  }\n\n  &__track {\n    position: absolute;\n    border-radius: var(--va-slider-track-border-radius);\n    transition: var(--va-slider-track-transition);\n    opacity: var(--va-slider-track-opacity);\n\n    &--active {\n      transition: 0s;\n    }\n  }\n\n  &__track--selected {\n    opacity: 1;\n  }\n\n  &__handler {\n    position: absolute;\n    width: var(--va-slider-handler-width);\n    height: var(--va-slider-handler-height);\n    background: var(--va-slider-handler-background);\n    border: var(--va-slider-handler-border);\n    border-radius: var(--va-slider-handler-border-radius);\n    outline: var(--va-slider-handler-outline);\n    left: var(--va-slider-handler-left);\n    transition: var(--va-slider-handler-transition);\n    box-sizing: border-box;\n\n    &__dot--focus {\n      transform: var(--va-slider-dot-transform);\n      display: block;\n      width: var(--va-slider-dot-width);\n      height: var(--va-slider-dot-height);\n      position: absolute;\n      border-radius: var(--va-slider-dot-border-radius);\n      opacity: var(--va-slider-dot-opacity);\n      pointer-events: var(--va-slider-dot-pointer-events);\n    }\n\n    &__dot--value {\n      transform: var(--va-slider-dot-value-transform);\n      user-select: var(--va-slider-dot-value-user-select);\n      font-size: var(--va-slider-dot-value-font-size);\n      letter-spacing: var(--va-slider-dot-value-letter-spacing);\n      line-height: var(--va-slider-dot-value-line-height);\n      font-weight: var(--va-slider-dot-value-font-weight);\n      text-transform: var(--va-slider-dot-value-text-transform);\n      white-space: var(--va-slider-dot-value-white-space);\n    }\n  }\n\n  .va-input__label {\n    user-select: var(--va-slider-input-label-user-select);\n    font-size: var(--va-slider-input-label-font-size);\n    letter-spacing: var(--va-slider-input-label-letter-spacing);\n    line-height: var(--va-slider-input-label-line-height);\n    font-weight: var(--va-slider-input-label-font-weight);\n    text-transform: var(--va-slider-input-label-text-transform);\n  }\n\n  .va-input__label--inverse {\n    user-select: var(--va-slider-input-label-inverse-user-select);\n    font-size: var(--va-slider-input-label-inverse-font-size);\n    letter-spacing: var(--va-slider-input-label-inverse-letter-spacing);\n    line-height: var(--va-slider-input-label-inverse-line-height);\n    font-weight: var(--va-slider-input-label-inverse-font-weight);\n    text-transform: var(--va-slider-input-label-inverse-text-transform);\n  }\n\n  &--grabbing {\n    .va-slider__container {\n      cursor: grabbing;\n    }\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n\n  &--readonly {\n    .va-slider__container {\n      cursor: default;\n    }\n  }\n}\n\n.va-slider--horizontal {\n  .va-slider__input-wrapper {\n    flex-basis: fit-content;\n    flex-grow: 0;\n    margin-right: var(--va-slider-horizontal-input-wrapper-margin-right);\n\n    &:last-of-type {\n      margin-left: 1rem;\n    }\n  }\n\n  .va-slider {\n    &__container {\n      width: 100%;\n      height: 1.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-horizontal-track-height);\n      width: var(--va-slider-horizontal-track-width);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.125rem;\n      height: 0.75rem;\n    }\n\n    &__handler {\n      transform: var(--va-slider-horizontal-handler-transform);\n\n      &--inactive {\n        transition: left 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: absolute;\n        top: var(--va-slider-horizontal-dot-value-top);\n        left: var(--va-slider-horizontal-dot-value-left);\n      }\n    }\n  }\n\n  .va-input__label {\n    margin-right: 1rem;\n  }\n\n  .va-input__label--inverse {\n    margin-left: 1rem;\n  }\n}\n\n.va-slider--vertical {\n  height: var(--va-slider-vertical-height);\n  padding: var(--va-slider-vertical-padding);\n  flex-direction: var(--va-slider-vertical-flex-direction);\n  align-items: var(--va-slider-vertical-align-items);\n\n  .va-input__label {\n    margin-bottom: var(--va-slider-vertical-label-margin-bottom);\n  }\n\n  .va-input__label--inverse {\n    left: var(--va-slider-vertical-label-inverse-left);\n    margin-top: var(--va-slider-vertical-label-inverse-margin-top);\n  }\n\n  .va-slider {\n    &__input-wrapper {\n      flex-basis: fit-content;\n      flex-grow: 0;\n      max-width: var(--va-slider-vertical-input-wrapper-max-width);\n      min-width: var(--va-slider-vertical-input-wrapper-min-width);\n      position: relative;\n      display: flex;\n\n      &:last-of-type {\n        margin-top: 1rem;\n      }\n    }\n\n    &__container {\n      height: 100%;\n      width: 0.5rem;\n    }\n\n    &__track {\n      height: var(--va-slider-vertical-track-height);\n      width: var(--va-slider-vertical-track-width);\n      bottom: var(--va-slider-vertical-track-bottom);\n    }\n\n    &__mark {\n      position: absolute;\n      width: 0.75rem;\n      height: 0.125rem;\n      left: -2px;\n    }\n\n    &__handler {\n      transform: var(--va-slider-vertical-handler-transform);\n\n      &--inactive {\n        transition: bottom 0.5s ease-out;\n      }\n\n      &__dot--value {\n        position: relative;\n        top: var(--va-slider-vertical-dot-value-top);\n        left: var(--va-slider-vertical-dot-value-left);\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}