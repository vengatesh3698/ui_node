{"ast":null,"code":"import { defineComponent, computed, toRef } from \"vue\";\nimport { p as pick } from \"../../../vendor-fff696df.mjs\";\nimport { V as VaIcon } from \"../va-icon/index-0ebbc0f2.mjs\";\nimport { a as useColorProps, u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { a as getBoxShadowColor, b as getFocusColor, c as getHoverColor } from \"../../services/color/utils-21d3493b.mjs\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useRouterLinkProps, a as useRouterLink } from \"../../composables/useRouterLink-3a2ad439.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-f36510ca.mjs\";\nimport { u as useKeyboardOnlyFocus } from \"../../composables/useKeyboardOnlyFocus-2734fefc.mjs\";\nimport { u as useHover } from \"../../composables/useHover-5978b32d.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nimport { u as useBem } from \"../../composables/useBem-10a5bc6e.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaChip\",\n  components: {\n    VaIcon\n  },\n  emits: [...useStatefulEmits, \"focus\"],\n  props: {\n    ...useRouterLinkProps,\n    ...useColorProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Boolean,\n      default: true\n    },\n    closeable: {\n      type: Boolean,\n      default: false\n    },\n    outline: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    shadow: {\n      type: Boolean,\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: false\n    },\n    icon: {\n      type: String,\n      default: \"\"\n    },\n    tag: {\n      type: String,\n      default: \"span\"\n    },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: value => [\"small\", \"medium\", \"large\"].includes(value)\n    },\n    ariaCloseLabel: {\n      type: String,\n      default: \"$t:close\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const borderColor = computed(() => props.outline ? colorComputed.value : \"\");\n    const isTransparentBackground = computed(() => Boolean(props.outline || props.flat));\n    const {\n      textColorComputed\n    } = useTextColor(toRef(props, \"color\"), isTransparentBackground);\n    const size = {\n      small: \"0.875rem\",\n      medium: \"1rem\",\n      large: \"1.25rem\"\n    };\n    const {\n      hasKeyboardFocus,\n      keyboardFocusListeners\n    } = useKeyboardOnlyFocus();\n    const shadowStyle = computed(() => {\n      if (!props.shadow || props.flat || props.outline || props.disabled || hasKeyboardFocus.value) {\n        return;\n      }\n      return `0 0.125rem 0.19rem 0 ${getBoxShadowColor(colorComputed.value)}`;\n    });\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const {\n      tagComputed,\n      hrefComputed\n    } = useRouterLink(props);\n    const {\n      isHovered,\n      onMouseEnter,\n      onMouseLeave\n    } = useHover();\n    return {\n      ...useTranslation(),\n      keyboardFocusListeners,\n      valueComputed,\n      hrefComputed,\n      tagComputed,\n      onMouseEnter,\n      onMouseLeave,\n      isHovered,\n      close: () => {\n        if (!props.disabled) {\n          valueComputed.value = false;\n        }\n      },\n      iconSize: computed(() => size[props.size]),\n      tabIndexComputed: computed(() => props.disabled ? -1 : 0),\n      computedClass: useBem(\"va-chip\", () => ({\n        ...pick(props, [\"disabled\", \"readonly\", \"square\"]),\n        small: props.size === \"small\",\n        large: props.size === \"large\"\n      })),\n      computedStyle: computed(() => {\n        const result = {\n          color: textColorComputed.value,\n          borderColor: borderColor.value,\n          background: \"\",\n          boxShadow: shadowStyle.value\n        };\n        if (props.outline || props.flat) {\n          if (hasKeyboardFocus.value) {\n            result.background = getFocusColor(colorComputed.value);\n          } else if (!props.readonly && isHovered.value) {\n            result.background = getHoverColor(colorComputed.value);\n          }\n        } else {\n          result.background = colorComputed.value;\n        }\n        return result;\n      })\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaChip.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaIcon","emits","useStatefulEmits","props","useRouterLinkProps","useColorProps","useStatefulProps","useComponentPresetProp","modelValue","type","Boolean","default","closeable","outline","disabled","readonly","square","shadow","flat","icon","String","tag","size","validator","value","includes","ariaCloseLabel","setup","emit","getColor","useColors","colorComputed","computed","color","borderColor","isTransparentBackground","textColorComputed","useTextColor","toRef","small","medium","large","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","shadowStyle","getBoxShadowColor","valueComputed","useStateful","tagComputed","hrefComputed","useRouterLink","isHovered","onMouseEnter","onMouseLeave","useHover","useTranslation","close","iconSize","tabIndexComputed","computedClass","useBem","pick","computedStyle","result","background","boxShadow","getFocusColor","getHoverColor"],"sources":["../../../../../src/components/va-chip/VaChip.vue"],"sourcesContent":["<template>\n  <component\n    v-if=\"valueComputed\"\n    class=\"va-chip\"\n    :is=\"tagComputed\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <span\n      class=\"va-chip__inner\"\n      @focus=\"$emit('focus')\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <va-icon\n        v-if=\"icon\"\n        class=\"va-chip__icon\"\n        :name=\"icon\"\n        :size=\"iconSize\"\n      />\n      <span class=\"va-chip__content\">\n        <slot></slot>\n      </span>\n      <va-icon\n        v-if=\"closeable\"\n        role=\"button\"\n        name=\"va-close\"\n        class=\"va-chip__close-icon\"\n        :aria-label=\"tp($props.ariaCloseLabel)\"\n        :tabindex=\"tabIndexComputed\"\n        :size=\"iconSize\"\n        @click.stop=\"close\"\n        @keydown.enter.stop=\"close\"\n        @keydown.space.stop=\"close\"\n      />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, toRef } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { getBoxShadowColor, getHoverColor, getFocusColor } from '../../services/color'\nimport {\n  useComponentPresetProp,\n  useKeyboardOnlyFocus,\n  useRouterLink, useRouterLinkProps,\n  useColors, useColorProps,\n  useStateful, useStatefulEmits, useStatefulProps,\n  useHover,\n  useTextColor,\n  useBem,\n  useTranslation,\n} from '../../composables'\n\nimport { VaIcon } from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaChip',\n\n  components: { VaIcon },\n\n  emits: [...useStatefulEmits, 'focus'],\n\n  props: {\n    ...useRouterLinkProps,\n    ...useColorProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: true },\n    closeable: { type: Boolean, default: false },\n    outline: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    square: { type: Boolean, default: false },\n    shadow: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    icon: { type: String, default: '' },\n    tag: { type: String, default: 'span' },\n    size: {\n      type: String as PropType<'small' | 'medium' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['small', 'medium', 'large'].includes(value),\n    },\n\n    ariaCloseLabel: { type: String, default: '$t:close' },\n  },\n\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const borderColor = computed(() => props.outline ? colorComputed.value : '')\n    const isTransparentBackground = computed(() => Boolean(props.outline || props.flat))\n    const { textColorComputed } = useTextColor(toRef(props, 'color'), isTransparentBackground)\n    const size = {\n      small: '0.875rem',\n      medium: '1rem',\n      large: '1.25rem',\n    } as Record<string, string>\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const shadowStyle = computed(() => {\n      if (!props.shadow || props.flat || props.outline || props.disabled || hasKeyboardFocus.value) {\n        return\n      }\n      return `0 0.125rem 0.19rem 0 ${getBoxShadowColor(colorComputed.value)}`\n    })\n\n    const { valueComputed } = useStateful(props, emit)\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n\n    return {\n      ...useTranslation(),\n      keyboardFocusListeners,\n      valueComputed,\n      hrefComputed,\n      tagComputed,\n      onMouseEnter,\n      onMouseLeave,\n      isHovered,\n\n      close: () => {\n        if (!props.disabled) {\n          valueComputed.value = false\n        }\n      },\n\n      iconSize: computed(() => size[props.size]),\n\n      tabIndexComputed: computed(() => props.disabled ? -1 : 0),\n\n      computedClass: useBem('va-chip', () => ({\n        ...pick(props, ['disabled', 'readonly', 'square']),\n        small: props.size === 'small',\n        large: props.size === 'large',\n      })),\n\n      computedStyle: computed(() => {\n        const result = {\n          color: textColorComputed.value,\n          borderColor: borderColor.value,\n          background: '',\n          boxShadow: shadowStyle.value,\n        }\n\n        if (props.outline || props.flat) {\n          if (hasKeyboardFocus.value) {\n            result.background = getFocusColor(colorComputed.value)\n          } else if (!props.readonly && isHovered.value) {\n            result.background = getHoverColor(colorComputed.value)\n          }\n        } else {\n          result.background = colorComputed.value\n        }\n\n        return result\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-chip {\n  display: var(--va-chip-display);\n  border: var(--va-chip-border, var(--va-control-border));\n  position: var(--va-chip-position);\n  border-radius: var(--va-chip-border-radius);\n  width: var(--va-chip-width);\n  height: var(--va-chip-height);\n  min-width: var(--va-chip-min-width);\n  min-height: var(--va-chip-min-height);\n  padding: var(--va-chip-padding);\n  color: var(--va-chip-color);\n  cursor: var(--va-chip-cursor);\n  font-size: var(--va-chip-font-size);\n  font-family: var(--va-font-family);\n  vertical-align: var(--va-chip-vertical-align);\n\n  &__inner {\n    display: var(--va-chip-inner-display);\n    align-items: var(--va-chip-inner-align-items);\n    width: var(--va-chip-inner-width);\n    vertical-align: inherit;\n  }\n\n  &:hover:not(&--readonly) {\n    opacity: var(--va-chip-hover-opacity);\n  }\n\n  &__content {\n    display: var(--va-chip-content-display);\n    justify-content: var(--va-chip-content-justify-content);\n    align-items: var(--va-chip-content-align-items);\n    padding: var(--va-chip-content-padding);\n    line-height: var(--va-chip-content-line-height);\n    width: var(--va-chip-content-width);\n  }\n\n  &__close-icon {\n    cursor: pointer;\n\n    @at-root {\n      .va-chip--disabled {\n        .va-chip__close-icon {\n          cursor: default !important;\n        }\n      }\n    }\n  }\n\n  &--square {\n    border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\n  }\n\n  &--small {\n    height: var(--va-chip-sm-height);\n    font-size: var(--va-chip-sm-font-size);\n  }\n\n  &--large {\n    height: var(--va-chip-lg-height);\n    font-size: var(--va-chip-lg-font-size);\n  }\n\n  &.va-chip--disabled {\n    @include va-disabled;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}