{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { a as useSidebarItem } from \"../hooks/useSidebar-00350440.mjs\";\nimport { u as useComponentPresetProp } from \"../../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useRouterLinkProps, a as useRouterLink } from \"../../../composables/useRouterLink-3a2ad439.mjs\";\nimport { u as useElementRef } from \"../../../composables/useElementRef-6a3a78f2.mjs\";\nimport { u as useHover } from \"../../../composables/useHover-5978b32d.mjs\";\nimport { u as useColors } from \"../../../composables/useColors-f23d24ff.mjs\";\nimport { u as useKeyboardOnlyFocus } from \"../../../composables/useKeyboardOnlyFocus-2734fefc.mjs\";\nimport { e as applyColors } from \"../../../services/color/utils-21d3493b.mjs\";\nimport { u as useTextColor } from \"../../../composables/useTextColor-f36510ca.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaSidebarItem\",\n  props: {\n    ...useRouterLinkProps,\n    ...useComponentPresetProp,\n    active: {\n      type: Boolean,\n      default: false\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    },\n    activeColor: {\n      type: String,\n      default: \"primary\"\n    },\n    hoverColor: {\n      type: String,\n      default: void 0\n    },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2\n    },\n    borderColor: {\n      type: String,\n      default: void 0\n    }\n  },\n  setup(props) {\n    const rootElement = useElementRef();\n    const sidebar = useSidebarItem();\n    const {\n      isHovered\n    } = useHover(rootElement);\n    const {\n      getColor,\n      getHoverColor,\n      getFocusColor\n    } = useColors();\n    const {\n      hasKeyboardFocus,\n      keyboardFocusListeners\n    } = useKeyboardOnlyFocus();\n    const backgroundColorComputed = computed(() => {\n      if (props.active && !isHovered.value && !hasKeyboardFocus.value) {\n        return getColor(props.activeColor);\n      }\n      if (hasKeyboardFocus.value) {\n        return getFocusColor(getColor(props.hoverColor || props.activeColor));\n      }\n      return \"#ffffff00\";\n    });\n    const textBackground = computed(() => applyColors(getColor(sidebar == null ? void 0 : sidebar.color), backgroundColorComputed.value));\n    const {\n      textColorComputed\n    } = useTextColor(textBackground);\n    const computedStyle = computed(() => {\n      const style = {\n        color: textColorComputed.value\n      };\n      if (isHovered.value || props.active || hasKeyboardFocus.value) {\n        style.backgroundColor = backgroundColorComputed.value;\n      }\n      if (props.active) {\n        const mergedProps = {\n          ...sidebar,\n          ...props\n        };\n        style.borderColor = getColor(mergedProps.borderColor || mergedProps.activeColor);\n      }\n      if (hasKeyboardFocus.value) {\n        style.backgroundColor = getFocusColor(getColor(props.hoverColor || props.activeColor));\n      }\n      if (isHovered.value) {\n        style.backgroundColor = getHoverColor(getColor(props.hoverColor || props.activeColor), props.hoverOpacity);\n      }\n      return style;\n    });\n    const {\n      tagComputed,\n      hrefComputed,\n      linkAttributesComputed\n    } = useRouterLink(props);\n    return {\n      rootElement,\n      computedStyle,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isHovered,\n      backgroundColorComputed,\n      bg: getColor(sidebar == null ? void 0 : sidebar.color),\n      textBackground,\n      linkAttributesComputed\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../VaSidebarItem.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useRouterLinkProps","useComponentPresetProp","active","type","Boolean","default","textColor","String","activeColor","hoverColor","hoverOpacity","Number","borderColor","setup","rootElement","useElementRef","sidebar","useSidebarItem","isHovered","useHover","getColor","getHoverColor","getFocusColor","useColors","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","backgroundColorComputed","computed","value","textBackground","applyColors","color","textColorComputed","useTextColor","computedStyle","style","backgroundColor","mergedProps","tagComputed","hrefComputed","linkAttributesComputed","useRouterLink","bg"],"sources":["../../../../../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue"],"sourcesContent":["<template>\n  <component\n    ref=\"rootElement\"\n    class=\"va-sidebar__item va-sidebar-item\"\n    tabindex=\"0\"\n    :class=\"{ 'va-sidebar-item--active': $props.active }\"\n    :style=\"computedStyle\"\n    :is=\"tagComputed\"\n    v-bind=\"linkAttributesComputed\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  applyColors,\n  useElementRef,\n  useColors,\n  useKeyboardOnlyFocus,\n  useHover,\n  useRouterLink, useRouterLinkProps,\n  useTextColor,\n} from '../../../composables'\nimport { useSidebarItem } from '../hooks/useSidebar'\nimport { useComponentPresetProp } from '../../../composables/useComponentPreset'\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n\n  props: {\n    ...useRouterLinkProps,\n    ...useComponentPresetProp,\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    hoverOpacity: { type: Number, default: 0.2 },\n    borderColor: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const rootElement = useElementRef()\n    const sidebar = useSidebarItem()\n\n    const { isHovered } = useHover(rootElement)\n    const { getColor, getHoverColor, getFocusColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const backgroundColorComputed = computed(() => {\n      if (props.active && !isHovered.value && !hasKeyboardFocus.value) {\n        return getColor(props.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        return getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      return '#ffffff00'\n    })\n\n    const textBackground = computed(() => applyColors(getColor(sidebar?.color), backgroundColorComputed.value))\n    const { textColorComputed } = useTextColor(textBackground)\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = { color: textColorComputed.value }\n\n      if (isHovered.value || props.active || hasKeyboardFocus.value) {\n        style.backgroundColor = backgroundColorComputed.value\n      }\n\n      if (props.active) {\n        const mergedProps = { ...sidebar, ...props }\n        style.borderColor = getColor(mergedProps.borderColor || mergedProps.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        style.backgroundColor = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (isHovered.value) {\n        style.backgroundColor = getHoverColor(\n          getColor(props.hoverColor || props.activeColor), props.hoverOpacity,\n        )\n      }\n\n      return style\n    })\n\n    const { tagComputed, hrefComputed, linkAttributesComputed } = useRouterLink(props)\n\n    return {\n      rootElement,\n      computedStyle,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isHovered,\n      backgroundColorComputed,\n      bg: getColor(sidebar?.color),\n      textBackground,\n      linkAttributesComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../variables\";\n@import \"../../../styles/resources\";\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  font-family: var(--va-font-family);\n  transition: var(--va-sidebar-item-transition);\n  box-sizing: border-box;\n  color: currentColor;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}