{"ast":null,"code":"import { defineComponent, ref, h, Fragment } from \"vue\";\nimport { r as renderSlotNodes } from \"../../utils/headless-cf5c266f.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaValue\",\n  props: {\n    defaultValue: {\n      type: null,\n      required: false,\n      default: false\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const value = ref(props.defaultValue);\n    const slotBind = new Proxy(value, {\n      get(target, prop) {\n        if (prop === \"value\") {\n          return target.value;\n        }\n        return target[prop];\n      },\n      set(target, prop, value2) {\n        if (prop === \"value\") {\n          target.value = value2;\n        }\n        return true;\n      }\n    });\n    return () => {\n      return h(Fragment, [renderSlotNodes(slots.default, slotBind)]);\n    };\n  }\n});\nexport { _sfc_main as _ };","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","defaultValue","type","required","default","setup","slots","value","ref","slotBind","Proxy","get","target","prop","set","value2","h","Fragment","renderSlotNodes"],"sources":["../../../../../src/components/va-value/VaValue.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  type Ref,\n  type PropType,\n} from 'vue'\n\nimport { renderSlotNodes } from '../../utils/headless'\n\nexport default defineComponent({\n  name: 'VaValue',\n\n  props: {\n    defaultValue: { type: null as unknown as PropType<any>, required: false, default: false },\n  },\n\n  setup (props, { slots }) {\n    const value = ref<any>(props.defaultValue)\n\n    // Vue will unwrap Refs passed as slot bind, so we make a fake not-Ref.\n    const slotBind: Ref<any> = new Proxy(value, {\n      get (target, prop) {\n        if (prop === 'value') {\n          return target.value\n        }\n\n        return target[prop]\n      },\n      set (target, prop, value) {\n        if (prop === 'value') {\n          target.value = value\n        }\n\n        return true\n      },\n    })\n\n    return () => {\n      return h(Fragment, [renderSlotNodes(slots.default, slotBind)])\n    }\n  },\n})\n</script>\n"],"mappings":";;AAYA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IACLC,YAAA,EAAc;MAAEC,IAAA,EAAM;MAAkCC,QAAA,EAAU;MAAOC,OAAA,EAAS;IAAM;EAC1F;EAEAC,MAAOL,KAAA,EAAO;IAAEM;EAAA,GAAS;IACjB,MAAAC,KAAA,GAAQC,GAAA,CAASR,KAAA,CAAMC,YAAY;IAGnC,MAAAQ,QAAA,GAAqB,IAAIC,KAAA,CAAMH,KAAA,EAAO;MAC1CI,IAAKC,MAAA,EAAQC,IAAA,EAAM;QACjB,IAAIA,IAAA,KAAS,SAAS;UACpB,OAAOD,MAAA,CAAOL,KAAA;QAChB;QAEA,OAAOK,MAAA,CAAOC,IAAI;MACpB;MACAC,IAAKF,MAAA,EAAQC,IAAA,EAAME,MAAA,EAAO;QACxB,IAAIF,IAAA,KAAS,SAAS;UACpBD,MAAA,CAAOL,KAAA,GAAQQ,MAAA;QACjB;QAEO;MACT;IAAA,CACD;IAED,OAAO,MAAM;MACJ,OAAAC,CAAA,CAAEC,QAAA,EAAU,CAACC,eAAA,CAAgBZ,KAAA,CAAMF,OAAA,EAASK,QAAQ,CAAC,CAAC;IAAA;EAEjE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}