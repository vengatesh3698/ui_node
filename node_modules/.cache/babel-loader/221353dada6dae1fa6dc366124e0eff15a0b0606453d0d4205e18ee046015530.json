{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { onMounted, onBeforeUnmount } from \"vue\";\nlet observer;\nlet callbacks = [];\nconst createMutationObserver = () => {\n  if (!observer) {\n    const runCallbacks = mutations => {\n      const cache = /* @__PURE__ */new Map();\n      for (let i = 0; i < callbacks.length; i++) {\n        if (mutations.some(m => m.target.contains(callbacks[i].el.value || null))) {\n          callbacks[i].cb(cache);\n        }\n      }\n    };\n    observer = new MutationObserver(mutations => {\n      runCallbacks(mutations);\n    });\n    observer.observe(document.documentElement, {\n      attributeFilter: [\"style\", \"class\"],\n      subtree: true,\n      attributes: true\n    });\n  }\n};\nconst destroyMutationObserver = () => {\n  if (!observer) {\n    return;\n  }\n  if (callbacks.length > 0) {\n    return;\n  }\n  observer.disconnect();\n  observer = null;\n};\nconst useDomChangesObserver = (cb, el) => {\n  onMounted(() => {\n    createMutationObserver();\n    callbacks.push({\n      cb,\n      el\n    });\n  });\n  onBeforeUnmount(() => {\n    callbacks = callbacks.filter(c => c.cb !== cb);\n    destroyMutationObserver();\n  });\n};\nexport { useDomChangesObserver as u };","map":{"version":3,"names":["observer","callbacks","createMutationObserver","runCallbacks","mutations","cache","Map","i","length","some","m","target","contains","el","value","cb","MutationObserver","observe","document","documentElement","attributeFilter","subtree","attributes","destroyMutationObserver","disconnect","useDomChangesObserver","onMounted","push","onBeforeUnmount","filter","c"],"sources":["../../../../../src/composables/useElementBackground/useDomChangesObserver.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, Ref } from 'vue'\n\ntype Handler<K = any, V = any> = { cb: ((cache: Map<K, V>) => void), el: Ref<HTMLElement | undefined> }\n\nlet observer: MutationObserver | null\nlet callbacks: Handler[] = []\n\nconst createMutationObserver = () => {\n  if (!observer) {\n    const runCallbacks = (mutations: MutationRecord[]) => {\n      const cache = new Map()\n\n      for (let i = 0; i < callbacks.length; i++) {\n        if (mutations.some((m) => m.target.contains(callbacks[i].el.value || null))) {\n          callbacks[i].cb(cache)\n        }\n      }\n    }\n\n    observer = new MutationObserver((mutations) => {\n      runCallbacks(mutations)\n    })\n    observer.observe(document.documentElement, {\n      attributeFilter: ['style', 'class'],\n      subtree: true,\n      attributes: true,\n    })\n  }\n}\n\nconst destroyMutationObserver = () => {\n  if (!observer) { return }\n\n  if (callbacks.length > 0) { return }\n  observer.disconnect()\n  observer = null\n}\n\n/** Creates on global watched for dom changes */\nexport const useDomChangesObserver = <K, V>(cb: Handler<K, V>['cb'], el: Ref<HTMLElement | undefined>) => {\n  onMounted(() => {\n    createMutationObserver()\n    callbacks.push({ cb, el })\n  })\n\n  onBeforeUnmount(() => {\n    callbacks = callbacks.filter((c) => c.cb !== cb)\n    destroyMutationObserver()\n  })\n}\n"],"mappings":";;AAIA,IAAIA,QAAA;AACJ,IAAIC,SAAA,GAAuB;AAE3B,MAAMC,sBAAA,GAAyBA,CAAA,KAAM;EACnC,IAAI,CAACF,QAAA,EAAU;IACP,MAAAG,YAAA,GAAgBC,SAAA,IAAgC;MAC9C,MAAAC,KAAA,sBAAYC,GAAA;MAElB,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIN,SAAA,CAAUO,MAAA,EAAQD,CAAA,IAAK;QACzC,IAAIH,SAAA,CAAUK,IAAA,CAAMC,CAAA,IAAMA,CAAA,CAAEC,MAAA,CAAOC,QAAA,CAASX,SAAA,CAAUM,CAAC,EAAEM,EAAA,CAAGC,KAAA,IAAS,IAAI,CAAC,GAAG;UACjEb,SAAA,CAAAM,CAAC,EAAEQ,EAAA,CAAGV,KAAK;QACvB;MACF;IAAA;IAGSL,QAAA,OAAIgB,gBAAA,CAAkBZ,SAAA,IAAc;MAC7CD,YAAA,CAAaC,SAAS;IAAA,CACvB;IACQJ,QAAA,CAAAiB,OAAA,CAAQC,QAAA,CAASC,eAAA,EAAiB;MACzCC,eAAA,EAAiB,CAAC,SAAS,OAAO;MAClCC,OAAA,EAAS;MACTC,UAAA,EAAY;IAAA,CACb;EACH;AACF;AAEA,MAAMC,uBAAA,GAA0BA,CAAA,KAAM;EACpC,IAAI,CAACvB,QAAA,EAAU;IAAE;EAAO;EAEpB,IAAAC,SAAA,CAAUO,MAAA,GAAS,GAAG;IAAE;EAAO;EACnCR,QAAA,CAASwB,UAAA,CAAW;EACTxB,QAAA;AACb;AAGa,MAAAyB,qBAAA,GAAwBA,CAAOV,EAAA,EAAyBF,EAAA,KAAqC;EACxGa,SAAA,CAAU,MAAM;IACSxB,sBAAA;IACvBD,SAAA,CAAU0B,IAAA,CAAK;MAAEZ,EAAA;MAAIF;IAAI;EAAA,CAC1B;EAEDe,eAAA,CAAgB,MAAM;IACpB3B,SAAA,GAAYA,SAAA,CAAU4B,MAAA,CAAQC,CAAA,IAAMA,CAAA,CAAEf,EAAA,KAAOA,EAAE;IACvBQ,uBAAA;EAAA,CACzB;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}