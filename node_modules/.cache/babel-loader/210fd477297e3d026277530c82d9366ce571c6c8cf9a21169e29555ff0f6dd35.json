{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nconst prefixClass = \"va-divider\";\nconst _sfc_main = defineComponent({\n  name: \"VaDivider\",\n  props: {\n    ...useComponentPresetProp,\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    dashed: {\n      type: Boolean,\n      default: false\n    },\n    inset: {\n      type: Boolean,\n      default: false\n    },\n    orientation: {\n      type: String,\n      default: \"center\",\n      validator: value => [\"left\", \"right\", \"center\"].includes(value)\n    },\n    color: {\n      type: String,\n      default: \"backgroundBorder\"\n    }\n  },\n  setup(props, {\n    slots\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    return {\n      colorComputed,\n      hasSlot: computed(() => !!slots.default),\n      classComputed: computed(() => ({\n        [`${prefixClass}--vertical`]: props.vertical,\n        [`${prefixClass}--inset`]: props.inset,\n        [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n        [`${prefixClass}--dashed`]: props.dashed\n      }))\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaDivider.css';","map":{"version":3,"names":["prefixClass","_sfc_main","defineComponent","name","props","useComponentPresetProp","vertical","type","Boolean","default","dashed","inset","orientation","String","validator","value","includes","color","setup","slots","getColor","useColors","colorComputed","computed","hasSlot","classComputed"],"sources":["../../../../../src/components/va-divider/VaDivider.vue"],"sourcesContent":["<template>\n  <div\n    role=\"separator\"\n    class=\"va-divider\"\n    :class=\"classComputed\"\n    :aria-orientation=\"vertical ? 'vertical' : 'horizontal'\"\n    :aria-hidden=\"true\"\n   :style=\"`--va-0-color-computed: ${String(colorComputed)}`\">\n    <div\n      v-if=\"hasSlot && !vertical\"\n      class=\"va-divider__text\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\nimport { useColors } from '../../composables/useColors'\n\nconst prefixClass = 'va-divider'\n\nexport default defineComponent({\n  name: 'VaDivider',\n  props: {\n    ...useComponentPresetProp,\n    vertical: { type: Boolean, default: false },\n    dashed: { type: Boolean, default: false },\n    inset: { type: Boolean, default: false },\n    orientation: {\n      type: String as PropType<'left' | 'right' | 'center'>,\n      default: 'center',\n      validator: (value: string) => ['left', 'right', 'center'].includes(value),\n    },\n    color: { type: String, default: 'backgroundBorder' },\n  },\n  setup (props, { slots }) {\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n\n    return {\n      colorComputed,\n      hasSlot: computed(() => !!slots.default),\n      classComputed: computed(() => ({\n        [`${prefixClass}--vertical`]: props.vertical,\n        [`${prefixClass}--inset`]: props.inset,\n        [`${prefixClass}--${props.orientation}`]: props.orientation && !props.vertical,\n        [`${prefixClass}--dashed`]: props.dashed,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-divider {\n  display: var(--va-divider-display);\n  margin: var(--va-divider-margin) 0;\n  font-family: var(--va-font-family);\n\n  &--vertical {\n    margin: 0 var(--va-divider-margin);\n    border-top: 0;\n    border-right-width: var(--va-divider-line-width);\n    border-right-style: var(--va-divider-border-style);\n    border-right-color: var(--va-0-color-computed);\n    display: var(--va-divider-vertical-display);\n    vertical-align: top;\n\n    &.va-divider--dashed {\n      border-right-style: dashed;\n    }\n  }\n\n  &--inset {\n    margin: var(--va-divider-inset-margin);\n\n    &.va-divider--vertical {\n      margin: var(--va-divider-inset-horizontal-margin) var(--va-divider-margin);\n    }\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    flex: 1;\n    border-top-width: var(--va-divider-line-width);\n    border-top-style: var(--va-divider-border-style);\n    border-top-color: var(--va-0-color-computed);\n  }\n\n  &--dashed {\n    &::before,\n    &::after {\n      border-top-style: var(--va-divider-dashed-border-top-style);\n    }\n  }\n\n  &--left {\n    &::before {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &--right {\n    &::after {\n      flex: 0 var(--va-divider-text-horizontal-offset);\n    }\n  }\n\n  &__text {\n    font-size: var(--va-divider-text-font-size);\n    line-height: var(--va-divider-text-line-height);\n    height: var(--va-divider-text-height);\n    vertical-align: var(--va-divider-text-vertical-align);\n    transform: var(--va-divider-text-transform);\n  }\n}\n</style>\n"],"mappings":";;;AAsBA,MAAMA,WAAA,GAAc;AAEpB,MAAAC,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO;IACL,GAAGC,sBAAA;IACHC,QAAA,EAAU;MAAEC,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC1CC,MAAA,EAAQ;MAAEH,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACxCE,KAAA,EAAO;MAAEJ,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACvCG,WAAA,EAAa;MACXL,IAAA,EAAMM,MAAA;MACNJ,OAAA,EAAS;MACTK,SAAA,EAAYC,KAAA,IAAkB,CAAC,QAAQ,SAAS,QAAQ,EAAEC,QAAA,CAASD,KAAK;IAC1E;IACAE,KAAA,EAAO;MAAEV,IAAA,EAAMM,MAAA;MAAQJ,OAAA,EAAS;IAAmB;EACrD;EACAS,MAAOd,KAAA,EAAO;IAAEe;EAAA,GAAS;IACjB;MAAEC;IAAA,IAAaC,SAAA;IAErB,MAAMC,aAAA,GAAgBC,QAAA,CAAS,MAAMH,QAAA,CAAShB,KAAA,CAAMa,KAAK,CAAC;IAEnD;MACLK,aAAA;MACAE,OAAA,EAASD,QAAA,CAAS,MAAM,CAAC,CAACJ,KAAA,CAAMV,OAAO;MACvCgB,aAAA,EAAeF,QAAA,CAAS,OAAO;QAC7B,CAAC,GAAGvB,WAAA,YAAuB,GAAGI,KAAA,CAAME,QAAA;QACpC,CAAC,GAAGN,WAAA,SAAoB,GAAGI,KAAA,CAAMO,KAAA;QACjC,CAAC,GAAGX,WAAA,KAAgBI,KAAA,CAAMQ,WAAA,EAAa,GAAGR,KAAA,CAAMQ,WAAA,IAAe,CAACR,KAAA,CAAME,QAAA;QACtE,CAAC,GAAGN,WAAA,UAAqB,GAAGI,KAAA,CAAMM;MAAA,EAClC;IAAA;EAEN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}