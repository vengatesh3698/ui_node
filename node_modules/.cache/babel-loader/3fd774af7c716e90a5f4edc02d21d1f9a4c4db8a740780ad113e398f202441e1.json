{"ast":null,"code":"import { _ as _sfc_main } from \"./VaForm.vue_vue_type_script_lang-19d28836.mjs\";\nimport { openBlock, createBlock, resolveDynamicComponent, mergeProps, withCtx, renderSlot, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaForm_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), mergeProps({\n    class: \"va-form\"\n  }, _ctx.$attrs), {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps({\n      isValid: _ctx.isValid,\n      validate: _ctx.validate\n    })))]),\n    _: 3\n  }, 16);\n}\nconst _VaForm = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaForm as _ };","map":{"version":3,"names":["_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createBlock","resolveDynamicComponent","tag","mergeProps","class","$attrs","default","withCtx","renderSlot","$slots","normalizeProps","guardReactiveProps","isValid","validate"],"sources":["../../../../../src/components/va-form/VaForm.vue"],"sourcesContent":["<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n    v-bind=\"$attrs\"\n  >\n    <slot v-bind=\"{ isValid, validate }\" />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, computed } from 'vue'\n\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\nimport { useFormParent } from '../../composables/useForm'\nimport { useLocalConfigProvider } from '../../composables/useLocalConfig'\n\nconst props = { stateful: true }\n\nconst statefulConfig = {\n  VaInput: props,\n  VaSelect: props,\n  VaCheckbox: props,\n  VaRadio: props,\n  VaDatePicker: props,\n  VaTimePicker: props,\n  VaColorPicker: props,\n  VaSlider: props,\n  VaSwitch: props,\n  VaFileUpload: props,\n  VaRating: props,\n  VaDateInput: props,\n  VaTimeInput: props,\n}\n\nexport default defineComponent({\n  name: 'VaForm',\n\n  props: {\n    ...useComponentPresetProp,\n    autofocus: { type: Boolean, default: false },\n    immediate: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n    trigger: { type: String as PropType<'blur' | 'change'>, default: 'blur' },\n    modelValue: { type: Boolean, default: true },\n    hideErrors: { type: Boolean, default: false },\n    hideErrorMessages: { type: Boolean, default: false },\n    hideLoading: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup (props, { emit }) {\n    const context = useFormParent(props)\n\n    watch(context.isValid, (value) => {\n      emit('update:modelValue', value)\n    })\n\n    watch(() => props.autofocus, (value) => {\n      if (value) {\n        context.focus()\n      }\n    }, { immediate: true })\n\n    watch(context.fields, (newVal) => {\n      if (newVal.length && props.immediate) {\n        context.validate()\n      }\n    }, { immediate: true })\n\n    useLocalConfigProvider(computed(() => {\n      if (!props.stateful) { return {} }\n\n      return statefulConfig\n    }))\n\n    return {\n      ...context,\n      context: context,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n"],"mappings":";;;;AAM2C,SAAAA,YAAAC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;SAAvCC,SAAA,CAAuC,GAAAC,WAAA,CAAAC,uBAAA,CAAAR,IAAA,CAAAS,GAAA,GAAAC,UAAA;IAAAC,KAAA,EAAvB;EAAS,GAAAX,IAAA,CAAAY,MAAA;IAAAC,OAAA,EAAAC,OAAA,QAAAC,UAAA,CAAAf,IAAA,CAAAgB,MAAA,aAAAC,cAAA,CAAAC,kBAAA;MAAAC,OAAA,EAAAnB,IAAA,CAAAmB,OAAA;MAAAC,QAAA,EAAApB,IAAA,CAAAoB;IAAA,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}