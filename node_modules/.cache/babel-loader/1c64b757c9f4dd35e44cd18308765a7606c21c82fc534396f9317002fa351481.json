{"ast":null,"code":"import { defineComponent, shallowRef, toRefs, computed, toRef } from \"vue\";\nimport { p as pick, o as omit } from \"../../../vendor-fff696df.mjs\";\nimport { s as safeCSSLength } from \"../../utils/css-cc8466bb.mjs\";\nimport { u as useCounterPropsValidation } from \"./hooks/useCounterPropsValidation-f5f640e0.mjs\";\nimport { V as VaButton } from \"../va-button/index-b0a9ef70.mjs\";\nimport { V as VaInputWrapper } from \"../va-input/components/VaInputWrapper/VaInputWrapper-89658c86.mjs\";\nimport { a as useFocusEmits, u as useFocus } from \"../../composables/useFocus-4393f76a.mjs\";\nimport { u as useLongPress } from \"../../composables/useLongPress-31ac08f9.mjs\";\nimport { u as useFormFieldProps } from \"../../composables/useFormField-0ac52e7e.mjs\";\nimport { a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useTemplateRef } from \"../../composables/useTemplateRef-58eb28b3.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nimport { u as useEmitProxy } from \"../../composables/useEmitProxy-a435894a.mjs\";\nconst {\n  createEmits: createInputEmits,\n  createListeners: createInputListeners\n} = useEmitProxy([\"change\"]);\nconst {\n  createEmits: createFieldEmits,\n  createListeners: createFieldListeners\n} = useEmitProxy([{\n  listen: \"click-prepend\",\n  emit: \"click:decrease-button\"\n}, {\n  listen: \"click-append\",\n  emit: \"click:increase-button\"\n}, {\n  listen: \"click-prepend-inner\",\n  emit: \"click:decrease-icon\"\n}, {\n  listen: \"click-append-inner\",\n  emit: \"click:increase-icon\"\n}]);\nconst _sfc_main = defineComponent({\n  name: \"VaCounter\",\n  components: {\n    VaInputWrapper,\n    VaButton\n  },\n  props: {\n    ...useFormFieldProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    // input\n    modelValue: {\n      type: [String, Number],\n      default: 0\n    },\n    manualInput: {\n      type: Boolean,\n      default: false\n    },\n    stateful: {\n      type: Boolean,\n      default: false\n    },\n    min: {\n      type: Number,\n      default: void 0\n    },\n    max: {\n      type: Number,\n      default: void 0\n    },\n    step: {\n      type: Number,\n      default: 1\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    // hint\n    messages: {\n      type: [Array, String],\n      default: () => []\n    },\n    // style\n    width: {\n      type: [String, Number],\n      default: \"160px\"\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    outline: {\n      type: Boolean\n    },\n    bordered: {\n      type: Boolean\n    },\n    // icons & buttons\n    increaseIcon: {\n      type: String,\n      default: \"add\"\n    },\n    decreaseIcon: {\n      type: String,\n      default: \"remove\"\n    },\n    buttons: {\n      type: Boolean,\n      default: false\n    },\n    flat: {\n      type: Boolean,\n      default: true\n    },\n    rounded: {\n      type: Boolean,\n      default: false\n    },\n    margins: {\n      type: [String, Number],\n      default: \"4px\"\n    },\n    textColor: {\n      type: String,\n      default: void 0\n    },\n    longPressDelay: {\n      type: Number,\n      default: 500\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:counterValue\"\n    },\n    ariaDecreaseLabel: {\n      type: String,\n      default: \"$t:decreaseCounter\"\n    },\n    ariaIncreaseLabel: {\n      type: String,\n      default: \"$t:increaseCounter\"\n    }\n  },\n  emits: [\"update:modelValue\", ...createInputEmits(), ...createFieldEmits(), ...useFocusEmits],\n  inheritAttrs: false,\n  setup(props, {\n    emit,\n    attrs,\n    slots\n  }) {\n    const input = shallowRef();\n    const {\n      min,\n      max,\n      step\n    } = toRefs(props);\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(input, emit);\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const setCountInput = ({\n      target\n    }) => {\n      valueComputed.value = Number(target == null ? void 0 : target.value);\n    };\n    const setCountChange = ({\n      target\n    }) => {\n      calculateCounterValue(Number(target == null ? void 0 : target.value));\n    };\n    const getRoundDownWithStep = value => {\n      if (typeof min.value === \"undefined\" || !step.value) {\n        return value;\n      }\n      return min.value + step.value * Math.floor((value - min.value) / step.value);\n    };\n    const calculateCounterValue = counterValue => {\n      if (typeof min.value !== \"undefined\" && counterValue < min.value) {\n        valueComputed.value = min.value;\n        return;\n      }\n      if (max.value && counterValue > max.value) {\n        valueComputed.value = getRoundDownWithStep(max.value);\n        return;\n      }\n      valueComputed.value = getRoundDownWithStep(counterValue);\n    };\n    const isMinReached = computed(() => {\n      if (typeof min.value === \"undefined\") {\n        return false;\n      }\n      return Number(valueComputed.value) <= min.value;\n    });\n    const isMaxReached = computed(() => {\n      if (!max.value) {\n        return false;\n      }\n      return step.value ? Number(valueComputed.value) > max.value - step.value : Number(valueComputed.value) >= max.value;\n    });\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0);\n    const isDecreaseActionDisabled = computed(() => isMinReached.value || props.readonly || props.disabled);\n    const isIncreaseActionDisabled = computed(() => isMaxReached.value || props.readonly || props.disabled);\n    const decreaseCount = () => {\n      if (isDecreaseActionDisabled.value) {\n        return;\n      }\n      calculateCounterValue(Number(valueComputed.value) - step.value);\n    };\n    const increaseCount = () => {\n      if (isIncreaseActionDisabled.value) {\n        return;\n      }\n      calculateCounterValue(Number(valueComputed.value) + step.value);\n    };\n    useLongPress(useTemplateRef(\"decreaseButtonRef\"), {\n      onUpdate: decreaseCount,\n      delay: toRef(props, \"longPressDelay\")\n    });\n    useLongPress(useTemplateRef(\"increaseButtonRef\"), {\n      onUpdate: increaseCount,\n      delay: toRef(props, \"longPressDelay\")\n    });\n    const {\n      getColor\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const decreaseIconProps = computed(() => ({\n      class: {\n        \"va-counter__icon--inactive\": isDecreaseActionDisabled.value\n      },\n      color: colorComputed.value,\n      icon: props.decreaseIcon,\n      plain: true,\n      disabled: isDecreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isDecreaseActionDisabled.value && {\n        onClick: decreaseCount\n      })\n    }));\n    const increaseIconProps = computed(() => ({\n      class: {\n        \"va-counter__icon--inactive\": isIncreaseActionDisabled.value\n      },\n      color: colorComputed.value,\n      icon: props.increaseIcon,\n      plain: true,\n      disabled: isIncreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isIncreaseActionDisabled.value && {\n        onClick: increaseCount\n      })\n    }));\n    const isSquareCorners = computed(() => (typeof props.margins === \"string\" ? parseFloat(props.margins) : props.margins) === 0);\n    const buttonProps = computed(() => ({\n      ...pick(props, [\"color\", \"textColor\"]),\n      round: props.rounded,\n      preset: props.flat ? \"secondary\" : \"\",\n      borderColor: props.outline && props.flat ? props.color : \"\"\n    }));\n    const decreaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.decreaseIcon,\n      disabled: isDecreaseActionDisabled.value\n    }));\n    const increaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.increaseIcon,\n      disabled: isIncreaseActionDisabled.value\n    }));\n    const {\n      tp\n    } = useTranslation();\n    const inputAttributesComputed = computed(() => ({\n      tabindex: tabIndexComputed.value,\n      \"aria-label\": tp(props.ariaLabel),\n      \"aria-valuemin\": min.value,\n      \"aria-valuemax\": max.value,\n      ...omit(attrs, [\"class\", \"style\"]),\n      ...pick(props, [\"disabled\", \"min\", \"max\", \"step\"]),\n      readonly: props.readonly || !props.manualInput\n    }));\n    const inputWrapperPropsComputed = computed(() => ({\n      ...pick(props, [\"color\", \"readonly\", \"disabled\", \"messages\", \"label\", \"bordered\", \"outline\"])\n    }));\n    const classComputed = computed(() => [attrs.class, {\n      \"va-counter--input-square\": isSquareCorners.value\n    }, {\n      \"va-counter--content-slot\": slots.content && props.buttons\n    }]);\n    const styleComputed = computed(() => ({\n      width: safeCSSLength(props.width),\n      ...(attrs.style || {})\n    }));\n    const marginComputed = computed(() => safeCSSLength(props.margins));\n    useCounterPropsValidation(props);\n    return {\n      tp,\n      input,\n      valueComputed,\n      isFocused,\n      fieldListeners: createFieldListeners(emit),\n      inputListeners: createInputListeners(emit),\n      inputAttributesComputed,\n      inputWrapperPropsComputed,\n      setCountInput,\n      setCountChange,\n      decreaseCount,\n      increaseCount,\n      decreaseIconProps,\n      increaseIconProps,\n      decreaseButtonProps,\n      increaseButtonProps,\n      colorComputed,\n      classComputed,\n      styleComputed,\n      marginComputed,\n      focus,\n      blur\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaCounter.css';","map":{"version":3,"names":["createEmits","createInputEmits","createListeners","createInputListeners","useEmitProxy","createFieldEmits","createFieldListeners","listen","emit","_sfc_main","defineComponent","name","components","VaInputWrapper","VaButton","props","useFormFieldProps","useStatefulProps","useComponentPresetProp","modelValue","type","String","Number","default","manualInput","Boolean","stateful","min","max","step","label","messages","Array","width","color","outline","bordered","increaseIcon","decreaseIcon","buttons","flat","rounded","margins","textColor","longPressDelay","ariaLabel","ariaDecreaseLabel","ariaIncreaseLabel","emits","useFocusEmits","inheritAttrs","setup","attrs","slots","input","shallowRef","toRefs","isFocused","focus","blur","useFocus","valueComputed","useStateful","setCountInput","target","value","setCountChange","calculateCounterValue","getRoundDownWithStep","Math","floor","counterValue","isMinReached","computed","isMaxReached","tabIndexComputed","disabled","isDecreaseActionDisabled","readonly","isIncreaseActionDisabled","decreaseCount","increaseCount","useLongPress","useTemplateRef","onUpdate","delay","toRef","getColor","useColors","colorComputed","decreaseIconProps","class","icon","plain","tabindex","onClick","increaseIconProps","isSquareCorners","parseFloat","buttonProps","pick","round","preset","borderColor","decreaseButtonProps","increaseButtonProps","tp","useTranslation","inputAttributesComputed","omit","inputWrapperPropsComputed","classComputed","content","styleComputed","safeCSSLength","style","marginComputed","useCounterPropsValidation","fieldListeners","inputListeners"],"sources":["../../../../../src/components/va-counter/VaCounter.vue"],"sourcesContent":["<template>\n  <va-input-wrapper\n    class=\"va-counter\"\n    v-bind=\"{ ...fieldListeners, ...inputWrapperPropsComputed }\"\n    :class=\"classComputed\"\n    :style=\"styleComputed\"\n    :focused=\"isFocused\"\n    @keydown.up.prevent=\"increaseCount\"\n    @keydown.right.prevent=\"increaseCount\"\n    @keydown.down.prevent=\"decreaseCount\"\n    @keydown.left.prevent=\"decreaseCount\"\n  >\n    <template v-if=\"$props.buttons\" #prepend=\"slotScope\">\n      <div\n        class=\"va-counter__prepend-wrapper\"\n        :style=\"{ marginRight: marginComputed }\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"decreaseAction\" v-bind=\"{ ...slotScope, decreaseCount }\">\n          <va-button\n            class=\"va-counter__button-decrease\"\n            :aria-label=\"tp($props.ariaDecreaseLabel)\"\n            v-bind=\"decreaseButtonProps\"\n            ref=\"decreaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-else #prependInner=\"slotScope\">\n      <div\n        class=\"va-counter__prepend-inner\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"decreaseAction\" v-bind=\"{ ...slotScope, decreaseCount }\">\n          <va-button\n            v-bind=\"decreaseIconProps\"\n            ref=\"decreaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-if=\"$props.buttons\" #append=\"slotScope\">\n      <div\n        class=\"va-counter__append-wrapper\"\n        :style=\"{ marginLeft: marginComputed }\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"increaseAction\" v-bind=\"{ ...slotScope, increaseCount }\">\n          <va-button\n            class=\"va-counter__button-increase\"\n            :aria-label=\"tp($props.ariaIncreaseLabel)\"\n            v-bind=\"increaseButtonProps\"\n            ref=\"increaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-else #appendInner=\"slotScope\">\n      <div\n        class=\"va-counter__append-inner\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"increaseAction\" v-bind=\"{ ...slotScope, increaseCount }\">\n          <va-button\n            v-bind=\"increaseIconProps\"\n            ref=\"increaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-if=\"$slots.content\" #default=\"slotScope\">\n      <div ref=\"input\" tabindex=\"0\" class=\"va-counter__content-wrapper\">\n        <slot\n          name=\"content\"\n          v-bind=\"{ ...slotScope, value: Number(valueComputed) }\"\n        />\n      </div>\n    </template>\n\n    <input\n      v-if=\"!$slots.content\"\n      ref=\"input\"\n      class=\"va-input__content__input\"\n      type=\"number\"\n      inputmode=\"decimal\"\n      v-bind=\"{ ...inputAttributesComputed, ...inputListeners }\"\n      :value=\"valueComputed\"\n      @input=\"setCountInput\"\n      @change=\"setCountChange\"\n    />\n  </va-input-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  computed,\n  shallowRef,\n  defineComponent,\n  InputHTMLAttributes,\n  PropType,\n  ComputedRef,\n  toRef,\n} from 'vue'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\n\nimport { safeCSSLength } from '../../utils/css'\nimport {\n  useComponentPresetProp,\n  useFormFieldProps,\n  useEmitProxy,\n  useFocus, useFocusEmits,\n  useStateful, useStatefulProps,\n  useColors,\n  useTranslation,\n  useLongPress,\n  useTemplateRef,\n} from '../../composables'\nimport useCounterPropsValidation from './hooks/useCounterPropsValidation'\n\nimport { VaInputWrapper } from '../va-input'\nimport { VaButton } from '../va-button'\n\nconst { createEmits: createInputEmits, createListeners: createInputListeners } = useEmitProxy(\n  ['change'],\n)\n\nconst { createEmits: createFieldEmits, createListeners: createFieldListeners } = useEmitProxy([\n  { listen: 'click-prepend', emit: 'click:decrease-button' },\n  { listen: 'click-append', emit: 'click:increase-button' },\n  { listen: 'click-prepend-inner', emit: 'click:decrease-icon' },\n  { listen: 'click-append-inner', emit: 'click:increase-icon' },\n])\n\nexport default defineComponent({\n  name: 'VaCounter',\n\n  components: { VaInputWrapper, VaButton },\n\n  props: {\n    ...useFormFieldProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    // input\n    modelValue: { type: [String, Number], default: 0 },\n    manualInput: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: false },\n    min: { type: Number, default: undefined },\n    max: { type: Number, default: undefined },\n    step: { type: Number, default: 1 },\n    label: { type: String, default: '' },\n    // hint\n    messages: { type: [Array, String] as PropType<string[] | string>, default: () => [] },\n    // style\n    width: { type: [String, Number], default: '160px' },\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean },\n    bordered: { type: Boolean },\n    // icons & buttons\n    increaseIcon: { type: String, default: 'add' },\n    decreaseIcon: { type: String, default: 'remove' },\n    buttons: { type: Boolean, default: false },\n    flat: { type: Boolean, default: true },\n    rounded: { type: Boolean, default: false },\n    margins: { type: [String, Number], default: '4px' },\n    textColor: { type: String, default: undefined },\n    longPressDelay: { type: Number, default: 500 },\n\n    ariaLabel: { type: String, default: '$t:counterValue' },\n    ariaDecreaseLabel: { type: String, default: '$t:decreaseCounter' },\n    ariaIncreaseLabel: { type: String, default: '$t:increaseCounter' },\n  },\n\n  emits: [\n    'update:modelValue',\n    ...createInputEmits(),\n    ...createFieldEmits(),\n    ...useFocusEmits,\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, attrs, slots }) {\n    const input = shallowRef<HTMLInputElement | HTMLDivElement>()\n    const { min, max, step } = toRefs(props)\n\n    const {\n      isFocused,\n      focus,\n      blur,\n    } = useFocus(input, emit)\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const setCountInput = ({ target }: Event) => {\n      valueComputed.value = Number((target as HTMLInputElement | null)?.value)\n    }\n\n    const setCountChange = ({ target }: Event) => {\n      calculateCounterValue(Number((target as HTMLInputElement | null)?.value))\n    }\n\n    const getRoundDownWithStep = (value: number) => {\n      if (typeof min.value === 'undefined' || !step.value) { return value }\n\n      // If the user enters a value manually, then we must round it to the nearest valid value,\n      // taking into account the initial value (`props.min`) and the step size (`props.step`)\n      return min.value + step.value * Math.floor((value - min.value) / step.value)\n    }\n\n    const calculateCounterValue = (counterValue: number) => {\n      if (typeof min.value !== 'undefined' && counterValue < min.value) {\n        valueComputed.value = min.value\n        return\n      }\n\n      if (max.value && (counterValue > max.value)) {\n        // since the `props.step` may not be a multiple of `(props.max - props.min)`,\n        // we must round the result taking into account the allowable value\n        valueComputed.value = getRoundDownWithStep(max.value)\n        return\n      }\n\n      valueComputed.value = getRoundDownWithStep(counterValue)\n    }\n\n    const isMinReached = computed(() => {\n      if (typeof min.value === 'undefined') { return false }\n\n      return Number(valueComputed.value) <= min.value\n    })\n\n    const isMaxReached = computed(() => {\n      if (!max.value) { return false }\n\n      return step.value\n        ? Number(valueComputed.value) > (max.value - step.value)\n        : Number(valueComputed.value) >= max.value\n    })\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0)\n\n    const isDecreaseActionDisabled = computed(() => (\n      isMinReached.value || props.readonly || props.disabled\n    ))\n\n    const isIncreaseActionDisabled = computed(() => (\n      isMaxReached.value || props.readonly || props.disabled\n    ))\n\n    const decreaseCount = () => {\n      if (isDecreaseActionDisabled.value) { return }\n      calculateCounterValue(Number(valueComputed.value) - step.value)\n    }\n\n    const increaseCount = () => {\n      if (isIncreaseActionDisabled.value) { return }\n      calculateCounterValue(Number(valueComputed.value) + step.value)\n    }\n\n    useLongPress(useTemplateRef('decreaseButtonRef'), {\n      onUpdate: decreaseCount,\n      delay: toRef(props, 'longPressDelay'),\n    })\n\n    useLongPress(useTemplateRef('increaseButtonRef'), {\n      onUpdate: increaseCount,\n      delay: toRef(props, 'longPressDelay'),\n    })\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const decreaseIconProps = computed(() => ({\n      class: { 'va-counter__icon--inactive': isDecreaseActionDisabled.value },\n      color: colorComputed.value,\n      icon: props.decreaseIcon,\n      plain: true,\n      disabled: isDecreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isDecreaseActionDisabled.value && { onClick: decreaseCount }),\n    }))\n\n    const increaseIconProps = computed(() => ({\n      class: { 'va-counter__icon--inactive': isIncreaseActionDisabled.value },\n      color: colorComputed.value,\n      icon: props.increaseIcon,\n      plain: true,\n      disabled: isIncreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isIncreaseActionDisabled.value && { onClick: increaseCount }),\n    }))\n\n    const isSquareCorners = computed(() => (\n      (typeof props.margins === 'string' ? parseFloat(props.margins) : props.margins) === 0\n    ))\n\n    const buttonProps = computed(() => ({\n      ...pick(props, ['color', 'textColor']),\n      round: props.rounded,\n      preset: props.flat ? 'secondary' : '',\n      borderColor: (props.outline && props.flat) ? props.color : '',\n    }))\n\n    const decreaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.decreaseIcon,\n      disabled: isDecreaseActionDisabled.value,\n    }))\n\n    const increaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.increaseIcon,\n      disabled: isIncreaseActionDisabled.value,\n    }))\n\n    const { tp } = useTranslation()\n\n    const inputAttributesComputed = computed(() => ({\n      tabindex: tabIndexComputed.value,\n      'aria-label': tp(props.ariaLabel),\n      'aria-valuemin': min.value,\n      'aria-valuemax': max.value,\n      ...omit(attrs, ['class', 'style']),\n      ...pick(props, ['disabled', 'min', 'max', 'step']),\n      readonly: props.readonly || !props.manualInput,\n    }) as InputHTMLAttributes)\n\n    const inputWrapperPropsComputed = computed(() => ({\n      ...pick(props, ['color', 'readonly', 'disabled', 'messages', 'label', 'bordered', 'outline']),\n    }))\n\n    const classComputed = computed(() => ([\n      attrs.class,\n      { 'va-counter--input-square': isSquareCorners.value },\n      { 'va-counter--content-slot': slots.content && props.buttons },\n    ]))\n\n    const styleComputed: ComputedRef<Partial<CSSStyleDeclaration>> = computed(() => ({\n      width: safeCSSLength(props.width),\n      ...((attrs.style as Partial<CSSStyleDeclaration>) || {}),\n    }))\n\n    const marginComputed = computed(() => safeCSSLength(props.margins))\n\n    useCounterPropsValidation(props)\n\n    return {\n      tp,\n      input,\n      valueComputed,\n      isFocused,\n\n      fieldListeners: createFieldListeners(emit),\n      inputListeners: createInputListeners(emit),\n      inputAttributesComputed,\n      inputWrapperPropsComputed,\n      setCountInput,\n      setCountChange,\n\n      decreaseCount,\n      increaseCount,\n\n      decreaseIconProps,\n      increaseIconProps,\n      decreaseButtonProps,\n      increaseButtonProps,\n\n      colorComputed,\n      classComputed,\n      styleComputed,\n      marginComputed,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-counter {\n  &.va-input-wrapper {\n    min-width: unset;\n    flex: none;\n\n    .va-input-wrapper__field {\n      width: unset;\n    }\n  }\n\n  .va-input-wrapper__field > *,\n  .va-input-wrapper__container > * {\n    margin-right: 0;\n  }\n\n  &.va-counter--input-square {\n    .va-input-wrapper__field {\n      border-radius: 0;\n      border-left: none;\n      border-right: none;\n    }\n\n    .va-counter__prepend-wrapper {\n      z-index: 1;\n\n      .va-counter__button-decrease {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n\n      .va-counter__button-decrease:not(.va-button--square) {\n        width: unset;\n\n        .va-button__content {\n          padding-right: var(--va-counter-button-inner-padding);\n          padding-left: var(--va-counter-button-outer-padding);\n        }\n      }\n    }\n\n    .va-counter__append-wrapper {\n      z-index: 1;\n\n      .va-counter__button-increase {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n      }\n\n      .va-counter__button-increase:not(.va-button--square) {\n        width: unset;\n\n        .va-button__content {\n          padding-left: var(--va-counter-button-inner-padding);\n          padding-right: var(--va-counter-button-outer-padding);\n        }\n      }\n    }\n  }\n\n  .va-counter__prepend-wrapper,\n  .va-counter__append-wrapper {\n    .va-counter__button-decrease,\n    .va-counter__button-increase {\n      .va-button__content {\n        padding: unset;\n      }\n    }\n  }\n\n  .va-counter__content-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    &:focus-visible {\n      outline: none;\n    }\n  }\n\n  .va-input__content__input {\n    text-align: center;\n\n    // Chrome, Safari, Edge, Opera\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    // Firefox\n    &[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n\n  .va-input-wrapper__field {\n    align-items: stretch;\n    padding: 0;\n\n    .va-input-wrapper__text,\n    .va-input__container {\n      padding-right: 0;\n    }\n  }\n\n  &__prepend-inner,\n  &__append-inner {\n    display: flex;\n    align-items: stretch;\n    height: 100%;\n    margin: 0 0.5rem;\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}