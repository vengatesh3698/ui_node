{"ast":null,"code":"import { _ as _sfc_main } from \"./VaMonthPicker.vue_vue_type_script_lang-7b828404.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, createVNode, withCtx, renderSlot, normalizeProps, guardReactiveProps, createTextVNode, toDisplayString } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaMonthPicker_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"onMouseenter\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_date_picker_cell = resolveComponent(\"va-date-picker-cell\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: \"va-month-picker\"\n  }, _ctx.containerAttributes), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.months, (month, monthIndex) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: monthIndex,\n      class: \"va-month-picker__month-wrapper\",\n      onMouseenter: $event => _ctx.hoveredIndex = monthIndex,\n      onMouseleave: _cache[0] || (_cache[0] = $event => _ctx.hoveredIndex = -1)\n    }, [createVNode(_component_va_date_picker_cell, {\n      \"in-range\": !!_ctx.isInRange(month),\n      selected: !!_ctx.isSelected(month),\n      disabled: !!_ctx.isDisabled(month),\n      today: !!_ctx.isToday(month),\n      focused: _ctx.hoveredIndex === monthIndex,\n      \"highlight-today\": _ctx.highlightToday,\n      readonly: _ctx.$props.readonly,\n      color: _ctx.color,\n      onClick: $event => {\n        _ctx.onClick(month);\n        _ctx.focusedCellIndex = monthIndex;\n      }\n    }, {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"month\", normalizeProps(guardReactiveProps({\n        monthIndex,\n        month: _ctx.monthNames[monthIndex]\n      })), () => [createTextVNode(toDisplayString(_ctx.monthNames[monthIndex]), 1)])]),\n      _: 2\n    }, 1032, [\"in-range\", \"selected\", \"disabled\", \"today\", \"focused\", \"highlight-today\", \"readonly\", \"color\", \"onClick\"])], 40, _hoisted_1);\n  }), 128))], 16);\n}\nconst VaMonthPicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaMonthPicker as V };","map":{"version":3,"names":["resolveComponent","mergeProps","class","_ctx","containerAttributes","openBlock","createElementBlock","Fragment","renderList","months","month","monthIndex","key","onMouseenter","$event","hoveredIndex","onMouseleave","_cache","createVNode","_component_va_date_picker_cell","isInRange","selected","isSelected","disabled","isDisabled","today","isToday","focused","highlightToday","readonly","$props","color","onClick","focusedCellIndex","default","withCtx"],"sources":["../../../../../../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      class=\"va-month-picker__month-wrapper\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerView, DatePickerModelValue } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 4 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6); // 7 days + gap\n  width: 100%;\n\n  &__month-wrapper {\n    border-radius: var(--va-date-picker-cell-radius);\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n}\n</style>\n"],"mappings":";;;;;;yCACEA,gBAAA,CAAW;yCACT,OAsBMC,UAAA;IAAAC,KAAA;EAAA,GAAAC,IAAA,CAAAC,mBAAA,KAAAC,SAAA,CApBE,IAAU,GAAAC,kBAAA,CAAAC,QAAA,QAAAC,UAAA,CAAAL,IAAA,CAAAM,MAAA,GAAAC,KAAA,EAAAC,UAAA;IACX,OAAAN,SAAA,IAAiCC,kBAAA;MACrCM,GAAA,EAAAD,UAAA;MACAT,KAAA;MAAAW,YAAA,EAAAC,MAAA,IAAAX,IAAA,CAAAY,YAAA,GAAAJ,UAAA;MAEDK,YAAA,EAcsBC,MAAA,QAAAA,MAAA,MAAAH,MAAA,IAAAX,IAAA,CAAAY,YAAA;IAAA,IAAAG,WAAA,CAZXC,8BAAA,EAAoB;MAC5B,YAAY,EAAAhB,IAAA,CAAAiB,SAAA,CAAWV,KAAK;MAC5BW,QAAA,EAAS,CAAa,CAAAlB,IAAA,CAAAmB,UAAA,CAAAZ,KAAA;MACtBa,QAAA,EAAS,EAAApB,IAAA,CAAAqB,UAAA,CAAYd,KAAK;MAC1Be,KAAA,EAAiB,EAAAtB,IAAA,CAAAuB,OAAA,CAAAhB,KAAA;MACjBiB,OAAA,EAAQxB,IAAA,CAAEY,YAAA,KAAeJ,UAAA;MACzB,mBAAYR,IAAA,CAAAyB,cAAA;MACZC,QAAA,EAAK1B,IAAA,CAAE2B,MAAA,CAAAD,QAAA;MAAAE,KAAA,EAAA5B,IAAA,CAAA4B,KAAA;MAIDC,OAAA,EAAAlB,MAAA;QAAAX,IAAA,CAAA6B,OAAA,CAAAtB,KAAA;QAAAP,IAAA,CAAA8B,gBAAA,GAAAtB,UAAA;MAAA;IAAA;MAAAuB,OAAA,EAAAC,OAAA,Q"},"metadata":{},"sourceType":"module","externalDependencies":[]}