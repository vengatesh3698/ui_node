{"ast":null,"code":"import { _ as _sfc_main } from \"./VaSkeleton.vue_vue_type_script_lang-2ae4bc57.mjs\";\nimport { openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, renderSlot, createElementBlock, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaSkeleton_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"va-skeleton__wave\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n    class: normalizeClass([\"va-skeleton\", _ctx.classes]),\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaLabel),\n    \"aria-atomic\": \"true\",\n    style: normalizeStyle(`--va-0-color-computed: ${String(_ctx.colorComputed)};--va-1-height-computed: ${String(_ctx.heightComputed)};--va-2-width-computed: ${String(_ctx.widthComputed)};--va-3-border-radius: ${String(_ctx.borderRadius)};--va-4-line-gap: ${String(_ctx.lineGap)};--va-5-last-line-width: ${String(_ctx.lastLineWidth)}`)\n  }, {\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"default\"), _ctx.animation === \"wave\" ? (openBlock(), createElementBlock(\"div\", _hoisted_1)) : createCommentVNode(\"\", true)]),\n    _: 3\n  }, 8, [\"aria-label\", \"class\", \"style\"]);\n}\nconst _VaSkeleton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaSkeleton as _ };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as _sfc_main } from \"./VaSkeleton.vue_vue_type_script_lang-2ae4bc57.mjs\";\nimport { openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, renderSlot, createElementBlock, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaSkeleton_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"va-skeleton__wave\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n    class: normalizeClass([\"va-skeleton\", _ctx.classes]),\n    role: \"status\",\n    \"aria-live\": \"polite\",\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaLabel),\n    \"aria-atomic\": \"true\",\n    style: normalizeStyle(`--va-0-color-computed: ${String(_ctx.colorComputed)};--va-1-height-computed: ${String(_ctx.heightComputed)};--va-2-width-computed: ${String(_ctx.widthComputed)};--va-3-border-radius: ${String(_ctx.borderRadius)};--va-4-line-gap: ${String(_ctx.lineGap)};--va-5-last-line-width: ${String(_ctx.lastLineWidth)}`)\n  }, {\n    default: withCtx(() => [\n      renderSlot(_ctx.$slots, \"default\"),\n      _ctx.animation === \"wave\" ? (openBlock(), createElementBlock(\"div\", _hoisted_1)) : createCommentVNode(\"\", true)\n    ]),\n    _: 3\n  }, 8, [\"aria-label\", \"class\", \"style\"]);\n}\nconst _VaSkeleton = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport {\n  _VaSkeleton as _\n};\n//# sourceMappingURL=VaSkeleton-c24c6d9e.mjs.map\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}