{"ast":null,"code":"import { defineComponent, openBlock, createElementBlock, createElementVNode, ref, onMounted, onBeforeMount, onBeforeUnmount, watch, nextTick, computed, resolveComponent, createBlock, Teleport, normalizeClass, createVNode, Transition, withCtx, withDirectives, normalizeStyle, vShow, renderSlot, createCommentVNode } from 'vue';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nvar script$1 = defineComponent({\n  name: 'SidePanelCloseButton',\n  emits: ['close']\n});\nconst _hoisted_1 = /*#__PURE__*/createElementVNode(\"span\", {\n  class: \"vsp-close__x\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = [_hoisted_1];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", {\n    class: \"vsp-close\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('close'))\n  }, _hoisted_2);\n}\nscript$1.render = render$1;\nscript$1.__file = \"src/components/SidePanelCloseButton.vue\";\nvar script = defineComponent({\n  name: 'VueSidePanel',\n  components: {\n    SidePanelCloseButton: script$1\n  },\n  props: {\n    idName: {\n      type: String,\n      default: 'vsp-container'\n    },\n    hideCloseBtn: {\n      type: Boolean,\n      default: false\n    },\n    noClose: {\n      type: Boolean,\n      default: false\n    },\n    side: {\n      type: String,\n      validator: value => ['top', 'right', 'bottom', 'left'].includes(value),\n      default: 'right'\n    },\n    rerender: {\n      type: Boolean,\n      default: false\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 'auto'\n    },\n    width: {\n      type: String,\n      default: 'auto'\n    },\n    height: {\n      type: String,\n      default: 'auto'\n    },\n    lockScroll: {\n      type: Boolean,\n      default: false\n    },\n    lockScrollHtml: {\n      type: Boolean,\n      default: true\n    },\n    modelValue: {\n      type: Boolean,\n      default: false,\n      required: true\n    },\n    overlayColor: {\n      type: String,\n      default: 'black'\n    },\n    overlayOpacity: {\n      type: Number,\n      default: 0.5\n    },\n    overlayDuration: {\n      type: Number,\n      default: 500\n    },\n    panelColor: {\n      type: String,\n      default: 'white'\n    },\n    panelDuration: {\n      type: Number,\n      default: 300\n    },\n    transitionName: {\n      type: String,\n      default: undefined\n    },\n    headerClass: {\n      type: String,\n      default: ''\n    },\n    bodyClass: {\n      type: String,\n      default: ''\n    },\n    footerClass: {\n      type: String,\n      default: ''\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props, {\n    emit,\n    attrs\n  }) {\n    let teleportContainer = undefined;\n    const panel = ref(null);\n    const overlay = ref(null);\n    const footer = ref(null);\n    const header = ref(null);\n    const body = ref(null);\n    const footerHeight = ref(0);\n    const bodyScrollHeight = ref(0);\n    const headerHeight = ref(0);\n    const panelHeight = ref(0);\n    const windowHeight = ref(0);\n    const zIndex = ref();\n    const isBodyAlreadyLocked = ref(false);\n    const calculateRightSize = async () => {\n      if (window?.innerHeight > 0) windowHeight.value = window.innerHeight;\n      footerHeight.value = footer.value ? footer.value.clientHeight : 0;\n      headerHeight.value = header.value ? header.value.clientHeight : 0;\n      bodyScrollHeight.value = body.value ? body.value.scrollHeight : 0;\n      panelHeight.value = panel.value ? panel.value.clientHeight : 0;\n    };\n    const closePanel = () => emit('update:modelValue', false);\n    const lockUnlockBodyScroll = (elem, lock) => {\n      if (lock) {\n        setTimeout(() => {\n          disableBodyScroll(elem, {\n            reserveScrollBarGap: true\n          });\n          if (props.lockScrollHtml) document.documentElement.style.overflow = 'hidden';\n        }, 0);\n        return;\n      }\n      enableBodyScroll(elem);\n      if (props.lockScrollHtml) document.documentElement.style.removeProperty('overflow');\n    };\n    const getMaxZIndex = () => Math.max(...Array.from(document.querySelectorAll('body *'), el => parseFloat(window.getComputedStyle(el).zIndex)).filter(zIndex => !Number.isNaN(zIndex)), 0);\n    onMounted(() => {\n      zIndex.value = props.zIndex === 'auto' ? getMaxZIndex() : props.zIndex;\n    });\n    onBeforeMount(() => {\n      const alreadyCreatedTarget = document.getElementById(props.idName);\n      if (!!alreadyCreatedTarget) return;\n      teleportContainer = document.createElement('div');\n      teleportContainer.setAttribute('id', props.idName);\n      document.body.appendChild(teleportContainer);\n    });\n    onBeforeUnmount(() => {\n      const {\n        modelValue,\n        lockScroll\n      } = props;\n      if (lockScroll && panel.value && modelValue) lockUnlockBodyScroll(panel.value, false);\n      if (teleportContainer) document.body.removeChild(teleportContainer);\n      window.removeEventListener('resize', calculateRightSize);\n    });\n    watch(() => [header.value, footer.value, props.height, props.width, props.side, props.modelValue], () => {\n      nextTick(() => calculateRightSize());\n    });\n    watch(() => [props.modelValue, panel.value], (newP, oldP) => {\n      const wasShown = oldP ? oldP[0] : false;\n      const [isShown, panelEl] = newP;\n      const isOpening = isShown;\n      const isClosing = wasShown && !isShown;\n      if (!panelEl) return;\n      if (isOpening) isBodyAlreadyLocked.value = !!document.body.style.overflow;\n      if (isShown) {\n        if (props.lockScroll) lockUnlockBodyScroll(panelEl, true);\n        calculateRightSize();\n        window.addEventListener('resize', calculateRightSize);\n        return;\n      }\n      if (!props.lockScroll || !isClosing || isBodyAlreadyLocked.value) return;\n      setTimeout(() => {\n        if (panelEl) lockUnlockBodyScroll(panelEl, false);\n      }, props.panelDuration);\n      window.removeEventListener('resize', calculateRightSize);\n    }, {\n      immediate: true\n    });\n    const bodyHeight = computed(() => {\n      if (!panelHeight.value) return;\n      const panelMaxHeight = bodyScrollHeight.value + headerHeight.value + footerHeight.value;\n      let height = panelHeight.value - headerHeight.value - footerHeight.value;\n      if (['top', 'bottom'].includes(props.side) && props.height === 'auto') {\n        height = windowHeight.value >= panelMaxHeight ? bodyScrollHeight.value : windowHeight.value - headerHeight.value - footerHeight.value;\n      }\n      return height;\n    });\n    const overlayStyles = computed(() => ({\n      zIndex: zIndex.value,\n      animationDuration: `${props.overlayDuration}ms`,\n      '--overlay-opacity': props.overlayOpacity,\n      opacity: props.modelValue ? props.overlayOpacity : 0,\n      backgroundColor: props.overlayColor,\n      pointerEvents: !props.modelValue ? 'none' : 'all'\n    }));\n    const panelStyles = computed(() => ({\n      width: ['left', 'right'].includes(props.side) ? props.width : undefined,\n      maxWidth: '100%',\n      ...(['top', 'bottom'].includes(props.side) ? {\n        // minHeight: props.height,\n        height: props.height,\n        maxHeight: '100%'\n      } : {}),\n      zIndex: zIndex.value,\n      backgroundColor: props.panelColor,\n      animationDuration: `${props.panelDuration}ms`,\n      ...Object.assign({}, attrs.style)\n    }));\n    return {\n      body,\n      panel,\n      overlay,\n      overlayStyles,\n      header,\n      footer,\n      closePanel,\n      panelStyles,\n      bodyHeight\n    };\n  }\n});\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SidePanelCloseButton = resolveComponent(\"SidePanelCloseButton\");\n  return openBlock(), createBlock(Teleport, {\n    to: `#${_ctx.idName}`\n  }, [createElementVNode(\"div\", {\n    class: normalizeClass([\"vsp-wrapper\", [_ctx.modelValue && 'vsp-wrapper--active']])\n  }, [createVNode(Transition, {\n    name: \"overlay\",\n    persisted: \"\"\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      ref: \"overlay\",\n      class: \"vsp-overlay\",\n      style: normalizeStyle(_ctx.overlayStyles),\n      onClick: _cache[0] || (_cache[0] = () => _ctx.noClose ? undefined : _ctx.closePanel())\n    }, null, 4 /* STYLE */), [[vShow, _ctx.modelValue]])]),\n    _: 1 /* STABLE */\n  }), createVNode(Transition, {\n    name: _ctx.transitionName || `slide-${_ctx.side}`\n  }, {\n    default: withCtx(() => [(_ctx.rerender ? _ctx.modelValue : true) ? withDirectives((openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"panel\",\n      class: normalizeClass([\"vsp\", [`vsp--${_ctx.side}-side`, _ctx.$attrs.class]]),\n      style: normalizeStyle(_ctx.panelStyles)\n    }, [!!_ctx.$slots.header ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"header\",\n      class: normalizeClass([_ctx.headerClass, 'vsp__header'])\n    }, [renderSlot(_ctx.$slots, \"header\", {\n      close: _ctx.closePanel\n    })], 2 /* CLASS */)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n      ref: \"body\",\n      class: normalizeClass([_ctx.bodyClass, 'vsp__body']),\n      style: normalizeStyle({\n        height: `${_ctx.bodyHeight}px`\n      })\n    }, [renderSlot(_ctx.$slots, \"default\", {\n      close: _ctx.closePanel\n    }), !_ctx.hideCloseBtn ? (openBlock(), createBlock(_component_SidePanelCloseButton, {\n      key: 0,\n      onClose: _ctx.closePanel\n    }, null, 8 /* PROPS */, [\"onClose\"])) : createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */), !!_ctx.$slots.footer ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      ref: \"footer\",\n      class: normalizeClass([_ctx.footerClass, 'vsp__footer'])\n    }, [renderSlot(_ctx.$slots, \"footer\")], 2 /* CLASS */)) : createCommentVNode(\"v-if\", true)], 6 /* CLASS, STYLE */)), [[vShow, _ctx.rerender ? true : _ctx.modelValue]]) : createCommentVNode(\"v-if\", true)]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"name\"])], 2 /* CLASS */)], 8 /* PROPS */, [\"to\"]);\n}\nscript.render = render;\nscript.__file = \"src/components/SidePanel.vue\";\nvar VueSidePanelPlugin = {\n  install(app) {\n    app.component('VueSidePanel', script);\n  }\n};\nexport { script as VueSidePanel, VueSidePanelPlugin as default };","map":{"version":3,"names":["script$1","defineComponent","name","emits","script","components","props","idName","type","String","default","hideCloseBtn","Boolean","noClose","side","validator","value","includes","rerender","zIndex","Number","width","height","lockScroll","lockScrollHtml","modelValue","required","overlayColor","overlayOpacity","overlayDuration","panelColor","panelDuration","transitionName","undefined","headerClass","bodyClass","footerClass","setup","emit","attrs","teleportContainer","panel","ref","overlay","footer","header","body","footerHeight","bodyScrollHeight","headerHeight","panelHeight","windowHeight","isBodyAlreadyLocked","calculateRightSize","window","innerHeight","clientHeight","scrollHeight","closePanel","lockUnlockBodyScroll","elem","lock","setTimeout","disableBodyScroll","reserveScrollBarGap","document","documentElement","style","overflow","enableBodyScroll","removeProperty","getMaxZIndex","Math","max","Array","from","querySelectorAll","el","parseFloat","getComputedStyle","filter","isNaN","onMounted","onBeforeMount","alreadyCreatedTarget","getElementById","createElement","setAttribute","appendChild","onBeforeUnmount","removeChild","removeEventListener","watch","nextTick","newP","oldP","wasShown","isShown","panelEl","isOpening","isClosing","addEventListener","immediate","bodyHeight","computed","panelMaxHeight","overlayStyles","animationDuration","opacity","backgroundColor","pointerEvents","panelStyles","maxWidth","maxHeight","Object","assign","VueSidePanelPlugin","install","app","component"],"sources":["../src/components/SidePanelCloseButton.vue","../src/components/SidePanel.vue","../src/VueSidePanel.ts"],"sourcesContent":["<script lang=\"ts\">\nimport { defineComponent } from 'vue';\n\nexport default defineComponent({\n  name: 'SidePanelCloseButton',\n  emits: ['close'],\n});\n</script>\n\n<template>\n  <div class=\"vsp-close\" @click=\"$emit('close')\">\n    <span class=\"vsp-close__x\" />\n  </div>\n</template>\n\n<style lang=\"scss\">\n.vsp-close {\n  $this: &;\n\n  position: absolute;\n  top: 24px;\n  right: 24px;\n  display: inline-block;\n  width: 36px;\n  height: 36px;\n  text-align: center;\n  cursor: pointer;\n  background: white;\n  border-radius: 50%;\n  transition: background-color 0.1s;\n\n  &:hover {\n    background: #f7f7f7;\n  }\n\n  &__x {\n    position: relative;\n    top: 8px;\n    left: -1px;\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n\n    &::before,\n    &::after {\n      position: absolute;\n      width: 2px;\n      height: 20px;\n      content: ' ';\n      background-color: #777;\n    }\n\n    &::before {\n      transform: rotate(-45deg);\n    }\n\n    &::after {\n      transform: rotate(45deg);\n    }\n\n    #{$this}:active & {\n      top: 9px;\n      left: -1px;\n    }\n  }\n\n  &:active {\n    top: 23px;\n    right: 23px;\n    width: 38px;\n    height: 38px;\n    background: #f1f1f1;\n  }\n}\n</style>\n","<script lang=\"ts\">\nimport {\n  defineComponent,\n  onBeforeMount,\n  onBeforeUnmount,\n  PropType,\n  watch,\n  ref,\n  computed,\n  onMounted,\n  nextTick,\n} from 'vue';\nimport { disableBodyScroll, enableBodyScroll } from 'body-scroll-lock';\nimport SidePanelCloseButton from './SidePanelCloseButton.vue';\n\nexport default defineComponent({\n  name: 'VueSidePanel',\n  components: {\n    SidePanelCloseButton,\n  },\n  props: {\n    idName: {\n      type: String as PropType<string>,\n      default: 'vsp-container',\n    },\n    hideCloseBtn: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    noClose: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    side: {\n      type: String as PropType<string>,\n      validator: (value: string) => ['top', 'right', 'bottom', 'left'].includes(value),\n      default: 'right',\n    },\n    rerender: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    zIndex: {\n      type: [Number, String] as PropType<number | 'auto' | undefined>,\n      default: 'auto',\n    },\n    width: {\n      type: String as PropType<string>,\n      default: 'auto',\n    },\n    height: {\n      type: String as PropType<string>,\n      default: 'auto',\n    },\n    lockScroll: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n    },\n    lockScrollHtml: {\n      type: Boolean as PropType<boolean>,\n      default: true,\n    },\n    modelValue: {\n      type: Boolean as PropType<boolean>,\n      default: false,\n      required: true,\n    },\n    overlayColor: {\n      type: String as PropType<string>,\n      default: 'black',\n    },\n    overlayOpacity: {\n      type: Number as PropType<number>,\n      default: 0.5,\n    },\n    overlayDuration: {\n      type: Number as PropType<number>,\n      default: 500,\n    },\n    panelColor: {\n      type: String as PropType<string>,\n      default: 'white',\n    },\n    panelDuration: {\n      type: Number as PropType<number>,\n      default: 300,\n    },\n    transitionName: {\n      type: String as PropType<string>,\n      default: undefined,\n    },\n    headerClass: {\n      type: String as PropType<string>,\n      default: '',\n    },\n    bodyClass: {\n      type: String as PropType<string>,\n      default: '',\n    },\n    footerClass: {\n      type: String as PropType<string>,\n      default: '',\n    },\n  },\n  emits: ['update:modelValue'],\n  setup(props, { emit, attrs }) {\n    let teleportContainer = undefined as HTMLDivElement | undefined;\n    const panel = ref<HTMLElement | null>(null);\n    const overlay = ref<HTMLElement | null>(null);\n    const footer = ref<HTMLElement | null>(null);\n    const header = ref<HTMLElement | null>(null);\n    const body = ref<HTMLElement | null>(null);\n    const footerHeight = ref(0);\n    const bodyScrollHeight = ref(0);\n    const headerHeight = ref(0);\n    const panelHeight = ref(0);\n    const windowHeight = ref(0);\n    const zIndex = ref<number>();\n    const isBodyAlreadyLocked = ref(false);\n\n    const calculateRightSize = async () => {\n      if (window?.innerHeight > 0) windowHeight.value = window.innerHeight;\n\n      footerHeight.value = footer.value ? footer.value.clientHeight : 0;\n      headerHeight.value = header.value ? header.value.clientHeight : 0;\n      bodyScrollHeight.value = body.value ? body.value.scrollHeight : 0;\n      panelHeight.value = panel.value ? panel.value.clientHeight : 0;\n    };\n\n    const closePanel = () => emit('update:modelValue', false);\n\n    const lockUnlockBodyScroll = (elem: HTMLElement, lock: boolean) => {\n      if (lock) {\n        setTimeout(() => {\n          disableBodyScroll(elem, {reserveScrollBarGap: true});\n          if (props.lockScrollHtml) document.documentElement.style.overflow = 'hidden';\n        }, 0);\n        return;\n      }\n\n      enableBodyScroll(elem);\n      if (props.lockScrollHtml) document.documentElement.style.removeProperty('overflow');\n    };\n\n    const getMaxZIndex = () =>\n      Math.max(\n        ...Array.from(document.querySelectorAll('body *'), (el) =>\n          parseFloat(window.getComputedStyle(el).zIndex),\n        ).filter((zIndex) => !Number.isNaN(zIndex)),\n        0,\n      );\n\n    onMounted(() => {\n      zIndex.value = props.zIndex === 'auto' ? getMaxZIndex() : props.zIndex;\n    });\n\n    onBeforeMount(() => {\n      const alreadyCreatedTarget = document.getElementById(props.idName);\n      if (!!alreadyCreatedTarget) return;\n      teleportContainer = document.createElement('div');\n      teleportContainer.setAttribute('id', props.idName);\n      document.body.appendChild(teleportContainer);\n    });\n\n    onBeforeUnmount(() => {\n      const { modelValue, lockScroll } = props\n      if (lockScroll && panel.value && modelValue) lockUnlockBodyScroll(panel.value, false);\n      if (teleportContainer) document.body.removeChild(teleportContainer);\n      window.removeEventListener('resize', calculateRightSize);\n    });\n\n    watch(\n      () => [header.value, footer.value, props.height, props.width, props.side, props.modelValue],\n      () => {\n        nextTick(() => calculateRightSize());\n      },\n    );\n\n    watch(\n      () => [props.modelValue, panel.value],\n      (newP, oldP) => {\n        const wasShown = oldP ? (oldP[0] as boolean) : false;\n        const [isShown, panelEl] = newP as [boolean, HTMLElement | null];\n        const isOpening = isShown;\n        const isClosing = wasShown && !isShown;\n        if (!panelEl) return;\n        if (isOpening) isBodyAlreadyLocked.value = !!document.body.style.overflow;\n\n        if (isShown) {\n          if (props.lockScroll) lockUnlockBodyScroll(panelEl, true);\n          calculateRightSize();\n          window.addEventListener('resize', calculateRightSize);\n          return;\n        }\n\n        if (!props.lockScroll || !isClosing || isBodyAlreadyLocked.value) return;\n\n        setTimeout(() => {\n          if (panelEl) lockUnlockBodyScroll(panelEl, false);\n        }, props.panelDuration);\n        window.removeEventListener('resize', calculateRightSize);\n      },\n      { immediate: true },\n    );\n\n    const bodyHeight = computed<number | undefined>(() => {\n      if (!panelHeight.value) return;\n\n      const panelMaxHeight = bodyScrollHeight.value + headerHeight.value + footerHeight.value;\n      let height = panelHeight.value - headerHeight.value - footerHeight.value;\n\n      if (['top', 'bottom'].includes(props.side) && props.height === 'auto') {\n        height =\n          windowHeight.value >= panelMaxHeight\n            ? bodyScrollHeight.value\n            : windowHeight.value - headerHeight.value - footerHeight.value;\n      }\n\n      return height;\n    });\n\n    const overlayStyles = computed(() => ({\n      zIndex: zIndex.value,\n      animationDuration: `${props.overlayDuration}ms`,\n      '--overlay-opacity': props.overlayOpacity,\n      opacity: props.modelValue ? props.overlayOpacity : 0,\n      backgroundColor: props.overlayColor,\n      pointerEvents: !props.modelValue ? 'none' : 'all',\n    }));\n\n    const panelStyles = computed(() => ({\n      width: ['left', 'right'].includes(props.side) ? props.width : undefined,\n      maxWidth: '100%',\n\n      ...(['top', 'bottom'].includes(props.side)\n        ? {\n            // minHeight: props.height,\n            height: props.height,\n            maxHeight: '100%',\n          }\n        : {}),\n\n      zIndex: zIndex.value,\n      backgroundColor: props.panelColor,\n      animationDuration: `${props.panelDuration}ms`,\n\n      ...Object.assign({}, attrs.style),\n    }));\n\n    return {\n      body,\n      panel,\n      overlay,\n      overlayStyles,\n      header,\n      footer,\n      closePanel,\n      panelStyles,\n      bodyHeight,\n    };\n  },\n});\n</script>\n\n<template>\n  <teleport :to=\"`#${idName}`\">\n    <div class=\"vsp-wrapper\" :class=\"[modelValue && 'vsp-wrapper--active']\">\n      <Transition name=\"overlay\">\n        <div\n          v-show=\"modelValue\"\n          ref=\"overlay\"\n          class=\"vsp-overlay\"\n          :style=\"overlayStyles\"\n          @click=\"() => (noClose ? undefined : closePanel())\"\n        />\n      </Transition>\n      <Transition :name=\"transitionName || `slide-${side}`\">\n        <div\n          v-if=\"rerender ? modelValue : true\"\n          v-show=\"rerender ? true : modelValue\"\n          ref=\"panel\"\n          class=\"vsp\"\n          :class=\"[`vsp--${side}-side`, $attrs.class]\"\n          :style=\"panelStyles\"\n        >\n          <div v-if=\"!!$slots.header\" ref=\"header\" :class=\"[headerClass, 'vsp__header']\">\n            <slot name=\"header\" :close=\"closePanel\" />\n          </div>\n          <div ref=\"body\" :class=\"[bodyClass, 'vsp__body']\" :style=\"{ height: `${bodyHeight}px` }\">\n            <slot name=\"default\" :close=\"closePanel\" />\n            <SidePanelCloseButton v-if=\"!hideCloseBtn\" @close=\"closePanel\" />\n          </div>\n          <div v-if=\"!!$slots.footer\" ref=\"footer\" :class=\"[footerClass, 'vsp__footer']\">\n            <slot name=\"footer\" />\n          </div>\n        </div>\n      </Transition>\n    </div>\n  </teleport>\n</template>\n\n<style lang=\"scss\">\n.vsp-wrapper {\n  .vsp-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .vsp {\n    position: fixed;\n\n    &--right-side,\n    &--left-side {\n      top: 0;\n      height: 100%;\n    }\n\n    &--right-side {\n      right: 0;\n      left: unset;\n    }\n\n    &--left-side {\n      right: unset;\n      left: 0;\n    }\n\n    &--bottom-side,\n    &--top-side {\n      left: 0;\n      width: 100%;\n    }\n\n    &--bottom-side {\n      bottom: 0;\n    }\n\n    &--top-side {\n      top: 0;\n    }\n\n    &__header,\n    &__body,\n    &__footer {\n      overflow: auto;\n    }\n\n    &__body {\n      position: relative;\n    }\n  }\n\n  .overlay-enter-active,\n  .overlay-leave-active {\n    animation: overlay-transition;\n  }\n\n  .overlay-leave-active {\n    animation-direction: reverse;\n  }\n\n  .slide-right-enter-active,\n  .slide-right-leave-active {\n    animation: slide-right;\n  }\n\n  .slide-right-leave-active {\n    animation-direction: reverse;\n  }\n\n  .slide-left-enter-active,\n  .slide-left-leave-active {\n    animation: slide-left;\n  }\n\n  .slide-left-leave-active {\n    animation-direction: reverse;\n  }\n\n  .slide-top-enter-active,\n  .slide-top-leave-active {\n    animation: slide-left;\n  }\n\n  .slide-top-leave-active {\n    animation-direction: reverse;\n  }\n\n  .slide-top-enter-active,\n  .slide-top-leave-active {\n    animation: slide-top;\n  }\n\n  .slide-top-leave-active {\n    animation-direction: reverse;\n  }\n\n  .slide-bottom-enter-active,\n  .slide-bottom-leave-active {\n    animation: slide-bottom;\n  }\n\n  .slide-bottom-leave-active {\n    animation-direction: reverse;\n  }\n\n  @keyframes slide-right {\n    0% {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slide-left {\n    0% {\n      transform: translateX(-100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slide-bottom {\n    0% {\n      transform: translateY(100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slide-top {\n    0% {\n      transform: translateY(-100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes slide-top {\n    0% {\n      transform: translateY(-100%);\n      opacity: 0;\n    }\n    100% {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n\n  @keyframes overlay-transition {\n    0% {\n      opacity: 0;\n    }\n    100% {\n      opacity: var(--overlay-opacity);\n    }\n  }\n}\n</style>\n","import { Plugin } from 'vue';\nimport SidePanel from './components/SidePanel.vue';\n\nexport default {\n  install(app) {\n    app.component('VueSidePanel', SidePanel);\n  },\n} as Plugin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}