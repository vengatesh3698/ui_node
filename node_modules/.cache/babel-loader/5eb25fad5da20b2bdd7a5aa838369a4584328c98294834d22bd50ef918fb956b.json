{"ast":null,"code":"import { _ as _sfc_main } from \"./VaMessageList.vue_vue_type_script_lang-b4a92f27.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeStyle, Fragment, renderList, createBlock, createCommentVNode, createTextVNode, toDisplayString } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaMessageList_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  return _ctx.messages.length ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-message-list\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.messages, (message, index) => {\n    return openBlock(), createElementBlock(\"div\", {\n      key: index,\n      class: \"va-message-list__message\"\n    }, [_ctx.hasError ? (openBlock(), createBlock(_component_va_icon, {\n      key: 0,\n      class: \"va-message-list__icon\",\n      name: \"va-warning\",\n      size: 16\n    })) : createCommentVNode(\"\", true), createTextVNode(toDisplayString(message), 1)]);\n  }), 128))], 4)) : createCommentVNode(\"\", true);\n}\nconst _VaMessageList = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaMessageList as _ };","map":{"version":3,"names":["resolveComponent","createElementBlock","key","class","style","normalizeStyle","_ctx","computedStyle","openBlock","Fragment","renderList","messages","message","index","hasError","createBlock","_component_va_icon","name","size"],"sources":["../../../../../../../src/components/va-input/components/VaMessageList/VaMessageList.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      <va-icon\n        v-if=\"hasError\"\n        class=\"va-message-list__icon\"\n        name=\"va-warning\"\n        :size=\"16\"\n      />{{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\n\nimport { useColors } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n    hasError: { type: Boolean, default: false },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index.scss\";\n\n.va-message-list {\n  margin-top: var(--va-message-list-margin-top);\n  color: var(--va-message-list-color);\n\n  &__message {\n    display: flex;\n    vertical-align: var(--va-message-list-vertical-align);\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n\n  &__icon {\n    margin-right: var(--va-message-list-icon-margin-right);\n  }\n}\n</style>\n"],"mappings":";;;;;6BAEmBA,gBAAA,CAAM;2CACE,GAAAC,kBAAA;IACtBC,GAAA,EAAK;IAAAC,KAAA;IAAAC,KAAA,EAAAC,cAAA,CAENC,IAAA,CAWMC,aAAA;EAAA,KAAAC,SAAA,CATE,IAAK,GAAAP,kBAAA,CAAAQ,QAAA,QAAAC,UAAA,CAAAJ,IAAA,CAAAK,QAAA,GAAAC,OAAA,EAAAC,KAAA;IACN,OAAAL,SAAA,IAA2BP,kBAAA;MAAAC,GAAA,EAAAW,KAAA;MAGxBV,KAAA;IAAA,IAAAG,IAAA,CAAAQ,QAAA,IAAAN,SAAA,IACuBO,WAAA,CAAAC,kBAAA;MAC7Bd,GAAA,EAAI;MACHC,KAAA,EAAM;MAAAc,IAAA;MAAAC,IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}