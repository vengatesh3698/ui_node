{"ast":null,"code":"import { _ as _sfc_main } from \"./VaDatePicker.vue_vue_type_script_lang-31410403.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createVNode, mergeProps, createSlots, renderList, withCtx, renderSlot, normalizeProps, guardReactiveProps, createElementVNode, createBlock, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaDatePicker_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-date-picker__picker-wrapper\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_date_picker_header = resolveComponent(\"va-date-picker-header\");\n  const _component_va_day_picker = resolveComponent(\"va-day-picker\");\n  const _component_va_month_picker = resolveComponent(\"va-month-picker\");\n  const _component_va_year_picker = resolveComponent(\"va-year-picker\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-date-picker\", _ctx.classComputed]),\n    style: normalizeStyle(_ctx.styleComputed)\n  }, [createVNode(_component_va_date_picker_header, mergeProps(_ctx.headerProps, {\n    view: _ctx.syncView,\n    \"onUpdate:view\": _cache[0] || (_cache[0] = $event => _ctx.syncView = $event),\n    textColor: _ctx.textColorComputed\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"textColor\"]), createElementVNode(\"div\", _hoisted_1, [_ctx.syncView.type === \"day\" ? (openBlock(), createBlock(_component_va_day_picker, mergeProps({\n    key: 0,\n    ref: \"currentPicker\"\n  }, _ctx.dayPickerProps, {\n    \"model-value\": _ctx.valueComputed,\n    view: _ctx.syncView,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"day\"),\n    \"onUpdate:modelValue\": _ctx.onDayModelValueUpdate,\n    \"onHover:day\": _cache[1] || (_cache[1] = value => _ctx.$emit(\"hover:day\", value)),\n    \"onClick:day\": _cache[2] || (_cache[2] = value => _ctx.$emit(\"click:day\", value))\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"model-value\", \"view\", \"readonly\", \"onUpdate:modelValue\"])) : createCommentVNode(\"\", true), _ctx.syncView.type === \"month\" ? (openBlock(), createBlock(_component_va_month_picker, mergeProps({\n    key: 1,\n    ref: \"currentPicker\"\n  }, _ctx.monthPickerProps, {\n    view: _ctx.syncView,\n    \"model-value\": _ctx.valueComputed,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"month\"),\n    \"onUpdate:modelValue\": _ctx.onMonthModelValueUpdate,\n    \"onHover:month\": _cache[3] || (_cache[3] = value => _ctx.$emit(\"hover:month\", value)),\n    \"onClick:month\": _ctx.onMonthClick\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:month\"])) : createCommentVNode(\"\", true), _ctx.syncView.type === \"year\" ? (openBlock(), createBlock(_component_va_year_picker, mergeProps({\n    key: 2,\n    ref: \"currentPicker\"\n  }, _ctx.yearPickerProps, {\n    view: _ctx.syncView,\n    \"model-value\": _ctx.valueComputed,\n    readonly: _ctx.$props.disabled || _ctx.isPickerReadonly(\"year\"),\n    \"onHover:year\": _cache[4] || (_cache[4] = value => _ctx.$emit(\"hover:year\", value)),\n    \"onUpdate:modelValue\": _ctx.onYearModelValueUpdate,\n    \"onClick:year\": _ctx.onYearClick\n  }), createSlots({\n    _: 2\n  }, [renderList(_ctx.$slots, (_, name) => {\n    return {\n      name,\n      fn: withCtx(bind => [renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(bind)))])\n    };\n  })]), 1040, [\"view\", \"model-value\", \"readonly\", \"onUpdate:modelValue\", \"onClick:year\"])) : createCommentVNode(\"\", true)])], 6);\n}\nconst _VaDatePicker = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaDatePicker as _ };","map":{"version":3,"names":["resolveComponent","openBlock","createElementBlock","class","normalizeClass","_ctx","classComputed","style","normalizeStyle","styleComputed","createVNode","_component_va_date_picker_header","mergeProps","headerProps","view","syncView","_cache","$event","textColor","textColorComputed","createSlots","_","renderList","$slots","name","createElementVNode","_hoisted_1","type","createBlock","_component_va_day_picker","key","ref","dayPickerProps","valueComputed","readonly","$props","disabled","isPickerReadonly","onDayModelValueUpdate","value","$emit","createCommentVNode","_component_va_month_picker","monthPickerProps","onMonthModelValueUpdate","onMonthClick","_component_va_year_picker","yearPickerProps","onYearModelValueUpdate","onYearClick"],"sources":["../../../../../src/components/va-date-picker/VaDatePicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"styleComputed\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n      :textColor=\"textColorComputed\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useElementBackground } from '../../composables/useElementBackground'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n    const { background } = useElementBackground()\n    const { textColorComputed } = useTextColor(background)\n\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n      ...colorsToCSSVariable({\n        color: props.color,\n        'weekends-color': props.weekendsColor,\n      }, 'va-date-picker'),\n    }))\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      styleComputed,\n      currentPicker,\n      textColorComputed,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}