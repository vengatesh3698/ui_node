{"ast":null,"code":"import { defineComponent, shallowRef, ref, computed, onMounted, provide, toRef } from \"vue\";\nimport { V as VaFileUploadKey } from \"./types-8c5c5611.mjs\";\nimport { V as VaFileUploadList } from \"./VaFileUploadList/index-14850ddf.mjs\";\nimport { V as VaModal } from \"../va-modal/VaModal-e5b438bc.mjs\";\nimport { e as extractComponentProps } from \"../../utils/component-options/extract-component-options-6b96d215.mjs\";\nimport { V as VaButton } from \"../va-button/index-b0a9ef70.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useBem } from \"../../composables/useBem-10a5bc6e.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nimport { f as filterComponentProps } from \"../../utils/component-options/filter-props-9727421a.mjs\";\nconst VaFileUploadListProps = extractComponentProps(VaFileUploadList);\nconst _sfc_main = defineComponent({\n  name: \"VaFileUpload\",\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList\n  },\n  props: {\n    ...useComponentPresetProp,\n    ...VaFileUploadListProps,\n    fileTypes: {\n      type: String,\n      default: \"\"\n    },\n    dropzone: {\n      type: Boolean,\n      default: false\n    },\n    hideFileList: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    undo: {\n      type: Boolean,\n      default: false\n    },\n    undoDuration: {\n      type: Number,\n      default: 3e3\n    },\n    undoButtonText: {\n      type: String,\n      default: \"$t:undo\"\n    },\n    dropZoneText: {\n      type: String,\n      default: \"$t:dropzone\"\n    },\n    uploadButtonText: {\n      type: String,\n      default: \"$t:uploadFile\"\n    },\n    deletedFileMessage: {\n      type: String,\n      default: \"$t:fileDeleted\"\n    },\n    modelValue: {\n      type: [Object, Array],\n      default: () => []\n    },\n    type: {\n      type: String,\n      default: \"list\",\n      validator: value => [\"list\", \"gallery\", \"single\"].includes(value)\n    }\n  },\n  emits: [\"update:modelValue\", \"file-removed\", \"file-added\"],\n  setup(props, {\n    emit\n  }) {\n    const fileInputRef = shallowRef();\n    const modal = ref(false);\n    const dropzoneHighlight = ref(false);\n    const {\n      getColor,\n      shiftHSLAColor\n    } = useColors();\n    const colorComputed = computed(() => getColor(props.color));\n    const computedStyle = computed(() => ({\n      backgroundColor: props.dropzone ? shiftHSLAColor(colorComputed.value, {\n        a: dropzoneHighlight.value ? -0.82 : -0.92\n      }) : \"transparent\"\n    }));\n    const computedClasses = useBem(\"va-file-upload\", () => ({\n      dropzone: props.dropzone,\n      disabled: props.disabled\n    }));\n    const files = computed({\n      get() {\n        return Array.isArray(props.modelValue) ? props.modelValue : [props.modelValue];\n      },\n      set(files2) {\n        if (props.type === \"single\") {\n          emit(\"update:modelValue\", files2[0]);\n        } else {\n          emit(\"update:modelValue\", files2);\n        }\n      }\n    });\n    const validateFiles = files2 => files2.filter(file => {\n      const fileName = file.name || file.url;\n      if (!fileName) {\n        return false;\n      }\n      if (file.url) {\n        return true;\n      }\n      const MIMETypes = [\"audio/*\", \"video/*\", \"image/*\"];\n      const isContainedMIMEType = MIMETypes.find(t => props.fileTypes.includes(t));\n      if (isContainedMIMEType) {\n        return true;\n      }\n      const extension = fileName.substring(fileName.lastIndexOf(\".\") + 1).toLowerCase();\n      const isCorrectExt = props.fileTypes.includes(extension);\n      if (!isCorrectExt) {\n        modal.value = true;\n      }\n      return isCorrectExt;\n    });\n    const uploadFile = e => {\n      var _a, _b;\n      const f = ((_a = e.target) == null ? void 0 : _a.files) || ((_b = e.dataTransfer) == null ? void 0 : _b.files);\n      if (!f) {\n        return;\n      }\n      const validatedFiles = props.fileTypes ? validateFiles(Array.from(f)) : f;\n      files.value = props.type === \"single\" ? validatedFiles : [...files.value, ...validatedFiles];\n      emit(\"file-added\", validatedFiles);\n    };\n    const changeFieldValue = e => {\n      uploadFile(e);\n      if (fileInputRef.value) {\n        fileInputRef.value.value = \"\";\n      }\n    };\n    const removeFile = index => {\n      if (index in files.value) {\n        const removedFile = files.value[index];\n        files.value = files.value.filter((item, idx) => idx !== index);\n        emit(\"file-removed\", removedFile);\n      }\n    };\n    const removeSingleFile = () => {\n      if (files.value.length > 0) {\n        const removedFile = files.value[0];\n        files.value = [];\n        emit(\"file-removed\", removedFile);\n      }\n    };\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click();\n      }\n    };\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value);\n      }\n    });\n    const {\n      tp\n    } = useTranslation();\n    provide(VaFileUploadKey, {\n      undo: toRef(props, \"undo\"),\n      disabled: toRef(props, \"disabled\"),\n      undoDuration: toRef(props, \"undoDuration\"),\n      undoButtonText: computed(() => tp(props.undoButtonText)),\n      deletedFileMessage: computed(() => tp(props.deletedFileMessage))\n    });\n    return {\n      fileUploadListProps: filterComponentProps(VaFileUploadListProps),\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      computedClasses,\n      files,\n      tp,\n      uploadFile,\n      changeFieldValue,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaFileUpload.css';","map":{"version":3,"names":["VaFileUploadListProps","extractComponentProps","VaFileUploadList","_sfc_main","defineComponent","name","components","VaModal","VaButton","props","useComponentPresetProp","fileTypes","type","String","default","dropzone","Boolean","hideFileList","color","disabled","undo","undoDuration","Number","undoButtonText","dropZoneText","uploadButtonText","deletedFileMessage","modelValue","Object","Array","validator","value","includes","emits","setup","emit","fileInputRef","shallowRef","modal","ref","dropzoneHighlight","getColor","shiftHSLAColor","useColors","colorComputed","computed","computedStyle","backgroundColor","a","computedClasses","useBem","files","get","isArray","set","files2","validateFiles","filter","file","fileName","url","MIMETypes","isContainedMIMEType","find","t","extension","substring","lastIndexOf","toLowerCase","isCorrectExt","uploadFile","e","f","_a","target","_b","dataTransfer","validatedFiles","from","changeFieldValue","removeFile","index","removedFile","item","idx","removeSingleFile","length","callFileDialogue","click","onMounted","tp","useTranslation","provide","VaFileUploadKey","toRef","fileUploadListProps","filterComponentProps"],"sources":["../../../../../src/components/va-file-upload/VaFileUpload.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"computedClasses\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <div class=\"va-file-upload__field\">\n        <div\n          v-if=\"dropzone\"\n          class=\"va-file-upload__field__text\"\n        >\n          {{ tp(dropZoneText) }}\n        </div>\n        <va-button\n          class=\"va-file-upload__field__button\"\n          :disabled=\"disabled\"\n          :aria-disabled=\"disabled\"\n          :color=\"colorComputed\"\n          :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : undefined }\"\n          @change=\"changeFieldValue\"\n          @click=\"callFileDialogue\"\n        >\n          {{ tp(uploadButtonText) }}\n        </va-button>\n      </div>\n    </slot>\n\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :tabindex=\"-1\"\n      aria-hidden=\"true\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length && !$props.hideFileList\"\n      v-bind=\"fileUploadListProps\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, toRef, shallowRef, provide, PropType } from 'vue'\n\nimport { useColors, useComponentPresetProp, useBem, useTranslation } from '../../composables'\n\nimport { VaFileUploadKey, VaFile } from './types'\n\nimport { VaButton, VaModal } from '../index'\nimport { VaFileUploadList } from './VaFileUploadList'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nconst VaFileUploadListProps = extractComponentProps(VaFileUploadList)\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    ...useComponentPresetProp,\n    ...VaFileUploadListProps,\n    fileTypes: { type: String, default: '' },\n    dropzone: { type: Boolean, default: false },\n    hideFileList: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    disabled: { type: Boolean, default: false },\n    undo: { type: Boolean, default: false },\n    undoDuration: { type: Number, default: 3000 },\n    undoButtonText: { type: String, default: '$t:undo' },\n    dropZoneText: { type: String, default: '$t:dropzone' },\n    uploadButtonText: { type: String, default: '$t:uploadFile' },\n    deletedFileMessage: { type: String, default: '$t:fileDeleted' },\n    modelValue: {\n      type: [Object, Array] as PropType<VaFile | VaFile[]>,\n      default: () => [],\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue', 'file-removed', 'file-added'],\n\n  setup (props, { emit }) {\n    const fileInputRef = shallowRef<HTMLInputElement>()\n\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n\n    const { getColor, shiftHSLAColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({\n      backgroundColor: props.dropzone\n        ? shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 })\n        : 'transparent',\n    }))\n\n    const computedClasses = useBem('va-file-upload', () => ({\n      dropzone: props.dropzone,\n      disabled: props.disabled,\n    }))\n\n    const files = computed<VaFile[]>({\n      get () { return Array.isArray(props.modelValue) ? props.modelValue : [props.modelValue] },\n      set (files) {\n        if (props.type === 'single') {\n          emit('update:modelValue', files[0])\n        } else {\n          emit('update:modelValue', files)\n        }\n      },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extension = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extension)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      const validatedFiles = props.fileTypes ? validateFiles(Array.from(f)) : f\n\n      files.value = props.type === 'single' ? (validatedFiles as VaFile[]) : [...files.value, ...validatedFiles]\n\n      emit('file-added', validatedFiles)\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => {\n      if (index in files.value) {\n        const removedFile = files.value[index]\n        files.value = files.value.filter((item, idx) => idx !== index)\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const removeSingleFile = () => {\n      if (files.value.length > 0) {\n        const removedFile = files.value[0]\n        files.value = []\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    const { tp } = useTranslation()\n\n    provide(VaFileUploadKey, {\n      undo: toRef(props, 'undo'),\n      disabled: toRef(props, 'disabled'),\n      undoDuration: toRef(props, 'undoDuration'),\n      undoButtonText: computed(() => tp(props.undoButtonText)),\n      deletedFileMessage: computed(() => tp(props.deletedFileMessage)),\n    })\n\n    return {\n      fileUploadListProps: filterComponentProps(VaFileUploadListProps),\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      computedClasses,\n      files,\n      tp,\n      uploadFile,\n      changeFieldValue,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &__field {\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    position: relative;\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: 10;\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: hidden;\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &--disabled {\n    .va-file-upload__field__input {\n      cursor: default;\n\n      &::-webkit-file-upload-button {\n        cursor: inherit;\n      }\n    }\n  }\n\n  .va-button {\n    @include keyboard-focus-outline($offset: -2px);\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}