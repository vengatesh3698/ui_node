{"ast":null,"code":"import { u as useEvent } from \"../../../composables/useEvent-d1ae925d.mjs\";\nconst isTyping = e => {\n  const target = e.target;\n  if (!(target.tagName === \"INPUT\" || target.tagName === \"TEXTAREA\")) {\n    return false;\n  }\n  if (target.attributes.getNamedItem(\"readonly\")) {\n    return false;\n  }\n  return true;\n};\nconst openKey = [\"ArrowDown\", \"ArrowUp\", \"Enter\", \"Space\"];\nconst useKeyboardNavigation = (anchorRef, isOpened) => {\n  useEvent(\"keydown\", e => {\n    if (isTyping(e)) {\n      return;\n    }\n    if (!openKey.includes(e.key)) {\n      return;\n    }\n    isOpened.value = !isOpened.value;\n    e.preventDefault();\n  }, anchorRef);\n  useEvent(\"keydown\", e => {\n    if (e.key === \"Escape\" && isOpened.value) {\n      isOpened.value = false;\n      e.preventDefault();\n    }\n  }, true);\n};\nconst useMouseNavigation = (anchorRef, listeners) => {\n  useEvent([\"click\", \"contextmenu\", \"dblclick\"], e => {\n    if (isTyping(e)) {\n      return;\n    }\n    listeners[e.type](e);\n  }, anchorRef);\n  useEvent([\"mouseleave\", \"mouseenter\"], e => {\n    listeners[e.type](e);\n  }, anchorRef);\n};\nexport { useMouseNavigation as a, useKeyboardNavigation as u };","map":{"version":3,"names":["isTyping","e","target","tagName","attributes","getNamedItem","openKey","useKeyboardNavigation","anchorRef","isOpened","useEvent","includes","key","value","preventDefault","useMouseNavigation","listeners","type"],"sources":["../../../../../../src/components/va-dropdown/hooks/useDropdownNavigation.ts"],"sourcesContent":["import { Ref } from 'vue'\nimport { useEvent } from '../../../composables'\n\nconst isTyping = (e: Event) => {\n  const target = e.target as HTMLElement\n  if (!(target.tagName === 'INPUT' || target.tagName === 'TEXTAREA')) { return false }\n  if (target.attributes.getNamedItem('readonly')) { return false }\n  return true\n}\n\nconst openKey = ['ArrowDown', 'ArrowUp', 'Enter', 'Space']\n\nexport const useKeyboardNavigation = (anchorRef: Ref<HTMLElement | undefined>, isOpened: Ref<boolean>) => {\n  useEvent('keydown', (e) => {\n    if (isTyping(e)) { return }\n\n    if (!openKey.includes(e.key)) { return }\n\n    isOpened.value = !isOpened.value\n    e.preventDefault()\n  }, anchorRef)\n\n  useEvent('keydown', (e) => {\n    if (e.key === 'Escape' && isOpened.value) {\n      isOpened.value = false\n      e.preventDefault()\n    }\n  }, true)\n}\n\ntype MouseEventName = 'mouseleave' | 'mouseenter' | 'click' | 'dblclick' | 'contextmenu'\nexport const useMouseNavigation = (\n  anchorRef: Ref<HTMLElement | undefined>,\n  listeners: Record<MouseEventName, (e: MouseEvent) => any>,\n) => {\n  useEvent(['click', 'contextmenu', 'dblclick'], (e: MouseEvent) => {\n    if (isTyping(e)) { return }\n\n    listeners[e.type as MouseEventName](e)\n  }, anchorRef)\n\n  useEvent(['mouseleave', 'mouseenter'], (e: MouseEvent) => {\n    listeners[e.type as MouseEventName](e)\n  }, anchorRef)\n}\n"],"mappings":";AAGA,MAAMA,QAAA,GAAYC,CAAA,IAAa;EAC7B,MAAMC,MAAA,GAASD,CAAA,CAAEC,MAAA;EACjB,IAAI,EAAEA,MAAA,CAAOC,OAAA,KAAY,WAAWD,MAAA,CAAOC,OAAA,KAAY,aAAa;IAAS;EAAM;EACnF,IAAID,MAAA,CAAOE,UAAA,CAAWC,YAAA,CAAa,UAAU,GAAG;IAAS;EAAM;EACxD;AACT;AAEA,MAAMC,OAAA,GAAU,CAAC,aAAa,WAAW,SAAS,OAAO;AAE5C,MAAAC,qBAAA,GAAwBA,CAACC,SAAA,EAAyCC,QAAA,KAA2B;EAC/FC,QAAA,YAAYT,CAAA,IAAM;IACrB,IAAAD,QAAA,CAASC,CAAC,GAAG;MAAE;IAAO;IAE1B,IAAI,CAACK,OAAA,CAAQK,QAAA,CAASV,CAAA,CAAEW,GAAG,GAAG;MAAE;IAAO;IAE9BH,QAAA,CAAAI,KAAA,GAAQ,CAACJ,QAAA,CAASI,KAAA;IAC3BZ,CAAA,CAAEa,cAAA,CAAe;EAAA,GAChBN,SAAS;EAEHE,QAAA,YAAYT,CAAA,IAAM;IACzB,IAAIA,CAAA,CAAEW,GAAA,KAAQ,YAAYH,QAAA,CAASI,KAAA,EAAO;MACxCJ,QAAA,CAASI,KAAA,GAAQ;MACjBZ,CAAA,CAAEa,cAAA,CAAe;IACnB;EAAA,GACC,IAAI;AACT;AAGa,MAAAC,kBAAA,GAAqBA,CAChCP,SAAA,EACAQ,SAAA,KACG;EACHN,QAAA,CAAS,CAAC,SAAS,eAAe,UAAU,GAAIT,CAAA,IAAkB;IAC5D,IAAAD,QAAA,CAASC,CAAC,GAAG;MAAE;IAAO;IAEhBe,SAAA,CAAAf,CAAA,CAAEgB,IAAsB,EAAEhB,CAAC;EAAA,GACpCO,SAAS;EAEZE,QAAA,CAAS,CAAC,cAAc,YAAY,GAAIT,CAAA,IAAkB;IAC9Ce,SAAA,CAAAf,CAAA,CAAEgB,IAAsB,EAAEhB,CAAC;EAAA,GACpCO,SAAS;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}