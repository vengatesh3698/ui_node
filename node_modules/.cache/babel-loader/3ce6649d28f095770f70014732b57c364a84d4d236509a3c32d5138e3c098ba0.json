{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { defineComponent, shallowRef, ref, computed, toRefs, watch, nextTick } from \"vue\";\nimport { p as pick, b as clamp } from \"../../../vendor-fff696df.mjs\";\nimport { i as isDev } from \"../../utils/env-da4fbb25.mjs\";\nimport { s as setPaginationRange } from \"./setPaginationRange-e3c32011.mjs\";\nimport { V as VaButton } from \"../va-button/index-b0a9ef70.mjs\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useArrayRefs } from \"../../composables/useArrayRefs-26d94ed7.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useBem } from \"../../composables/useBem-10a5bc6e.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaPagination\",\n  components: {\n    VaButton\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Number,\n      default: 1\n    },\n    visiblePages: {\n      type: Number,\n      default: 0\n    },\n    pages: {\n      type: Number,\n      default: 0\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    size: {\n      type: String,\n      default: \"medium\",\n      validator: v => [\"small\", \"medium\", \"large\"].includes(v)\n    },\n    boundaryLinks: {\n      type: Boolean,\n      default: true\n    },\n    boundaryNumbers: {\n      type: Boolean,\n      default: false\n    },\n    directionLinks: {\n      type: Boolean,\n      default: true\n    },\n    input: {\n      type: Boolean,\n      default: false\n    },\n    hideOnSinglePage: {\n      type: Boolean,\n      default: false\n    },\n    total: {\n      type: Number,\n      default: null\n    },\n    pageSize: {\n      type: Number,\n      default: null\n    },\n    boundaryIconLeft: {\n      type: String,\n      default: \"va-arrow-first\"\n    },\n    boundaryIconRight: {\n      type: String,\n      default: \"va-arrow-last\"\n    },\n    directionIconLeft: {\n      type: String,\n      default: \"va-arrow-left\"\n    },\n    directionIconRight: {\n      type: String,\n      default: \"va-arrow-right\"\n    },\n    gapped: {\n      type: Boolean,\n      default: false\n    },\n    borderColor: {\n      type: String,\n      default: \"\"\n    },\n    rounded: {\n      type: Boolean,\n      default: false\n    },\n    activePageColor: {\n      type: String,\n      default: \"\"\n    },\n    buttonsPreset: {\n      type: String,\n      default: \"primary\"\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:pagination\"\n    },\n    ariaGoToTheFirstPageLabel: {\n      type: String,\n      default: \"$t:goToTheFirstPage\"\n    },\n    ariaGoToPreviousPageLabel: {\n      type: String,\n      default: \"$t:goToPreviousPage\"\n    },\n    ariaGoToSpecificPageLabel: {\n      type: String,\n      default: \"$t:goToSpecificPage\"\n    },\n    ariaGoToSpecificPageInputLabel: {\n      type: String,\n      default: \"$t:goToSpecificPageInput\"\n    },\n    ariaGoToNextPageLabel: {\n      type: String,\n      default: \"$t:goNextPage\"\n    },\n    ariaGoToLastPageLabel: {\n      type: String,\n      default: \"$t:goLastPage\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const htmlInput = shallowRef();\n    const inputValue = ref(\"\");\n    const usesTotal = computed(() => !!((props.total || props.total === 0) && props.pageSize));\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const currentValue = computed({\n      get: () => usesTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: value => {\n        valueComputed.value = value;\n      }\n    });\n    const paginationRange = computed(() => {\n      const {\n        visiblePages,\n        total,\n        pageSize,\n        boundaryNumbers,\n        pages\n      } = props;\n      const value = currentValue.value || 1;\n      const totalPages = usesTotal.value ? Math.ceil(total / pageSize) : pages;\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers);\n    });\n    const lastPage = computed(() => usesTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : +props.pages);\n    const isLastPageNotVisible = computed(() => !!props.visiblePages && lastPage.value > props.visiblePages || props.input);\n    const showBoundaryLinks = computed(() => {\n      const {\n        boundaryLinks,\n        boundaryNumbers\n      } = props;\n      return isLastPageNotVisible.value && boundaryLinks && !boundaryNumbers;\n    });\n    const showDirectionLinks = computed(() => isLastPageNotVisible.value && props.directionLinks);\n    const showPagination = computed(() => lastPage.value > 1 || !props.hideOnSinglePage && lastPage.value <= 1);\n    const focusInput = () => {\n      inputValue.value = String(currentValue.value);\n      nextTick(() => {\n        var _a;\n        return (_a = htmlInput.value) == null ? void 0 : _a.setSelectionRange(0, htmlInput.value.value.length);\n      });\n    };\n    const {\n      setItemRefByIndex,\n      itemRefs\n    } = useArrayRefs();\n    const onUserInput = pageNum => {\n      var _a;\n      if (pageNum === \"...\" || pageNum === currentValue.value) {\n        return;\n      }\n      const limitedPageNum = clamp(pageNum, 1, lastPage.value);\n      currentValue.value = usesTotal.value ? (limitedPageNum - 1) * props.pageSize + 1 : limitedPageNum;\n      (_a = itemRefs.value[pageNum - 1]) == null ? void 0 : _a.focus();\n    };\n    const resetInput = () => {\n      var _a;\n      inputValue.value = \"\";\n      (_a = htmlInput.value) == null ? void 0 : _a.blur();\n    };\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput();\n      }\n      if (!inputValue.value.length) {\n        return;\n      }\n      let pageNum = Number.parseInt(inputValue.value);\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1;\n          break;\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value;\n          break;\n        case isNaN(pageNum):\n          pageNum = currentValue.value;\n          break;\n      }\n      onUserInput(pageNum);\n      resetInput();\n    };\n    const {\n      getColor,\n      colorToRgba\n    } = useColors();\n    const inputBorderColorComputed = computed(() => {\n      const {\n        color,\n        buttonsPreset\n      } = toRefs(props);\n      if (!color.value) {\n        return \"transparent\";\n      }\n      switch (buttonsPreset.value) {\n        case \"default\":\n          return getColor(color.value);\n        case void 0:\n        case \"primary\":\n          return colorToRgba(getColor(color.value), 0.1);\n        default:\n          return \"transparent\";\n      }\n    });\n    const inputStyleComputed = computed(() => ({\n      cursor: \"default\",\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n      borderColor: inputBorderColorComputed.value\n    }));\n    watch([usesTotal, () => props.pages], () => {\n      if (isDev && usesTotal.value && props.pages) {\n        throw new Error(\"Please, use either `total` and `page-size` props, or `pages`.\");\n      }\n    });\n    const inputAttributesComputed = computed(() => ({\n      disabled: props.disabled,\n      placeholder: `${currentValue.value}/${lastPage.value}`\n    }));\n    const buttonPropsComputed = computed(() => ({\n      size: props.size,\n      preset: props.buttonsPreset,\n      color: props.color,\n      borderColor: props.borderColor,\n      round: props.rounded\n    }));\n    const currentPageButtonProps = computed(() => ({\n      preset: props.buttonsPreset === \"default\" ? \"primary\" : \"default\",\n      color: props.activePageColor || props.color\n    }));\n    const getPageButtonProps = n => {\n      if (!isNaN(+n) && n === currentValue.value) {\n        return Object.assign({}, buttonPropsComputed.value, currentPageButtonProps.value);\n      }\n      return buttonPropsComputed.value;\n    };\n    const isStandAloneInput = computed(() => props.input && !props.boundaryLinks && !props.directionLinks);\n    const inputClassComputed = useBem(\"va-pagination__input\", () => ({\n      sm: props.size === \"small\" && isStandAloneInput.value,\n      md: props.size === \"medium\" && isStandAloneInput.value,\n      lg: props.size === \"large\" && isStandAloneInput.value,\n      auto: !isStandAloneInput.value\n    }));\n    const classComputed = useBem(\"va-pagination\", () => ({\n      ...pick(props, [\"gapped\", \"rounded\", \"disabled\"]),\n      bordered: !!props.borderColor\n    }));\n    const goNextPage = () => onUserInput(currentValue.value + 1);\n    const goPrevPage = () => onUserInput(currentValue.value - 1);\n    return {\n      ...useTranslation(),\n      getPageButtonProps,\n      inputClassComputed,\n      classComputed,\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n      inputAttributesComputed,\n      goNextPage,\n      goPrevPage,\n      buttonPropsComputed,\n      htmlInput,\n      setItemRefByIndex\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaPagination.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaButton","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","Number","default","visiblePages","pages","disabled","Boolean","color","String","size","validator","v","includes","boundaryLinks","boundaryNumbers","directionLinks","input","hideOnSinglePage","total","pageSize","boundaryIconLeft","boundaryIconRight","directionIconLeft","directionIconRight","gapped","borderColor","rounded","activePageColor","buttonsPreset","ariaLabel","ariaGoToTheFirstPageLabel","ariaGoToPreviousPageLabel","ariaGoToSpecificPageLabel","ariaGoToSpecificPageInputLabel","ariaGoToNextPageLabel","ariaGoToLastPageLabel","setup","emit","htmlInput","shallowRef","inputValue","ref","usesTotal","computed","valueComputed","useStateful","currentValue","get","value","Math","ceil","set","paginationRange","totalPages","setPaginationRange","lastPage","isLastPageNotVisible","showBoundaryLinks","showDirectionLinks","showPagination","focusInput","nextTick","_a","setSelectionRange","length","setItemRefByIndex","itemRefs","useArrayRefs","onUserInput","pageNum","limitedPageNum","clamp","focus","resetInput","blur","changeValue","parseInt","isNaN","getColor","colorToRgba","useColors","inputBorderColorComputed","toRefs","inputStyleComputed","cursor","opacity","watch","isDev","Error","inputAttributesComputed","placeholder","buttonPropsComputed","preset","round","currentPageButtonProps","getPageButtonProps","n","Object","assign","isStandAloneInput","inputClassComputed","useBem","sm","md","lg","auto","classComputed","pick","bordered","goNextPage","goPrevPage","useTranslation"],"sources":["../../../../../src/components/va-pagination/VaPagination.vue"],"sourcesContent":["<template>\n  <nav\n    v-if=\"showPagination\"\n    class=\"va-pagination\"\n    :aria-label=\"tp($props.ariaLabel)\"\n    :class=\"classComputed\"\n    @keydown.left.stop=\"goPrevPage\"\n    @keydown.right.stop=\"goNextPage\"\n    @keydown.up.stop=\"goPrevPage\"\n    @keydown.down.stop=\"goNextPage\"\n  >\n    <slot\n      v-if=\"showBoundaryLinks\" name=\"firstPageLink\"\n      v-bind=\"{ onClick: () => onUserInput(1), disabled: $props.disabled || currentValue === 1 }\"\n    >\n      <va-button\n        v-if=\"showBoundaryLinks\"\n        :aria-label=\"tp($props.ariaGoToTheFirstPageLabel)\"\n        :disabled=\"$props.disabled || currentValue === 1\"\n        :icon=\"$props.boundaryIconLeft\"\n        v-bind=\"buttonPropsComputed\"\n        @click=\"onUserInput(1)\"\n      />\n    </slot>\n    <slot\n      v-if=\"showDirectionLinks\" name=\"prevPageLink\"\n      v-bind=\"{ onClick: goPrevPage, disabled: $props.disabled || currentValue === 1 }\"\n    >\n      <va-button\n        v-if=\"showDirectionLinks\"\n        :aria-label=\"tp($props.ariaGoToPreviousPageLabel)\"\n        :disabled=\"$props.disabled || currentValue === 1\"\n        :icon=\"$props.directionIconLeft\"\n        v-bind=\"buttonPropsComputed\"\n        @click=\"goPrevPage\"\n      />\n    </slot>\n\n    <slot v-if=\"!$props.input\">\n      <va-button\n        v-for=\"(n, i) in paginationRange\" :key=\"i\"\n        :ref=\"setItemRefByIndex(i)\"\n        :class=\"{ 'va-button--ellipsis': n === '...', 'va-button--current': n === currentValue}\"\n        :aria-label=\"tp($props.ariaGoToSpecificPageLabel, { page: n })\"\n        :aria-current=\"n === currentValue\"\n        :disabled=\"$props.disabled || n === '...'\"\n        v-bind=\"getPageButtonProps(n)\"\n        @click=\"onUserInput(n)\"\n      >\n        {{ n }}\n      </va-button>\n    </slot>\n    <input\n      v-else\n      v-model=\"inputValue\"\n      ref=\"htmlInput\"\n      class=\"va-pagination__input va-button\"\n      :aria-label=\"tp($props.ariaGoToSpecificPageInputLabel)\"\n      :style=\"inputStyleComputed\"\n      :class=\"inputClassComputed\"\n      v-bind=\"inputAttributesComputed\"\n      @keydown.enter=\"changeValue\"\n      @focus=\"focusInput\"\n      @blur=\"changeValue\"\n    />\n\n    <slot\n      v-if=\"showDirectionLinks\" name=\"nextPageLink\"\n      v-bind=\"{ onClick: goNextPage, disabled: $props.disabled || currentValue === lastPage }\"\n    >\n      <va-button\n        v-if=\"showDirectionLinks\"\n        :aria-label=\"tp($props.ariaGoToNextPageLabel)\"\n        :disabled=\"$props.disabled || currentValue === lastPage\"\n        :icon=\"$props.directionIconRight\"\n        v-bind=\"buttonPropsComputed\"\n        @click=\"goNextPage\"\n      />\n    </slot>\n    <slot\n      v-if=\"showBoundaryLinks\" name=\"lastPageLink\"\n      v-bind=\"{ onClick: () => onUserInput(lastPage), disabled: $props.disabled || currentValue === lastPage }\"\n    >\n      <va-button\n        v-if=\"showBoundaryLinks\"\n        :aria-label=\"tp($props.ariaGoToLastPageLabel)\"\n        :disabled=\"$props.disabled || currentValue === lastPage\"\n        :icon=\"$props.boundaryIconRight\"\n        v-bind=\"buttonPropsComputed\"\n        @click=\"onUserInput(lastPage)\"\n      />\n    </slot>\n  </nav>\n</template>\n\n<script lang=\"ts\">\nimport {\n  defineComponent,\n  PropType,\n  ref,\n  toRefs,\n  shallowRef,\n  computed,\n  watch,\n  nextTick,\n  WritableComputedRef,\n} from 'vue'\nimport clamp from 'lodash/clamp.js'\nimport pick from 'lodash/pick.js'\n\nimport { isDev } from '../../utils/env'\nimport {\n  useBem,\n  useComponentPresetProp,\n  useColors,\n  useStateful, useStatefulProps, useStatefulEmits,\n  useArrayRefs,\n  useTranslation,\n} from '../../composables'\nimport { setPaginationRange } from './setPaginationRange'\n\nimport { VaButton } from '../va-button'\n\nexport default defineComponent({\n  name: 'VaPagination',\n  components: { VaButton },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Number, default: 1 },\n    visiblePages: { type: Number, default: 0 },\n    pages: { type: Number, default: 0 },\n    disabled: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: String as PropType<'small' | 'medium' | 'large'>,\n      default: 'medium',\n      validator: (v: string) => ['small', 'medium', 'large'].includes(v),\n    },\n    boundaryLinks: { type: Boolean, default: true },\n    boundaryNumbers: { type: Boolean, default: false },\n    directionLinks: { type: Boolean, default: true },\n    input: { type: Boolean, default: false },\n    hideOnSinglePage: { type: Boolean, default: false },\n    total: { type: Number, default: null },\n    pageSize: { type: Number, default: null },\n    boundaryIconLeft: { type: String, default: 'va-arrow-first' },\n    boundaryIconRight: { type: String, default: 'va-arrow-last' },\n    directionIconLeft: { type: String, default: 'va-arrow-left' },\n    directionIconRight: { type: String, default: 'va-arrow-right' },\n    gapped: { type: Boolean, default: false },\n    borderColor: { type: String, default: '' },\n    rounded: { type: Boolean, default: false },\n    activePageColor: { type: String, default: '' },\n    buttonsPreset: { type: String, default: 'primary' },\n\n    ariaLabel: { type: String, default: '$t:pagination' },\n    ariaGoToTheFirstPageLabel: { type: String, default: '$t:goToTheFirstPage' },\n    ariaGoToPreviousPageLabel: { type: String, default: '$t:goToPreviousPage' },\n    ariaGoToSpecificPageLabel: { type: String, default: '$t:goToSpecificPage' },\n    ariaGoToSpecificPageInputLabel: { type: String, default: '$t:goToSpecificPageInput' },\n    ariaGoToNextPageLabel: { type: String, default: '$t:goNextPage' },\n    ariaGoToLastPageLabel: { type: String, default: '$t:goLastPage' },\n  },\n\n  setup (props, { emit }) {\n    const htmlInput = shallowRef<HTMLInputElement>()\n\n    const inputValue = ref('')\n\n    const usesTotal = computed(() => !!((props.total || props.total === 0) && props.pageSize))\n\n    const { valueComputed }: { valueComputed: WritableComputedRef<number> } = useStateful(props, emit)\n\n    const currentValue = computed({\n      get: () => usesTotal.value ? Math.ceil(valueComputed.value / props.pageSize) || 1 : valueComputed.value,\n      set: (value) => { valueComputed.value = value },\n    })\n\n    const paginationRange = computed(() => {\n      const { visiblePages, total, pageSize, boundaryNumbers, pages } = props\n\n      const value = currentValue.value || 1\n      const totalPages = usesTotal.value ? Math.ceil(total / pageSize) : pages\n\n      return setPaginationRange(value, visiblePages, totalPages, boundaryNumbers)\n    })\n\n    const lastPage = computed(() => usesTotal.value ? Math.ceil(props.total / props.pageSize) || 1 : +props.pages)\n\n    const isLastPageNotVisible = computed(() => ((!!props.visiblePages && lastPage.value > props.visiblePages)) || props.input)\n\n    const showBoundaryLinks = computed(() => {\n      const { boundaryLinks, boundaryNumbers } = props\n\n      return isLastPageNotVisible.value && boundaryLinks && !boundaryNumbers\n    })\n\n    const showDirectionLinks = computed(() => isLastPageNotVisible.value && props.directionLinks)\n\n    const showPagination = computed(() => lastPage.value > 1 || (!props.hideOnSinglePage && lastPage.value <= 1))\n\n    const focusInput = () => {\n      inputValue.value = String(currentValue.value)\n\n      nextTick(() => htmlInput.value?.setSelectionRange(0, htmlInput.value.value.length))\n    }\n\n    const { setItemRefByIndex, itemRefs } = useArrayRefs()\n    const onUserInput = (pageNum: number | '...') => {\n      if (pageNum === '...' || pageNum === currentValue.value) { return }\n\n      const limitedPageNum = clamp(pageNum, 1, lastPage.value)\n      currentValue.value = usesTotal.value\n        ? (limitedPageNum - 1) * props.pageSize + 1\n        : limitedPageNum\n\n      itemRefs.value[pageNum - 1]?.focus()\n    }\n\n    const resetInput = () => {\n      inputValue.value = ''\n      htmlInput.value?.blur()\n    }\n\n    const changeValue = () => {\n      if (+inputValue.value === currentValue.value) {\n        resetInput()\n      }\n\n      if (!inputValue.value.length) { return }\n\n      let pageNum = Number.parseInt(inputValue.value)\n\n      switch (true) {\n        case pageNum < 1:\n          pageNum = 1; break\n        case pageNum > lastPage.value:\n          pageNum = lastPage.value; break\n        case isNaN(pageNum):\n          pageNum = currentValue.value; break\n        default: break\n      }\n\n      onUserInput(pageNum)\n      resetInput()\n    }\n\n    const { getColor, colorToRgba } = useColors()\n\n    const inputBorderColorComputed = computed(() => {\n      const { color, buttonsPreset } = toRefs(props)\n\n      if (!color.value) { return 'transparent' }\n\n      switch (buttonsPreset.value) {\n        case 'default':\n          return getColor(color.value)\n        case undefined:\n        case 'primary':\n          return colorToRgba(getColor(color.value), 0.1)\n        default:\n          return 'transparent'\n      }\n    })\n\n    const inputStyleComputed = computed(() => ({\n      cursor: 'default',\n      color: getColor(props.color),\n      opacity: props.disabled ? 0.4 : 1,\n      borderColor: inputBorderColorComputed.value,\n    }))\n\n    watch([usesTotal, () => props.pages], () => {\n      if (isDev && usesTotal.value && props.pages) {\n        throw new Error('Please, use either `total` and `page-size` props, or `pages`.')\n      }\n    })\n\n    const inputAttributesComputed = computed(() => ({\n      disabled: props.disabled,\n      placeholder: `${currentValue.value}/${lastPage.value}`,\n    }))\n\n    const buttonPropsComputed = computed(() => ({\n      size: props.size,\n      preset: props.buttonsPreset,\n      color: props.color,\n      borderColor: props.borderColor,\n      round: props.rounded,\n    }))\n\n    const currentPageButtonProps = computed(() => ({\n      preset: props.buttonsPreset === 'default' ? 'primary' : 'default',\n      color: props.activePageColor || props.color,\n    }))\n\n    const getPageButtonProps = (n: number | '...') => {\n      if (!isNaN(+n) && n === currentValue.value) {\n        return Object.assign({}, buttonPropsComputed.value, currentPageButtonProps.value)\n      }\n\n      return buttonPropsComputed.value\n    }\n\n    const isStandAloneInput = computed(() => props.input && !props.boundaryLinks && !props.directionLinks)\n    const inputClassComputed = useBem('va-pagination__input', () => ({\n      sm: props.size === 'small' && isStandAloneInput.value,\n      md: props.size === 'medium' && isStandAloneInput.value,\n      lg: props.size === 'large' && isStandAloneInput.value,\n      auto: !isStandAloneInput.value,\n    }))\n\n    const classComputed = useBem('va-pagination', () => ({\n      ...pick(props, ['gapped', 'rounded', 'disabled']),\n      bordered: !!props.borderColor,\n    }))\n\n    const goNextPage = () => onUserInput(currentValue.value + 1)\n    const goPrevPage = () => onUserInput(currentValue.value - 1)\n\n    return {\n      ...useTranslation(),\n      getPageButtonProps,\n      inputClassComputed,\n      classComputed,\n      currentValue,\n      lastPage,\n      changeValue,\n      inputValue,\n      showPagination,\n      showBoundaryLinks,\n      onUserInput,\n      showDirectionLinks,\n      paginationRange,\n      focusInput,\n      inputStyleComputed,\n      inputAttributesComputed,\n      goNextPage,\n      goPrevPage,\n      buttonPropsComputed,\n      htmlInput,\n      setItemRefByIndex,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-pagination {\n  display: flex;\n  font-family: var(--va-font-family);\n\n  &__input {\n    background: var(--va-pagination-input-background);\n    border-style: var(--va-pagination-input-border-style);\n    border-width: var(--va-pagination-input-border-width);\n    text-align: var(--va-pagination-input-text-align);\n    font-size: var(--va-pagination-input-font-size);\n    font-weight: normal;\n\n    // by default input's height relies on va-button size\n    &--sm {\n      height: var(--va-pagination-button-sm-size);\n    }\n\n    &--md {\n      height: var(--va-pagination-button-size);\n    }\n\n    &--lg {\n      height: var(--va-pagination-button-lg-size);\n    }\n\n    &--auto {\n      height: auto;\n    }\n  }\n\n  .va-button {\n    &.va-input {\n      cursor: default;\n    }\n\n    &--small {\n      height: var(--va-pagination-button-sm-size);\n      min-width: var(--va-pagination-button-sm-size);\n    }\n\n    &--normal {\n      height: var(--va-pagination-button-size);\n      min-width: var(--va-pagination-button-size);\n    }\n\n    &--large {\n      height: var(--va-pagination-button-lg-size);\n      min-width: var(--va-pagination-button-lg-size);\n    }\n\n    &--ellipsis {\n      cursor: default;\n      opacity: 1;\n\n      & > .va-button__content {\n        opacity: 0.4;\n      }\n    }\n\n    &:focus-visible {\n      outline-offset: -2px;\n\n      @include keyboard-focus-outline();\n    }\n  }\n\n  & > :not(:first-child):not(:last-child) {\n    border-radius: 0;\n  }\n\n  & > :first-child {\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n\n  & > :last-child {\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n  }\n\n  &--gapped {\n    &.va-pagination > .va-button {\n      border-radius: var(--va-button-border-radius);\n      margin-right: var(--va-pagination-gap);\n      border-style: solid;\n\n      &:last-child {\n        margin-right: 0;\n      }\n    }\n  }\n\n  &--bordered {\n    &.va-pagination > .va-button {\n      border-style: solid;\n\n      &::before {\n        border-radius: unset;\n      }\n    }\n  }\n\n  &--rounded {\n    &.va-pagination > .va-button {\n      border-radius: 50%;\n\n      &::before {\n        border-radius: inherit;\n      }\n\n      &.va-button--small {\n        &.va-button--icon-only {\n          height: var(--va-pagination-button-sm-size);\n          width: var(--va-pagination-button-sm-size);\n        }\n\n        & .va-button__content {\n          padding-right: var(--va-button-sm-content-px);\n          padding-left: var(--va-button-sm-content-px);\n        }\n      }\n\n      &.va-button--normal {\n        &.va-button--icon-only {\n          height: var(--va-pagination-button-size);\n          width: var(--va-pagination-button-size);\n        }\n\n        & .va-button__content {\n          padding-right: var(--va-button-content-px);\n          padding-left: var(--va-button-content-px);\n        }\n      }\n\n      &.va-button--large {\n        &.va-button--icon-only {\n          height: var(--va-pagination-button-lg-size);\n          width: var(--va-pagination-button-lg-size);\n        }\n\n        & .va-button__content {\n          padding-right: var(--va-button-lg-content-px);\n          padding-left: var(--va-button-lg-content-px);\n        }\n      }\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;;;;;;;;AA2HA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAEC;EAAS;EACvBC,KAAA,EAAO,CAAC,GAAGC,gBAAgB;EAC3BC,KAAA,EAAO;IACL,GAAGC,gBAAA;IACH,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAE;IACvCC,YAAA,EAAc;MAAEH,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAE;IACzCE,KAAA,EAAO;MAAEJ,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAE;IAClCG,QAAA,EAAU;MAAEL,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IAC1CK,KAAA,EAAO;MAAEP,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAU;IAC1CO,IAAA,EAAM;MACJT,IAAA,EAAMQ,MAAA;MACNN,OAAA,EAAS;MACTQ,SAAA,EAAYC,CAAA,IAAc,CAAC,SAAS,UAAU,OAAO,EAAEC,QAAA,CAASD,CAAC;IACnE;IACAE,aAAA,EAAe;MAAEb,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAK;IAC9CY,eAAA,EAAiB;MAAEd,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IACjDa,cAAA,EAAgB;MAAEf,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAK;IAC/Cc,KAAA,EAAO;MAAEhB,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IACvCe,gBAAA,EAAkB;MAAEjB,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IAClDgB,KAAA,EAAO;MAAElB,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAK;IACrCiB,QAAA,EAAU;MAAEnB,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAK;IACxCkB,gBAAA,EAAkB;MAAEpB,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAiB;IAC5DmB,iBAAA,EAAmB;MAAErB,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAgB;IAC5DoB,iBAAA,EAAmB;MAAEtB,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAgB;IAC5DqB,kBAAA,EAAoB;MAAEvB,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAiB;IAC9DsB,MAAA,EAAQ;MAAExB,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IACxCuB,WAAA,EAAa;MAAEzB,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAG;IACzCwB,OAAA,EAAS;MAAE1B,IAAA,EAAMM,OAAA;MAASJ,OAAA,EAAS;IAAM;IACzCyB,eAAA,EAAiB;MAAE3B,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAG;IAC7C0B,aAAA,EAAe;MAAE5B,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAU;IAElD2B,SAAA,EAAW;MAAE7B,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAgB;IACpD4B,yBAAA,EAA2B;MAAE9B,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAsB;IAC1E6B,yBAAA,EAA2B;MAAE/B,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAsB;IAC1E8B,yBAAA,EAA2B;MAAEhC,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAsB;IAC1E+B,8BAAA,EAAgC;MAAEjC,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAA2B;IACpFgC,qBAAA,EAAuB;MAAElC,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAgB;IAChEiC,qBAAA,EAAuB;MAAEnC,IAAA,EAAMQ,MAAA;MAAQN,OAAA,EAAS;IAAgB;EAClE;EAEAkC,MAAOxC,KAAA,EAAO;IAAEyC;EAAA,GAAQ;IACtB,MAAMC,SAAA,GAAYC,UAAA;IAEZ,MAAAC,UAAA,GAAaC,GAAA,CAAI,EAAE;IAEnB,MAAAC,SAAA,GAAYC,QAAA,CAAS,MAAM,CAAC,GAAG/C,KAAA,CAAMsB,KAAA,IAAStB,KAAA,CAAMsB,KAAA,KAAU,MAAMtB,KAAA,CAAMuB,QAAA,CAAS;IAEzF,MAAM;MAAEyB;IAAkE,IAAAC,WAAA,CAAYjD,KAAA,EAAOyC,IAAI;IAEjG,MAAMS,YAAA,GAAeH,QAAA,CAAS;MAC5BI,GAAA,EAAKA,CAAA,KAAML,SAAA,CAAUM,KAAA,GAAQC,IAAA,CAAKC,IAAA,CAAKN,aAAA,CAAcI,KAAA,GAAQpD,KAAA,CAAMuB,QAAQ,KAAK,IAAIyB,aAAA,CAAcI,KAAA;MAClGG,GAAA,EAAMH,KAAA,IAAU;QAAEJ,aAAA,CAAcI,KAAA,GAAQA,KAAA;MAAM;IAAA,CAC/C;IAEK,MAAAI,eAAA,GAAkBT,QAAA,CAAS,MAAM;MACrC,MAAM;QAAExC,YAAA;QAAce,KAAA;QAAOC,QAAA;QAAUL,eAAA;QAAiBV;MAAU,IAAAR,KAAA;MAE5D,MAAAoD,KAAA,GAAQF,YAAA,CAAaE,KAAA,IAAS;MACpC,MAAMK,UAAA,GAAaX,SAAA,CAAUM,KAAA,GAAQC,IAAA,CAAKC,IAAA,CAAKhC,KAAA,GAAQC,QAAQ,IAAIf,KAAA;MAEnE,OAAOkD,kBAAA,CAAmBN,KAAA,EAAO7C,YAAA,EAAckD,UAAA,EAAYvC,eAAe;IAAA,CAC3E;IAED,MAAMyC,QAAA,GAAWZ,QAAA,CAAS,MAAMD,SAAA,CAAUM,KAAA,GAAQC,IAAA,CAAKC,IAAA,CAAKtD,KAAA,CAAMsB,KAAA,GAAQtB,KAAA,CAAMuB,QAAQ,KAAK,IAAI,CAACvB,KAAA,CAAMQ,KAAK;IAE7G,MAAMoD,oBAAA,GAAuBb,QAAA,CAAS,MAAQ,CAAC,CAAC/C,KAAA,CAAMO,YAAA,IAAgBoD,QAAA,CAASP,KAAA,GAAQpD,KAAA,CAAMO,YAAA,IAAkBP,KAAA,CAAMoB,KAAK;IAEpH,MAAAyC,iBAAA,GAAoBd,QAAA,CAAS,MAAM;MACjC;QAAE9B,aAAA;QAAeC;MAAoB,IAAAlB,KAAA;MAEpC,OAAA4D,oBAAA,CAAqBR,KAAA,IAASnC,aAAA,IAAiB,CAACC,eAAA;IAAA,CACxD;IAED,MAAM4C,kBAAA,GAAqBf,QAAA,CAAS,MAAMa,oBAAA,CAAqBR,KAAA,IAASpD,KAAA,CAAMmB,cAAc;IAEtF,MAAA4C,cAAA,GAAiBhB,QAAA,CAAS,MAAMY,QAAA,CAASP,KAAA,GAAQ,KAAM,CAACpD,KAAA,CAAMqB,gBAAA,IAAoBsC,QAAA,CAASP,KAAA,IAAS,CAAE;IAE5G,MAAMY,UAAA,GAAaA,CAAA,KAAM;MACZpB,UAAA,CAAAQ,KAAA,GAAQxC,MAAA,CAAOsC,YAAA,CAAaE,KAAK;MAEnCa,QAAA,OAAM;;QAAA,QAAAC,EAAA,GAAAxB,SAAA,CAAUU,KAAA,KAAV,gBAAAc,EAAA,CAAiBC,iBAAA,CAAkB,GAAGzB,SAAA,CAAUU,KAAA,CAAMA,KAAA,CAAMgB,MAAA;MAAA,CAAO;IAAA;IAGpF,MAAM;MAAEC,iBAAA;MAAmBC;IAAS,IAAIC,YAAA,CAAa;IAC/C,MAAAC,WAAA,GAAeC,OAAA,IAA4B;;MAC/C,IAAIA,OAAA,KAAY,SAASA,OAAA,KAAYvB,YAAA,CAAaE,KAAA,EAAO;QAAE;MAAO;MAElE,MAAMsB,cAAA,GAAiBC,KAAA,CAAMF,OAAA,EAAS,GAAGd,QAAA,CAASP,KAAK;MACvDF,YAAA,CAAaE,KAAA,GAAQN,SAAA,CAAUM,KAAA,IAC1BsB,cAAA,GAAiB,KAAK1E,KAAA,CAAMuB,QAAA,GAAW,IACxCmD,cAAA;MAEJ,CAAAR,EAAA,GAAAI,QAAA,CAASlB,KAAA,CAAMqB,OAAA,GAAU,CAAC,MAA1B,gBAAAP,EAAA,CAA6BU,KAAA;IAAM;IAGrC,MAAMC,UAAA,GAAaA,CAAA,KAAM;;MACvBjC,UAAA,CAAWQ,KAAA,GAAQ;MACnB,CAAAc,EAAA,GAAAxB,SAAA,CAAUU,KAAA,KAAV,gBAAAc,EAAA,CAAiBY,IAAA;IAAK;IAGxB,MAAMC,WAAA,GAAcA,CAAA,KAAM;MACxB,IAAI,CAACnC,UAAA,CAAWQ,KAAA,KAAUF,YAAA,CAAaE,KAAA,EAAO;QACjCyB,UAAA;MACb;MAEI,KAACjC,UAAA,CAAWQ,KAAA,CAAMgB,MAAA,EAAQ;QAAE;MAAO;MAEvC,IAAIK,OAAA,GAAUpE,MAAA,CAAO2E,QAAA,CAASpC,UAAA,CAAWQ,KAAK;MAE9C,QAAQ;QACN,KAAKqB,OAAA,GAAU;UACHA,OAAA;UAAG;QACf,KAAKA,OAAA,GAAUd,QAAA,CAASP,KAAA;UACtBqB,OAAA,GAAUd,QAAA,CAASP,KAAA;UAAO;QAC5B,KAAK6B,KAAA,CAAMR,OAAO;UAChBA,OAAA,GAAUvB,YAAA,CAAaE,KAAA;UAAO;MAElC;MAEAoB,WAAA,CAAYC,OAAO;MACRI,UAAA;IAAA;IAGb,MAAM;MAAEK,QAAA;MAAUC;IAAY,IAAIC,SAAA,CAAU;IAEtC,MAAAC,wBAAA,GAA2BtC,QAAA,CAAS,MAAM;MAC9C,MAAM;QAAEpC,KAAA;QAAOqB;MAAc,IAAIsD,MAAA,CAAOtF,KAAK;MAEzC,KAACW,KAAA,CAAMyC,KAAA,EAAO;QAAS;MAAc;MAEzC,QAAQpB,aAAA,CAAcoB,KAAA;QACpB,KAAK;UACI,OAAA8B,QAAA,CAASvE,KAAA,CAAMyC,KAAK;QAC7B,KAAK;QACL,KAAK;UACH,OAAO+B,WAAA,CAAYD,QAAA,CAASvE,KAAA,CAAMyC,KAAK,GAAG,GAAG;QAC/C;UACS;MACX;IAAA,CACD;IAEK,MAAAmC,kBAAA,GAAqBxC,QAAA,CAAS,OAAO;MACzCyC,MAAA,EAAQ;MACR7E,KAAA,EAAOuE,QAAA,CAASlF,KAAA,CAAMW,KAAK;MAC3B8E,OAAA,EAASzF,KAAA,CAAMS,QAAA,GAAW,MAAM;MAChCoB,WAAA,EAAawD,wBAAA,CAAyBjC;IACtC;IAEFsC,KAAA,CAAM,CAAC5C,SAAA,EAAW,MAAM9C,KAAA,CAAMQ,KAAK,GAAG,MAAM;MAC1C,IAAImF,KAAA,IAAS7C,SAAA,CAAUM,KAAA,IAASpD,KAAA,CAAMQ,KAAA,EAAO;QACrC,UAAIoF,KAAA,CAAM,+DAA+D;MACjF;IAAA,CACD;IAEK,MAAAC,uBAAA,GAA0B9C,QAAA,CAAS,OAAO;MAC9CtC,QAAA,EAAUT,KAAA,CAAMS,QAAA;MAChBqF,WAAA,EAAa,GAAG5C,YAAA,CAAaE,KAAA,IAASO,QAAA,CAASP,KAAA;IAC/C;IAEI,MAAA2C,mBAAA,GAAsBhD,QAAA,CAAS,OAAO;MAC1ClC,IAAA,EAAMb,KAAA,CAAMa,IAAA;MACZmF,MAAA,EAAQhG,KAAA,CAAMgC,aAAA;MACdrB,KAAA,EAAOX,KAAA,CAAMW,KAAA;MACbkB,WAAA,EAAa7B,KAAA,CAAM6B,WAAA;MACnBoE,KAAA,EAAOjG,KAAA,CAAM8B;IACb;IAEI,MAAAoE,sBAAA,GAAyBnD,QAAA,CAAS,OAAO;MAC7CiD,MAAA,EAAQhG,KAAA,CAAMgC,aAAA,KAAkB,YAAY,YAAY;MACxDrB,KAAA,EAAOX,KAAA,CAAM+B,eAAA,IAAmB/B,KAAA,CAAMW;IACtC;IAEI,MAAAwF,kBAAA,GAAsBC,CAAA,IAAsB;MAChD,IAAI,CAACnB,KAAA,CAAM,CAACmB,CAAC,KAAKA,CAAA,KAAMlD,YAAA,CAAaE,KAAA,EAAO;QAC1C,OAAOiD,MAAA,CAAOC,MAAA,CAAO,IAAIP,mBAAA,CAAoB3C,KAAA,EAAO8C,sBAAA,CAAuB9C,KAAK;MAClF;MAEA,OAAO2C,mBAAA,CAAoB3C,KAAA;IAAA;IAGvB,MAAAmD,iBAAA,GAAoBxD,QAAA,CAAS,MAAM/C,KAAA,CAAMoB,KAAA,IAAS,CAACpB,KAAA,CAAMiB,aAAA,IAAiB,CAACjB,KAAA,CAAMmB,cAAc;IAC/F,MAAAqF,kBAAA,GAAqBC,MAAA,CAAO,wBAAwB,OAAO;MAC/DC,EAAA,EAAI1G,KAAA,CAAMa,IAAA,KAAS,WAAW0F,iBAAA,CAAkBnD,KAAA;MAChDuD,EAAA,EAAI3G,KAAA,CAAMa,IAAA,KAAS,YAAY0F,iBAAA,CAAkBnD,KAAA;MACjDwD,EAAA,EAAI5G,KAAA,CAAMa,IAAA,KAAS,WAAW0F,iBAAA,CAAkBnD,KAAA;MAChDyD,IAAA,EAAM,CAACN,iBAAA,CAAkBnD;IACzB;IAEI,MAAA0D,aAAA,GAAgBL,MAAA,CAAO,iBAAiB,OAAO;MACnD,GAAGM,IAAA,CAAK/G,KAAA,EAAO,CAAC,UAAU,WAAW,UAAU,CAAC;MAChDgH,QAAA,EAAU,CAAC,CAAChH,KAAA,CAAM6B;IAClB;IAEF,MAAMoF,UAAA,GAAaA,CAAA,KAAMzC,WAAA,CAAYtB,YAAA,CAAaE,KAAA,GAAQ,CAAC;IAC3D,MAAM8D,UAAA,GAAaA,CAAA,KAAM1C,WAAA,CAAYtB,YAAA,CAAaE,KAAA,GAAQ,CAAC;IAEpD;MACL,GAAG+D,cAAA,CAAe;MAClBhB,kBAAA;MACAK,kBAAA;MACAM,aAAA;MACA5D,YAAA;MACAS,QAAA;MACAoB,WAAA;MACAnC,UAAA;MACAmB,cAAA;MACAF,iBAAA;MACAW,WAAA;MACAV,kBAAA;MACAN,eAAA;MACAQ,UAAA;MACAuB,kBAAA;MACAM,uBAAA;MACAoB,UAAA;MACAC,UAAA;MACAnB,mBAAA;MACArD,SAAA;MACA2B;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}