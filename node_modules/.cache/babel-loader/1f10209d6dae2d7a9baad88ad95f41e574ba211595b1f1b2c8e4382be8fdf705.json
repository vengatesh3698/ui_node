{"ast":null,"code":"import { _ as _sfc_main } from \"./VaInputWrapper.vue_vue_type_script_lang-f063b0d9.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, createCommentVNode, createTextVNode, toDisplayString, createBlock, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaInputWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-input-wrapper__container\"\n};\nconst _hoisted_2 = {\n  class: \"va-input-wrapper__field\"\n};\nconst _hoisted_3 = {\n  class: \"va-input-wrapper__text\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"va-input-wrapper__required-mark\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"va-input-wrapper__bottom\"\n};\nconst _hoisted_6 = {\n  class: \"va-input-wrapper__bottom-counter\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-input-wrapper\", _ctx.wrapperClass]),\n    style: normalizeStyle(typeof _ctx.wrapperStyle === \"object\" ? Array.isArray(_ctx.wrapperStyle) ? [..._ctx.wrapperStyle, `--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-text-color-computed: ${String(_ctx.textColorComputed)}`] : {\n      ..._ctx.wrapperStyle,\n      \"--va-0-background-computed\": String(_ctx.backgroundComputed),\n      \"--va-1-text-color-computed\": String(_ctx.textColorComputed)\n    } : _ctx.wrapperStyle + `;--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-text-color-computed: ${String(_ctx.textColorComputed)}`),\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.$emit(\"click\", $event))\n  }, [createElementVNode(\"div\", _hoisted_1, [_ctx.$slots.prepend ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-input-wrapper__prepend-inner\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"click-prepend\"))\n  }, [renderSlot(_ctx.$slots, \"prepend\")])) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_2, [_ctx.$slots.prependInner ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    class: \"va-input-wrapper__prepend-inner\",\n    ref: \"container\",\n    style: normalizeStyle(_ctx.containerStyle),\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$emit(\"click-prepend-inner\", $event))\n  }, [renderSlot(_ctx.$slots, \"prependInner\")], 4)) : createCommentVNode(\"\", true), createElementVNode(\"div\", _hoisted_3, [_ctx.label ? (openBlock(), createElementBlock(\"label\", {\n    key: 0,\n    \"aria-hidden\": \"true\",\n    class: \"va-input-wrapper__label\",\n    style: normalizeStyle({\n      color: _ctx.colorComputed\n    })\n  }, [createTextVNode(toDisplayString(_ctx.label) + \" \", 1), _ctx.requiredMark ? (openBlock(), createElementBlock(\"span\", _hoisted_4, \" * \")) : createCommentVNode(\"\", true)], 4)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"default\")]), _ctx.success ? (openBlock(), createBlock(_component_va_icon, {\n    key: 1,\n    color: \"success\",\n    name: \"va-check-circle\",\n    size: \"small\",\n    class: \"va-input-wrapper__icon va-input-wrapper__icon--success\"\n  })) : createCommentVNode(\"\", true), _ctx.error ? (openBlock(), createBlock(_component_va_icon, {\n    key: 2,\n    color: \"danger\",\n    name: \"va-warning\",\n    size: \"small\",\n    class: \"va-input-wrapper__icon va-input-wrapper__icon--error\"\n  })) : createCommentVNode(\"\", true), _ctx.$props.loading ? (openBlock(), createBlock(_component_va_icon, {\n    key: 3,\n    color: _ctx.$props.color,\n    size: \"small\",\n    name: \"va-loading\",\n    spin: \"counter-clockwise\",\n    class: \"va-input-wrapper__icon va-input-wrapper__icon--loading\"\n  }, null, 8, [\"color\"])) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"icon\"), _ctx.$slots.appendInner ? (openBlock(), createElementBlock(\"div\", {\n    key: 4,\n    class: \"va-input-wrapper__append-inner\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$emit(\"click-append-inner\", $event))\n  }, [renderSlot(_ctx.$slots, \"appendInner\")])) : createCommentVNode(\"\", true)]), _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n    key: 1,\n    class: \"va-input-wrapper__append-inner\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$emit(\"click-append\"))\n  }, [renderSlot(_ctx.$slots, \"append\")])) : createCommentVNode(\"\", true)]), _ctx.isCounterVisible ? (openBlock(), createElementBlock(\"div\", _hoisted_5, [renderSlot(_ctx.$slots, \"counter\", normalizeProps(guardReactiveProps({\n    valueLength: _ctx.$props.counterValue,\n    maxLength: _ctx.$props.maxLength\n  })), () => [createElementVNode(\"div\", _hoisted_6, toDisplayString(_ctx.counterComputed), 1)])])) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"messages\", normalizeProps(guardReactiveProps({\n    messages: _ctx.messagesComputed,\n    errorLimit: _ctx.errorLimit,\n    color: _ctx.messagesColor\n  })), () => [_ctx.hasMessages ? (openBlock(), createBlock(_component_va_message_list, {\n    key: 0,\n    color: _ctx.messagesColor,\n    \"model-value\": _ctx.messagesComputed,\n    limit: _ctx.errorLimit\n  }, null, 8, [\"color\", \"model-value\", \"limit\"])) : createCommentVNode(\"\", true)])], 6);\n}\nconst VaInputWrapper = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaInputWrapper as V };","map":{"version":3,"names":[],"sources":[],"sourcesContent":["import { _ as _sfc_main } from \"./VaInputWrapper.vue_vue_type_script_lang-f063b0d9.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, createCommentVNode, createTextVNode, toDisplayString, createBlock, normalizeProps, guardReactiveProps } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaInputWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = { class: \"va-input-wrapper__container\" };\nconst _hoisted_2 = { class: \"va-input-wrapper__field\" };\nconst _hoisted_3 = { class: \"va-input-wrapper__text\" };\nconst _hoisted_4 = {\n  key: 0,\n  class: \"va-input-wrapper__required-mark\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"va-input-wrapper__bottom\"\n};\nconst _hoisted_6 = { class: \"va-input-wrapper__bottom-counter\" };\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-input-wrapper\", _ctx.wrapperClass]),\n    style: normalizeStyle(typeof _ctx.wrapperStyle === \"object\" ? Array.isArray(_ctx.wrapperStyle) ? [..._ctx.wrapperStyle, `--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-text-color-computed: ${String(_ctx.textColorComputed)}`] : { ..._ctx.wrapperStyle, \"--va-0-background-computed\": String(_ctx.backgroundComputed), \"--va-1-text-color-computed\": String(_ctx.textColorComputed) } : _ctx.wrapperStyle + `;--va-0-background-computed: ${String(_ctx.backgroundComputed)};--va-1-text-color-computed: ${String(_ctx.textColorComputed)}`),\n    onClick: _cache[4] || (_cache[4] = ($event) => _ctx.$emit(\"click\", $event))\n  }, [\n    createElementVNode(\"div\", _hoisted_1, [\n      _ctx.$slots.prepend ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: \"va-input-wrapper__prepend-inner\",\n        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit(\"click-prepend\"))\n      }, [\n        renderSlot(_ctx.$slots, \"prepend\")\n      ])) : createCommentVNode(\"\", true),\n      createElementVNode(\"div\", _hoisted_2, [\n        _ctx.$slots.prependInner ? (openBlock(), createElementBlock(\"div\", {\n          key: 0,\n          class: \"va-input-wrapper__prepend-inner\",\n          ref: \"container\",\n          style: normalizeStyle(_ctx.containerStyle),\n          onClick: _cache[1] || (_cache[1] = ($event) => _ctx.$emit(\"click-prepend-inner\", $event))\n        }, [\n          renderSlot(_ctx.$slots, \"prependInner\")\n        ], 4)) : createCommentVNode(\"\", true),\n        createElementVNode(\"div\", _hoisted_3, [\n          _ctx.label ? (openBlock(), createElementBlock(\"label\", {\n            key: 0,\n            \"aria-hidden\": \"true\",\n            class: \"va-input-wrapper__label\",\n            style: normalizeStyle({ color: _ctx.colorComputed })\n          }, [\n            createTextVNode(toDisplayString(_ctx.label) + \" \", 1),\n            _ctx.requiredMark ? (openBlock(), createElementBlock(\"span\", _hoisted_4, \" * \")) : createCommentVNode(\"\", true)\n          ], 4)) : createCommentVNode(\"\", true),\n          renderSlot(_ctx.$slots, \"default\")\n        ]),\n        _ctx.success ? (openBlock(), createBlock(_component_va_icon, {\n          key: 1,\n          color: \"success\",\n          name: \"va-check-circle\",\n          size: \"small\",\n          class: \"va-input-wrapper__icon va-input-wrapper__icon--success\"\n        })) : createCommentVNode(\"\", true),\n        _ctx.error ? (openBlock(), createBlock(_component_va_icon, {\n          key: 2,\n          color: \"danger\",\n          name: \"va-warning\",\n          size: \"small\",\n          class: \"va-input-wrapper__icon va-input-wrapper__icon--error\"\n        })) : createCommentVNode(\"\", true),\n        _ctx.$props.loading ? (openBlock(), createBlock(_component_va_icon, {\n          key: 3,\n          color: _ctx.$props.color,\n          size: \"small\",\n          name: \"va-loading\",\n          spin: \"counter-clockwise\",\n          class: \"va-input-wrapper__icon va-input-wrapper__icon--loading\"\n        }, null, 8, [\"color\"])) : createCommentVNode(\"\", true),\n        renderSlot(_ctx.$slots, \"icon\"),\n        _ctx.$slots.appendInner ? (openBlock(), createElementBlock(\"div\", {\n          key: 4,\n          class: \"va-input-wrapper__append-inner\",\n          onClick: _cache[2] || (_cache[2] = ($event) => _ctx.$emit(\"click-append-inner\", $event))\n        }, [\n          renderSlot(_ctx.$slots, \"appendInner\")\n        ])) : createCommentVNode(\"\", true)\n      ]),\n      _ctx.$slots.append ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: \"va-input-wrapper__append-inner\",\n        onClick: _cache[3] || (_cache[3] = ($event) => _ctx.$emit(\"click-append\"))\n      }, [\n        renderSlot(_ctx.$slots, \"append\")\n      ])) : createCommentVNode(\"\", true)\n    ]),\n    _ctx.isCounterVisible ? (openBlock(), createElementBlock(\"div\", _hoisted_5, [\n      renderSlot(_ctx.$slots, \"counter\", normalizeProps(guardReactiveProps({ valueLength: _ctx.$props.counterValue, maxLength: _ctx.$props.maxLength })), () => [\n        createElementVNode(\"div\", _hoisted_6, toDisplayString(_ctx.counterComputed), 1)\n      ])\n    ])) : createCommentVNode(\"\", true),\n    renderSlot(_ctx.$slots, \"messages\", normalizeProps(guardReactiveProps({ messages: _ctx.messagesComputed, errorLimit: _ctx.errorLimit, color: _ctx.messagesColor })), () => [\n      _ctx.hasMessages ? (openBlock(), createBlock(_component_va_message_list, {\n        key: 0,\n        color: _ctx.messagesColor,\n        \"model-value\": _ctx.messagesComputed,\n        limit: _ctx.errorLimit\n      }, null, 8, [\"color\", \"model-value\", \"limit\"])) : createCommentVNode(\"\", true)\n    ])\n  ], 6);\n}\nconst VaInputWrapper = /* @__PURE__ */ _export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport {\n  VaInputWrapper as V\n};\n//# sourceMappingURL=VaInputWrapper-89658c86.mjs.map\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}