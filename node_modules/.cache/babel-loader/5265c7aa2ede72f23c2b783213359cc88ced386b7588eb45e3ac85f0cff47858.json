{"ast":null,"code":"import { _ as _sfc_main } from \"./VaProgressCircle.vue_vue_type_script_lang-2ca0eb52.mjs\";\nimport { openBlock, createElementBlock, mergeProps, createElementVNode, normalizeStyle, renderSlot, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaProgressCircle_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-progress-circle__wrapper\",\n  viewBox: \"0 0 40 40\"\n};\nconst _hoisted_2 = [\"r\", \"stroke\", \"stroke-width\", \"stroke-dasharray\", \"stroke-dashoffset\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    class: [\"va-progress-circle\", _ctx.rootClass],\n    style: _ctx.rootStyle\n  }, _ctx.ariaAttributesComputed), [(openBlock(), createElementBlock(\"svg\", _hoisted_1, [createElementVNode(\"circle\", {\n    class: \"va-progress-circle__overlay\",\n    cx: \"50%\",\n    cy: \"50%\",\n    r: _ctx.radius,\n    fill: \"none\",\n    stroke: _ctx.colorComputed,\n    \"stroke-width\": _ctx.cappedThickness + \"%\",\n    \"stroke-dasharray\": _ctx.dasharray,\n    \"stroke-dashoffset\": _ctx.dashoffset\n  }, null, 8, _hoisted_2)])), _ctx.$slots.default ? (openBlock(), createElementBlock(\"div\", {\n    key: 0,\n    style: normalizeStyle(_ctx.infoStyle),\n    class: \"va-progress-circle__info\"\n  }, [renderSlot(_ctx.$slots, \"default\")], 4)) : createCommentVNode(\"\", true)], 16);\n}\nconst _VaProgressCircle = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaProgressCircle as _ };","map":{"version":3,"names":["_hoisted_1","class","viewBox","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","mergeProps","rootClass","style","rootStyle","ariaAttributesComputed","createElementVNode","cx","cy","r","radius","fill","stroke","colorComputed","cappedThickness","dasharray","dashoffset","_hoisted_2","$slots","default","key","normalizeStyle","infoStyle","renderSlot"],"sources":["../../../../../src/components/va-progress-circle/VaProgressCircle.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-circle\"\n    :style=\"rootStyle\"\n    :class=\"rootClass\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <svg\n      class=\"va-progress-circle__wrapper\"\n      viewBox=\"0 0 40 40\"\n    >\n      <circle\n        class=\"va-progress-circle__overlay\"\n        cx=\"50%\"\n        cy=\"50%\"\n        :r=\"radius\"\n        fill=\"none\"\n        :stroke=\"colorComputed\"\n        :stroke-width=\"cappedThickness + '%'\"\n        :stroke-dasharray=\"dasharray\"\n        :stroke-dashoffset=\"dashoffset\"\n      />\n    </svg>\n    <div\n      v-if=\"$slots.default\"\n      :style=\"infoStyle\"\n      class=\"va-progress-circle__info\"\n    >\n      <slot />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useComponentPresetProp, useColors, useSize, useSizeProps, useTranslation } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaProgressCircle',\n\n  props: {\n    ...useSizeProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    thickness: { type: Number, default: 0.06 },\n    color: { type: String, default: 'primary' },\n    ariaLabel: { type: String, default: '$t:progressState' },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n    const { sizeComputed } = useSize(props)\n\n    const cappedThickness = computed(() => clamp(props.thickness, 0, 1) / 2 * 100)\n\n    const radius = computed(() => 20 - (20 * cappedThickness.value / 100))\n    const dasharray = computed(() => 2 * Math.PI * radius.value)\n    const dashoffset = computed(() => dasharray.value * (1 - clamp(props.modelValue, 0, 100) / 100))\n    const colorComputed = computed(() => getColor(props.color, undefined, true))\n\n    const { tp } = useTranslation()\n\n    return {\n      infoStyle: computed(() => ({ color: colorComputed.value })),\n      rootStyle: computed(() => ({\n        width: sizeComputed.value,\n        height: sizeComputed.value,\n      })),\n      rootClass: computed(() => ({\n        'va-progress-circle--indeterminate': props.indeterminate,\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: 'progressbar',\n        'aria-label': tp(props.ariaLabel),\n        'aria-valuenow': !props.indeterminate ? props.modelValue : undefined,\n      })),\n\n      colorComputed,\n      radius,\n      dasharray,\n      dashoffset,\n      cappedThickness,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-progress-circle {\n  position: var(--va-progress-circle-position);\n  overflow: var(--va-progress-circle-overflow); // Prevents resizing container back and forth.\n  font-family: var(--va-font-family);\n\n  &__wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    margin: auto;\n    transform: rotate(-90deg);\n    width: var(--va-progress-circle-width);\n    height: var(--va-progress-circle-height);\n\n    @include flex-center();\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__wrapper--indeterminate 2s linear infinite;\n      }\n    }\n  }\n\n  &__overlay {\n    transition: var(--va-progress-circle-overlay-transition);\n\n    @at-root {\n      .va-progress-circle--indeterminate & {\n        animation: va-progress-circle__overlay--indeterminate 2s ease-in-out infinite;\n      }\n    }\n  }\n\n  &__info {\n    font-size: var(--va-progress-circle-font-size);\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n  }\n}\n\n@keyframes va-progress-circle__wrapper--indeterminate {\n  100% {\n    transform: rotate(270deg);\n  }\n}\n\n@keyframes va-progress-circle__overlay--indeterminate {\n  0% {\n    stroke-dasharray: 1, 125;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -65px;\n  }\n\n  100% {\n    stroke-dasharray: 125, 125;\n    stroke-dashoffset: -125px;\n  }\n}\n</style>\n"],"mappings":";;;;MASMA,UAAA,GAAQ;EAAAC,KAAA;EAAAC,OAAA;;;AAPL,SAAAC,YAACC,IAAA,EAAAC,MAAA,EAEEC,MAAA,EAASC,MAAA,EAAAC,KAAA,EAAAC,QAAA;EADX,OAAAC,SAAA,CAAW,GAAAC,kBAAA,QAAAC,UAAA;IAAAX,KAAA,EAET,CAAsB,sBAAAG,IAAA,CAAAS,SAAA;IAAAC,KAAA,EAAAV,IAAA,CAAAW;EAAA,GAAAX,IAAA,CAM5BY,sBAUE,KAAAN,SAAA,IATmCC,kBAAA,QAAAX,UAAA,GAC3BiB,kBAAA;IACRhB,KAAA,EAAG;IACFiB,EAAA,EAAG;IACJC,EAAA,EAAI;IACHC,CAAA,EAAQhB,IAAA,CAAAiB,MAAA;IACRC,IAAA;IACAC,MAAA,EAAAnB,IAAA,CAAAoB,aAAA;IACA,gBAAApB,IAAA,CAAmBqB,eAAA,GAAU;IAAA,oBAAArB,IAAA,CAAAsB,SAAA;IAAA,qBAAAtB,IAAA,CAAAuB;EAI1B,YAAOC,UAAO,MACdxB,IAAA,CAAAyB,MAAA,CAAAC,OAAA,IAAApB,SAAA,IAAAC,kBAAA,CAAE,OAAS;IACjBoB,GAAA,EAAK;IAAAjB,KAAA,EAAAkB,cAAA,CAAA5B,IAAA,CAAA6B,SAAA;IAELhC,KAAA;EAAA,IAAAiC,UAAA,CAAA9B,IAAA,CAAAyB,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}