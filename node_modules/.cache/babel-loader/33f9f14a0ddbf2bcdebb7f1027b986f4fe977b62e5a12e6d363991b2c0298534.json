{"ast":null,"code":"import { getCurrentInstance, shallowRef, onMounted, onUpdated, onBeforeUnmount } from \"vue\";\nconst useCurrentElement = el => {\n  if (el) {\n    return el;\n  }\n  const vm = getCurrentInstance();\n  const currentEl = shallowRef();\n  onMounted(() => {\n    currentEl.value = vm.proxy.$el ?? void 0;\n  });\n  onUpdated(() => {\n    currentEl.value = vm.proxy.$el ?? void 0;\n  });\n  onBeforeUnmount(() => {\n    currentEl.value = vm.proxy.$el ?? void 0;\n  });\n  return currentEl;\n};\nexport { useCurrentElement as u };","map":{"version":3,"names":["useCurrentElement","el","vm","getCurrentInstance","currentEl","shallowRef","onMounted","value","proxy","$el","onUpdated","onBeforeUnmount"],"sources":["../../../../src/composables/useCurrentElement.ts"],"sourcesContent":["import { onMounted, onBeforeUnmount, shallowRef, getCurrentInstance, onUpdated, Ref } from 'vue'\n\n/** Returns ref of current component instance element */\nexport const useCurrentElement = (el?: Ref<HTMLElement | undefined>) => {\n  if (el) { return el }\n  const vm = getCurrentInstance()!\n  const currentEl = shallowRef<HTMLElement>()\n  onMounted(() => { currentEl.value = vm.proxy!.$el ?? undefined })\n  onUpdated(() => { currentEl.value = vm.proxy!.$el ?? undefined })\n  onBeforeUnmount(() => { currentEl.value = vm.proxy!.$el ?? undefined })\n\n  return currentEl\n}\n"],"mappings":";AAGa,MAAAA,iBAAA,GAAqBC,EAAA,IAAsC;EACtE,IAAIA,EAAA,EAAI;IAAS,OAAAA,EAAA;EAAG;EACpB,MAAMC,EAAA,GAAKC,kBAAA;EACX,MAAMC,SAAA,GAAYC,UAAA;EAClBC,SAAA,CAAU,MAAM;IAAYF,SAAA,CAAAG,KAAA,GAAQL,EAAA,CAAGM,KAAA,CAAOC,GAAA,IAAO;EAAA,CAAW;EAChEC,SAAA,CAAU,MAAM;IAAYN,SAAA,CAAAG,KAAA,GAAQL,EAAA,CAAGM,KAAA,CAAOC,GAAA,IAAO;EAAA,CAAW;EAChEE,eAAA,CAAgB,MAAM;IAAYP,SAAA,CAAAG,KAAA,GAAQL,EAAA,CAAGM,KAAA,CAAOC,GAAA,IAAO;EAAA,CAAW;EAE/D,OAAAL,SAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}