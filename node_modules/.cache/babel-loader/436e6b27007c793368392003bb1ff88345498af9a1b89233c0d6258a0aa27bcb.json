{"ast":null,"code":"import { _ as _sfc_main } from \"./VaAppBar.vue_vue_type_script_lang-7ac7b3d4.mjs\";\nimport { openBlock, createElementBlock, normalizeStyle, renderSlot } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaAppBar_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createElementBlock(\"header\", {\n    ref: \"scrollRoot\",\n    role: \"toolbar\",\n    class: \"va-app-bar\",\n    style: normalizeStyle(_ctx.computedStyle)\n  }, [renderSlot(_ctx.$slots, \"default\")], 4);\n}\nconst _VaAppBar = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaAppBar as _ };","map":{"version":3,"names":["_sfc_render","_ctx","_cache","$props","$setup","$data","$options","openBlock","createElementBlock","ref","role","class","style","normalizeStyle","computedStyle","renderSlot","$slots"],"sources":["../../../../../src/components/va-app-bar/VaAppBar.vue"],"sourcesContent":["<template>\n  <header\n    ref=\"scrollRoot\"\n    role=\"toolbar\"\n    class=\"va-app-bar\"\n    :style=\"computedStyle\"\n  >\n    <slot />\n  </header>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { setupScroll, useColors, useFixedBar, useFixedBarProps, useComponentPresetProp } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaAppBar',\n  props: {\n    ...useFixedBarProps,\n    ...useComponentPresetProp,\n    gradient: { type: Boolean, default: false },\n    target: { type: [Object, String] as PropType<string | HTMLElement>, default: '' },\n    shadowOnScroll: { type: Boolean, default: false },\n    shadowColor: { type: String, default: '' },\n    color: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const { scrollRoot, isScrolledDown } = setupScroll(props.fixed, props.target)\n    const { fixedBarStyleComputed } = useFixedBar(props, isScrolledDown)\n\n    const { getColor, getGradientBackground, getBoxShadowColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const showShadowComputed = computed(() => isScrolledDown.value ? !!props.shadowOnScroll : false)\n    const shadowColorComputed = computed(() => getColor(props.shadowColor, colorComputed.value))\n\n    const computedShadow = computed(() => {\n      const shadow = getBoxShadowColor(props.shadowColor ? shadowColorComputed.value : colorComputed.value)\n      return showShadowComputed.value ? `var(--va-app-bar-shadow) ${shadow}` : ''\n    })\n\n    const computedStyle = computed(() => ({\n      ...fixedBarStyleComputed.value,\n      background: props.gradient ? getGradientBackground(colorComputed.value) : colorComputed.value,\n      boxShadow: computedShadow.value,\n    }))\n\n    return { scrollRoot, computedStyle }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-app-bar {\n  display: flex;\n  align-items: center;\n  position: var(--va-app-bar-position);\n  transition: all 0.5s ease;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: var(--va-app-bar-height);\n  min-height: var(--va-app-bar-height);\n  min-width: 100%;\n  font-family: var(--va-font-family);\n  z-index: var(--va-app-bar-z-index);\n\n  &--bottom {\n    top: 100%;\n    transform: translateY(-100%);\n  }\n}\n</style>\n"],"mappings":";;;;SAEQA,YAAYC,IAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,QAAA;SACXC,SAAA,CAAS,GAAAC,kBAAA;IACdC,GAAA,EAAK;IACJC,IAAA,EAAK;IAAAC,KAAA;IAENC,KAAA,EAAQC,cAAA,CAAAZ,IAAA,CAAAa,aAAA;EAAA,IAAAC,UAAA,CAAAd,IAAA,CAAAe,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}