{"ast":null,"code":"const focusElement = el => {\n  if (!el) {\n    return;\n  }\n  el.focus();\n  el.dispatchEvent(new Event(\"focus\", {\n    bubbles: true\n  }));\n};\nconst blurElement = el => {\n  if (!el) {\n    return;\n  }\n  el.blur();\n  el.dispatchEvent(new Event(\"blur\", {\n    bubbles: true\n  }));\n};\nexport { blurElement as b, focusElement as f };","map":{"version":3,"names":["focusElement","el","focus","dispatchEvent","Event","bubbles","blurElement","blur"],"sources":["../../../../src/utils/focus.ts"],"sourcesContent":["/**\n * Since `.focus()` does not dispatch native event, this method will dispatch it automatically\n * @emits focus\n */\nexport const focusElement = <T extends HTMLElement | undefined>(el: T) => {\n  if (!el) { return }\n\n  el.focus()\n  el.dispatchEvent(new Event('focus', { bubbles: true }))\n}\n\n/**\n * Since `.blur()` does not dispatch native event, this method will dispatch it automatically\n * @emits blur\n */\nexport const blurElement = <T extends HTMLElement | undefined>(el: T) => {\n  if (!el) { return }\n\n  el.blur()\n  el.dispatchEvent(new Event('blur', { bubbles: true }))\n}\n"],"mappings":"AAIa,MAAAA,YAAA,GAAmDC,EAAA,IAAU;EACxE,IAAI,CAACA,EAAA,EAAI;IAAE;EAAO;EAElBA,EAAA,CAAGC,KAAA,CAAM;EACND,EAAA,CAAAE,aAAA,CAAc,IAAIC,KAAA,CAAM,SAAS;IAAEC,OAAA,EAAS;EAAM,EAAC;AACxD;AAMa,MAAAC,WAAA,GAAkDL,EAAA,IAAU;EACvE,IAAI,CAACA,EAAA,EAAI;IAAE;EAAO;EAElBA,EAAA,CAAGM,IAAA,CAAK;EACLN,EAAA,CAAAE,aAAA,CAAc,IAAIC,KAAA,CAAM,QAAQ;IAAEC,OAAA,EAAS;EAAM,EAAC;AACvD"},"metadata":{},"sourceType":"module","externalDependencies":[]}