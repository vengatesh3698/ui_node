{"ast":null,"code":"import { defineComponent } from \"vue\";\nimport { V as VaColorIndicator } from \"../va-color-indicator/index-edf34a17.mjs\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaColorPalette\",\n  components: {\n    VaColorIndicator\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: String,\n      default: null\n    },\n    palette: {\n      type: Array,\n      default: () => []\n    },\n    indicator: {\n      type: String,\n      default: \"dot\",\n      validator: value => [\"dot\", \"square\"].includes(value)\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:colorSelection\"\n    },\n    ariaIndicatorLabel: {\n      type: String,\n      default: \"$t:color\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    return {\n      ...useTranslation(),\n      valueComputed,\n      isSelected: color => valueComputed.value === color\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaColorPalette.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaColorIndicator","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","String","default","palette","Array","indicator","validator","value","includes","ariaLabel","ariaIndicatorLabel","setup","emit","valueComputed","useStateful","useTranslation","isSelected","color"],"sources":["../../../../../src/components/va-color-palette/VaColorPalette.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"va-color-palette\"\n    role=\"listbox\"\n    :aria-label=\"tp($props.ariaLabel)\"\n  >\n    <va-color-indicator\n      v-for=\"(color, index) in palette\"\n      :key=\"index\"\n      role=\"option\"\n      :aria-label=\"tp($props.ariaIndicatorLabel, { color })\"\n      :aria-selected=\"isSelected(color)\"\n      tabindex=\"0\"\n      :modelValue=\"isSelected(color)\"\n      :color=\"color\"\n      :square=\"indicator === 'square'\"\n      @update:modelValue=\"valueComputed = color\"\n    />\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n    ariaLabel: { type: String, default: '$t:colorSelection' },\n    ariaIndicatorLabel: { type: String, default: '$t:color' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  display: flex;\n  padding-left: 0;\n  margin: 0;\n\n  & > * {\n    margin-right: 0.25rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;AA4BA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,UAAA,EAAY;IAAEC;EAAiB;EAC/BC,KAAA,EAAO,CAAC,GAAGC,gBAAgB;EAC3BC,KAAA,EAAO;IACL,GAAGC,gBAAA;IACH,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAK;IAC1CC,OAAA,EAAS;MAAEH,IAAA,EAAMI,KAAA;MAA6BF,OAAA,EAASA,CAAA,KAAM;IAAG;IAChEG,SAAA,EAAW;MACTL,IAAA,EAAMC,MAAA;MACNC,OAAA,EAAS;MACTI,SAAA,EAAYC,KAAA,IAAkB,CAAC,OAAO,QAAQ,EAAEC,QAAA,CAASD,KAAK;IAChE;IACAE,SAAA,EAAW;MAAET,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAoB;IACxDQ,kBAAA,EAAoB;MAAEV,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAW;EAC1D;EACAS,MAAOf,KAAA,EAAO;IAAEgB;EAAA,GAAQ;IACtB,MAAM;MAAEC;IAAkB,IAAAC,WAAA,CAAYlB,KAAA,EAAOgB,IAAI;IAE1C;MACL,GAAGG,cAAA,CAAe;MAClBF,aAAA;MACAG,UAAA,EAAaC,KAAA,IAAkBJ,aAAA,CAAcN,KAAA,KAAUU;IAAA;EAE3D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}