{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { V as VaIcon } from \"../../../va-icon/index-0ebbc0f2.mjs\";\nimport { i as isNilValue } from \"../../../../utils/isNilValue-745d19e7.mjs\";\nimport { a as useColorProps, u as useColors } from \"../../../../composables/useColors-f23d24ff.mjs\";\nimport { u as useBem } from \"../../../../composables/useBem-10a5bc6e.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaSelectOption\",\n  components: {\n    VaIcon\n  },\n  props: {\n    ...useColorProps,\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    option: {\n      type: [Number, String, Boolean, Object],\n      default: () => ({})\n    },\n    getText: {\n      type: Function,\n      required: true\n    },\n    getTrackBy: {\n      type: Function,\n      required: true\n    },\n    currentOption: {\n      type: [String, Number, Boolean, Object],\n      default: null\n    },\n    getSelectedState: {\n      type: Function,\n      required: true\n    },\n    search: {\n      type: String,\n      default: \"\"\n    },\n    highlightMatchedText: {\n      type: Boolean,\n      default: true\n    },\n    inputFocused: {\n      type: Boolean,\n      default: false\n    },\n    minSearchChars: {\n      type: Number,\n      default: 0\n    }\n  },\n  setup(props) {\n    const {\n      getColor,\n      getHoverColor\n    } = useColors();\n    const optionIcon = computed(() => typeof props.option === \"object\" ? props.option.icon : void 0);\n    const optionIconColor = computed(() => getColor(props.color));\n    const optionText = computed(() => props.getText(props.option));\n    const optionTextSplitted = computed(() => {\n      const defaultSplit = {\n        start: optionText.value,\n        searchedSubString: \"\",\n        end: \"\"\n      };\n      if (!optionText.value || !props.search || !props.highlightMatchedText || props.search.length < props.minSearchChars) {\n        return defaultSplit;\n      }\n      const substringStartIndex = optionText.value.toLowerCase().indexOf(props.search.toLowerCase());\n      if (substringStartIndex < 0) {\n        return defaultSplit;\n      }\n      const start = optionText.value.slice(0, substringStartIndex);\n      const searchedSubString = optionText.value.slice(substringStartIndex, substringStartIndex + props.search.length);\n      const end = optionText.value.slice(substringStartIndex + props.search.length);\n      return {\n        start,\n        searchedSubString,\n        end\n      };\n    });\n    const isSelected = computed(() => props.getSelectedState(props.option));\n    const isFocused = computed(() => {\n      if (isNilValue(props.currentOption)) {\n        return false;\n      }\n      if (typeof props.option === \"string\") {\n        return props.option === props.currentOption;\n      }\n      return props.getTrackBy(props.currentOption) === props.getTrackBy(props.option);\n    });\n    const optionClass = useBem(\"va-select-option\", () => ({\n      selected: isSelected.value\n    }));\n    const optionStyle = computed(() => ({\n      color: isSelected.value ? getColor(props.color) : \"inherit\",\n      backgroundColor: isFocused.value ? getHoverColor(getColor(props.color)) : \"transparent\",\n      cursor: props.disabled ? \"default\" : void 0,\n      opacity: props.disabled ? \"var(--va-select-option-list-option-disabled-opacity)\" : void 0\n    }));\n    return {\n      getColor,\n      optionIcon,\n      isSelected,\n      optionStyle,\n      optionClass,\n      optionIconColor,\n      optionTextSplitted\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaSelectOption.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaIcon","props","useColorProps","disabled","type","Boolean","default","option","Number","String","Object","getText","Function","required","getTrackBy","currentOption","getSelectedState","search","highlightMatchedText","inputFocused","minSearchChars","setup","getColor","getHoverColor","useColors","optionIcon","computed","icon","optionIconColor","color","optionText","optionTextSplitted","defaultSplit","start","value","searchedSubString","end","length","substringStartIndex","toLowerCase","indexOf","slice","isSelected","isFocused","isNilValue","optionClass","useBem","selected","optionStyle","backgroundColor","cursor","opacity"],"sources":["../../../../../../../src/components/va-select/components/VaSelectOption/VaSelectOption.vue"],"sourcesContent":["<template>\n  <div\n    role=\"option\"\n    class=\"va-select-option\"\n    :class=\"optionClass\"\n    :style=\"optionStyle\"\n    :aria-selected=\"isSelected\"\n  >\n    <va-icon\n      v-if=\"optionIcon\"\n      size=\"small\"\n      class=\"va-select-option__icon\"\n      :name=\"optionIcon\"\n    />\n    {{ optionTextSplitted.start }}\n    <span\n      v-if=\"optionTextSplitted.searchedSubString\"\n      class=\"va-select-option__highlighted\"\n    >\n      {{ optionTextSplitted.searchedSubString }}\n    </span>\n    {{ optionTextSplitted.end }}\n    <va-icon\n      v-show=\"isSelected\"\n      class=\"va-select-option__selected-icon\"\n      size=\"small\"\n      name=\"va-check\"\n      :color=\"optionIconColor\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, type PropType } from 'vue'\n\nimport { useColors, useColorProps, useBem } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\n\nimport { isNilValue } from '../../../../utils/isNilValue'\n\nimport type { SelectableOption } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaSelectOption',\n\n  components: { VaIcon },\n\n  props: {\n    ...useColorProps,\n    disabled: { type: Boolean, default: false },\n    option: { type: [Number, String, Boolean, Object] as PropType<SelectableOption>, default: () => ({}) },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number | string>, required: true },\n    currentOption: { type: [String, Number, Boolean, Object] as PropType<SelectableOption | null>, default: null },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    search: { type: String, default: '' },\n    highlightMatchedText: { type: Boolean, default: true },\n    inputFocused: { type: Boolean, default: false },\n    minSearchChars: { type: Number, default: 0 },\n  },\n\n  setup (props) {\n    const { getColor, getHoverColor } = useColors()\n\n    const optionIcon = computed(() => typeof props.option === 'object' ? (props.option.icon as string) : undefined)\n    const optionIconColor = computed(() => getColor(props.color))\n\n    const optionText = computed(() => props.getText(props.option))\n    const optionTextSplitted = computed(() => {\n      const defaultSplit = { start: optionText.value, searchedSubString: '', end: '' }\n\n      if (!optionText.value || !props.search || !props.highlightMatchedText || props.search.length < props.minSearchChars) {\n        return defaultSplit\n      }\n\n      const substringStartIndex = optionText.value.toLowerCase().indexOf(props.search.toLowerCase())\n\n      if (substringStartIndex < 0) { return defaultSplit }\n\n      const start = optionText.value.slice(0, substringStartIndex)\n      const searchedSubString = optionText.value.slice(substringStartIndex, substringStartIndex + props.search.length)\n      const end = optionText.value.slice(substringStartIndex + props.search.length)\n\n      return { start, searchedSubString, end }\n    })\n\n    const isSelected = computed(() => props.getSelectedState(props.option))\n    const isFocused = computed(() => {\n      if (isNilValue(props.currentOption)) { return false }\n      if (typeof props.option === 'string') { return props.option === props.currentOption }\n\n      return props.getTrackBy(props.currentOption) === props.getTrackBy(props.option)\n    })\n\n    const optionClass = useBem('va-select-option', () => ({\n      selected: isSelected.value,\n    }))\n\n    const optionStyle = computed(() => ({\n      color: isSelected.value ? getColor(props.color) : 'inherit',\n      backgroundColor: isFocused.value ? getHoverColor(getColor(props.color)) : 'transparent',\n      cursor: props.disabled ? 'default' : undefined,\n      opacity: props.disabled ? 'var(--va-select-option-list-option-disabled-opacity)' : undefined,\n    }))\n\n    return {\n      getColor,\n      optionIcon,\n      isSelected,\n      optionStyle,\n      optionClass,\n      optionIconColor,\n      optionTextSplitted,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-select-option {\n  min-height: var(--va-select-option-list-option-min-height);\n  padding: var(--va-select-option-list-option-padding);\n  display: var(--va-select-option-list-option-display);\n  align-items: var(--va-select-option-list-option-align-items);\n  word-break: var(--va-select-option-list-option-word-break);\n  cursor: var(--va-select-option-list-option-cursor);\n\n  &__icon {\n    margin-right: var(--va-select-option-list-option-icon-margin-right);\n  }\n\n  &__selected-icon {\n    margin-left: var(--va-select-option-list-option-selected-icon-margin-left);\n    font-size: var(--va-select-option-list-option-selected-icon-font-size);\n  }\n\n  &__highlighted {\n    color: var(--va-select-option-list-option-highlighted-color);\n    background-color: var(--va-select-option-list-option-highlighted-background-color);\n    border-radius: var(--va-select-option-list-option-highlighted-border-radius);\n    margin: var(--va-select-option-list-option-highlighted-margin);\n    padding: var(--va-select-option-list-option-highlighted-padding);\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}