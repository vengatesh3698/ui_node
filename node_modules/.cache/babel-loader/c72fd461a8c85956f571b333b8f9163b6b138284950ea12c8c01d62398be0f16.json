{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { u as useColors } from \"../../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTextColor } from \"../../../composables/useTextColor-f36510ca.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaDatePickerCell\",\n  props: {\n    otherMonth: {\n      type: Boolean,\n      default: false\n    },\n    today: {\n      type: Boolean,\n      default: false\n    },\n    inRange: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    selected: {\n      type: Boolean,\n      default: false\n    },\n    weekend: {\n      type: Boolean,\n      default: false\n    },\n    hidden: {\n      type: Boolean,\n      default: false\n    },\n    focused: {\n      type: Boolean,\n      default: false\n    },\n    highlightWeekend: {\n      type: Boolean,\n      default: false\n    },\n    highlightToday: {\n      type: Boolean,\n      default: false\n    },\n    readonly: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    }\n  },\n  emits: [\"click\"],\n  setup(props, {\n    emit\n  }) {\n    const onClick = () => {\n      if (!props.disabled) {\n        emit(\"click\");\n      }\n    };\n    const {\n      getColor\n    } = useColors();\n    const bg = computed(() => getColor(props.color));\n    const {\n      textColorComputed\n    } = useTextColor(bg);\n    return {\n      bg,\n      onClick,\n      textColorComputed\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../VaDatePickerCell.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","otherMonth","type","Boolean","default","today","inRange","disabled","selected","weekend","hidden","focused","highlightWeekend","highlightToday","readonly","color","String","emits","setup","emit","onClick","getColor","useColors","bg","computed","textColorComputed","useTextColor"],"sources":["../../../../../../src/components/va-date-picker/components/VaDatePickerCell.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"hidden\"\n    class=\"va-date-picker-cell va-date-picker-cell_clear\"\n   :style=\"`--va-0-bg: ${String(bg)};--va-1-text-color-computed: ${String(textColorComputed)}`\"/>\n  <div\n    v-else\n    class=\"va-date-picker-cell\"\n    :class=\"{\n      'va-date-picker-cell_other-month': otherMonth,\n      'va-date-picker-cell_today': highlightToday && today,\n      'va-date-picker-cell_in-range': inRange,\n      'va-date-picker-cell_disabled': disabled,\n      'va-date-picker-cell_highlighted-weekend': highlightWeekend && weekend,\n      'va-date-picker-cell_selected': selected,\n      'va-date-picker-cell_focused': focused,\n      'va-date-picker-cell_readonly': readonly,\n    }\"\n    @click=\"onClick\"\n    @keypress.space.enter.prevent.stop=\"onClick\"\n   :style=\"`--va-0-bg: ${String(bg)};--va-1-text-color-computed: ${String(textColorComputed)}`\">\n    <slot />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useTextColor, useColors } from '../../../composables'\nimport { computed, defineComponent, toRef } from 'vue'\n\nexport default defineComponent({\n  name: 'VaDatePickerCell',\n\n  props: {\n    otherMonth: { type: Boolean, default: false },\n    today: { type: Boolean, default: false },\n    inRange: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    selected: { type: Boolean, default: false },\n    weekend: { type: Boolean, default: false },\n    hidden: { type: Boolean, default: false },\n    focused: { type: Boolean, default: false },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['click'],\n\n  setup (props, { emit }) {\n    const onClick = () => {\n      if (!props.disabled) { emit('click') }\n    }\n\n    const { getColor } = useColors()\n\n    const bg = computed(() => getColor(props.color))\n\n    const { textColorComputed } = useTextColor(bg)\n\n    return {\n      bg,\n      onClick,\n      textColorComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import '../../../styles/resources';\n\n.va-date-picker-cell {\n  position: relative;\n  color: var(--va-date-picker-text-color);\n  line-height: var(--va-date-picker-cell-size);\n  min-height: var(--va-date-picker-cell-size);\n  min-width: var(--va-date-picker-cell-size);\n  cursor: pointer;\n  user-select: none;\n  border-radius: var(--va-date-picker-cell-radius);\n  box-sizing: border-box;\n  text-align: center;\n  z-index: 1;\n\n  &::after,\n  &::before {\n    content: '';\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    left: 0;\n    z-index: -1;\n    user-select: none;\n    box-sizing: border-box;\n    border-radius: var(--va-date-picker-cell-radius);\n  }\n\n  &_clear {\n    cursor: default;\n    opacity: 0;\n  }\n\n  &_highlighted-weekend {\n    color: var(--va-date-picker-weekends-color);\n  }\n\n  // &_in-range:not(.va-date-picker-cell_disabled) {\n  // &_in-range { // should be like a the line above if the `range` value\n  // will exclude not allows dates\n  &_in-range {\n    &::after {\n      background-color: var(--va-0-bg);\n      opacity: var(--va-date-picker-cell-background-opacity-in-range);\n    }\n  }\n\n  &_today {\n    font-weight: bold;\n\n    &::before {\n      border: 2px solid var(--va-date-picker-color);\n    }\n  }\n\n  &_selected {\n    background-color: var(--va-0-bg);\n    color: var(--va-1-text-color-computed);\n  }\n\n  &_other-month {\n    opacity: var(--va-date-picker-cell-opacity);\n  }\n\n  &:hover,\n  &_focused,\n  &_focused:hover {\n    &:not(\n    .va-date-picker-cell_selected):not(\n      .va-date-picker-cell_readonly):not(\n        .va-date-picker-cell_disabled):not(\n          .va-date-picker-cell_other-month) {\n      &::after {\n        background-color: var(--va-date-picker-selected-background);\n        opacity: var(--va-date-picker-cell-background-opacity-hover);\n      }\n    }\n  }\n\n  &_disabled {\n    &:not(.va-date-picker-cell_today) {\n      opacity: 0.5;\n    }\n\n    cursor: not-allowed;\n    opacity: var(--va-date-picker-cell-opacity);\n\n    &::after { // Crossline\n      opacity: var(--va-date-picker-cell-opacity);\n      border: none;\n      height: 2px;\n      width: 50%;\n      background: currentColor;\n      top: 50%;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n  }\n\n  &_readonly {\n    cursor: default;\n\n    &::before {\n      display: none;\n    }\n  }\n}\n</style>\n"],"mappings":";;;AA6BA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IACLC,UAAA,EAAY;MAAEC,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC5CC,KAAA,EAAO;MAAEH,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACvCE,OAAA,EAAS;MAAEJ,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACzCG,QAAA,EAAU;MAAEL,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC1CI,QAAA,EAAU;MAAEN,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC1CK,OAAA,EAAS;MAAEP,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACzCM,MAAA,EAAQ;MAAER,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACxCO,OAAA,EAAS;MAAET,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACzCQ,gBAAA,EAAkB;MAAEV,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAClDS,cAAA,EAAgB;MAAEX,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAChDU,QAAA,EAAU;MAAEZ,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IAC1CW,KAAA,EAAO;MAAEb,IAAA,EAAMc,MAAA;MAAQZ,OAAA,EAAS;IAAU;EAC5C;EAEAa,KAAA,EAAO,CAAC,OAAO;EAEfC,MAAOlB,KAAA,EAAO;IAAEmB;EAAA,GAAQ;IACtB,MAAMC,OAAA,GAAUA,CAAA,KAAM;MAChB,KAACpB,KAAA,CAAMO,QAAA,EAAU;QAAEY,IAAA,CAAK,OAAO;MAAE;IAAA;IAGjC;MAAEE;IAAA,IAAaC,SAAA;IAErB,MAAMC,EAAA,GAAKC,QAAA,CAAS,MAAMH,QAAA,CAASrB,KAAA,CAAMe,KAAK,CAAC;IAE/C,MAAM;MAAEU;IAAA,IAAsBC,YAAA,CAAaH,EAAE;IAEtC;MACLA,EAAA;MACAH,OAAA;MACAK;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}