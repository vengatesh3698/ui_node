{"ast":null,"code":"import { _ as _sfc_main } from \"./VaRating.vue_vue_type_script_lang-475a7db2.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, withKeys, Fragment, renderList, createBlock, mergeProps, withCtx, renderSlot, normalizeProps, guardReactiveProps, createCommentVNode, normalizeStyle, toDisplayString } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaRating_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"aria-label\"];\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_VaRatingItemNumberButton = resolveComponent(\"VaRatingItemNumberButton\");\n  const _component_va_rating_item = resolveComponent(\"va-rating-item\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-rating\", _ctx.rootClass]),\n    \"aria-label\": _ctx.tp(_ctx.$props.ariaLabel, {\n      max: _ctx.$props.max,\n      value: _ctx.$props.modelValue\n    })\n  }, [createElementVNode(\"div\", {\n    class: \"va-rating__item-wrapper\",\n    onKeyup: [_cache[0] || (_cache[0] = withKeys($event => _ctx.onArrowKeyPress(-1), [\"left\"])), _cache[1] || (_cache[1] = withKeys($event => _ctx.onArrowKeyPress(1), [\"right\"]))],\n    onMouseenter: _cache[2] || (_cache[2] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),\n    onMouseleave: _cache[3] || (_cache[3] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args))\n  }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.$props.max, itemNumber => {\n    return openBlock(), createBlock(_component_va_rating_item, mergeProps({\n      key: itemNumber,\n      class: \"va-rating__item\"\n    }, _ctx.VaRatingItemProps, {\n      \"aria-label\": _ctx.tp(_ctx.$props.ariaItemLabel, {\n        max: _ctx.$props.max,\n        value: itemNumber\n      }),\n      \"model-value\": _ctx.getItemValue(itemNumber - 1),\n      tabindex: _ctx.tabIndexComputed,\n      disabled: _ctx.$props.disabled,\n      readonly: _ctx.$props.readonly,\n      onHover: $event => _ctx.isInteractionsEnabled && _ctx.onItemHoveredValueUpdate(itemNumber - 1, $event),\n      \"onUpdate:modelValue\": $event => _ctx.isInteractionsEnabled && _ctx.onItemValueUpdate(itemNumber - 1, $event)\n    }), {\n      default: withCtx(({\n        value,\n        onClick\n      }) => [renderSlot(_ctx.$slots, \"item\", normalizeProps(guardReactiveProps({\n        value,\n        onClick,\n        index: itemNumber\n      })), () => [_ctx.$props.numbers ? (openBlock(), createBlock(_component_VaRatingItemNumberButton, mergeProps({\n        key: 0\n      }, _ctx.VaRatingItemNumberButtonProps, {\n        \"model-value\": value,\n        \"item-number\": itemNumber\n      }), null, 16, [\"model-value\", \"item-number\"])) : createCommentVNode(\"\", true)])]),\n      _: 2\n    }, 1040, [\"aria-label\", \"model-value\", \"tabindex\", \"disabled\", \"readonly\", \"onHover\", \"onUpdate:modelValue\"]);\n  }), 128))], 32), _ctx.$props.texts && _ctx.$props.texts.length === _ctx.$props.max ? (openBlock(), createElementBlock(\"span\", {\n    key: 0,\n    class: \"va-rating__text-wrapper\",\n    style: normalizeStyle({\n      color: _ctx.computedColor\n    })\n  }, toDisplayString(_ctx.$props.texts[Math.round(_ctx.visibleValue) - 1]), 5)) : createCommentVNode(\"\", true)], 10, _hoisted_1);\n}\nconst _VaRating = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaRating as _ };","map":{"version":3,"names":["resolveComponent","openBlock","createElementBlock","class","normalizeClass","_ctx","rootClass","tp","$props","ariaLabel","max","value","modelValue","createElementVNode","onKeyup","_cache","withKeys","$event","onArrowKeyPress","onMouseenter","args","onMouseEnter","onMouseleave","onMouseLeave","Fragment","renderList","itemNumber","createBlock","_component_va_rating_item","mergeProps","key","VaRatingItemProps","ariaItemLabel","getItemValue","tabindex","tabIndexComputed","disabled","readonly","onHover","isInteractionsEnabled","onItemHoveredValueUpdate","onItemValueUpdate","default","withCtx","onClick","renderSlot","$slots","normalizeProps","guardReactiveProps","index","numbers","_component_VaRatingItemNumberButton","VaRatingItemNumberButtonProps","texts","length","style","normalizeStyle","color","computedColor"],"sources":["../../../../../src/components/va-rating/VaRating.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-rating\"\n    :class=\"rootClass\"\n    :aria-label=\"tp($props.ariaLabel, { max: $props.max, value: $props.modelValue })\"\n  >\n    <div\n      class=\"va-rating__item-wrapper\"\n      @keyup.left=\"onArrowKeyPress(-1)\"\n      @keyup.right=\"onArrowKeyPress(1)\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n    >\n      <va-rating-item\n        v-for=\"itemNumber in $props.max\"\n        :key=\"itemNumber\"\n        class=\"va-rating__item\"\n        v-bind=\"VaRatingItemProps\"\n        :aria-label=\"tp($props.ariaItemLabel, { max: $props.max, value: itemNumber })\"\n        :model-value=\"getItemValue(itemNumber - 1)\"\n        :tabindex=\"tabIndexComputed\"\n        :disabled=\"$props.disabled\"\n        :readonly=\"$props.readonly\"\n        @hover=\"isInteractionsEnabled && onItemHoveredValueUpdate(itemNumber - 1, $event)\"\n        @update:model-value=\"isInteractionsEnabled && onItemValueUpdate(itemNumber - 1, $event)\"\n        v-slot=\"{ value, onClick }\"\n      >\n        <slot name=\"item\" v-bind=\"{ value: value, onClick: onClick, index: itemNumber }\">\n          <template v-if=\"$props.numbers\">\n            <VaRatingItemNumberButton\n              v-bind=\"VaRatingItemNumberButtonProps\"\n              :model-value=\"value\"\n              :item-number=\"itemNumber\"\n            />\n          </template>\n        </slot>\n      </va-rating-item>\n    </div>\n    <span\n      v-if=\"$props.texts && $props.texts.length === $props.max\"\n      class=\"va-rating__text-wrapper\"\n      :style=\"{ color: computedColor }\"\n    >\n      {{ $props.texts[Math.round(visibleValue) - 1] }}\n    </span>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport { useFormField, useFormFieldProps, useTranslation } from '../../composables'\nimport { useRating, useRatingProps } from './hooks/useRating'\nimport { useVaRatingColors, useVaRatingColorsProps } from './hooks/useVaRatingColors'\n\nimport { RatingValue } from './types'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport VaRatingItem from './components/VaRatingItem/VaRatingItem.vue'\nimport VaRatingItemNumberButton from './components/VaRatingItemNumberButton.vue'\n\nconst VaRatingItemProps = extractComponentProps(VaRatingItem)\nconst VaRatingItemNumberButtonProps = extractComponentProps(VaRatingItemNumberButton, ['modelValue', 'itemNumber'])\n\nexport default defineComponent({\n  name: 'VaRating',\n  props: {\n    ...useRatingProps,\n    ...useVaRatingColorsProps,\n    ...useFormFieldProps,\n    ...VaRatingItemProps,\n    ...VaRatingItemNumberButtonProps,\n    ...useComponentPresetProp,\n    numbers: { type: Boolean, default: false },\n    halves: { type: Boolean, default: false },\n    max: { type: Number, default: 5 },\n    texts: { type: Array as PropType<string[]>, default: () => [] },\n\n    ariaLabel: { type: String, default: '$t:currentRating' },\n    ariaItemLabel: { type: String, default: '$t:voteRating' },\n  },\n  emits: ['update:modelValue'],\n  components: { VaRatingItem, VaRatingItemNumberButton },\n  setup (props) {\n    const { computedClasses: rootClass } = useFormField('va-rating', props)\n    const rating = useRating(props)\n    const isInteractionsEnabled = computed(() => !props.disabled && !props.readonly)\n\n    return {\n      ...useTranslation(),\n      ...useVaRatingColors(props),\n      ...rating,\n      rootClass,\n      VaRatingItemProps: filterComponentProps(VaRatingItemProps),\n      VaRatingItemNumberButtonProps: filterComponentProps(VaRatingItemNumberButtonProps),\n      isInteractionsEnabled,\n      tabIndexComputed: computed(() => isInteractionsEnabled.value ? 0 : undefined),\n      onArrowKeyPress: (direction: 1 | -1) => {\n        const step = props.halves ? RatingValue.HALF : RatingValue.FULL\n        const nextStep = rating.visibleValue.value + step * direction\n        const min = props.clearable ? 0 : step\n        if (nextStep >= min && nextStep <= props.max) {\n          rating.onItemValueUpdate(rating.visibleValue.value, step * direction)\n        } else if (nextStep < min) {\n          rating.onItemValueUpdate(min, 0)\n        } else {\n          rating.onItemValueUpdate(props.max, direction === -1 ? step * direction : 0)\n        }\n      },\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-rating {\n  display: var(--va-rating-display);\n  font-family: var(--va-font-family);\n\n  &__number-item {\n    @include normalize-button();\n\n    font-size: var(--va-rating-number-item-font-size);\n    margin: var(--va-rating-number-item-margin);\n    font-weight: var(--va-rating-number-item-font-weight);\n\n    @include flex-center();\n\n    cursor: pointer;\n\n    @at-root {\n      .va-rating--disabled & {\n        @include va-disabled();\n      }\n\n      .va-rating--readonly & {\n        cursor: default;\n      }\n    }\n  }\n\n  &__item-wrapper {\n    display: flex;\n    cursor: var(--va-rating-item-wrapper-cursor);\n\n    @at-root {\n      .va-rating--readonly &,\n      .va-rating--disabled & {\n        cursor: default;\n      }\n    }\n  }\n\n  &-item {\n    display: flex;\n\n    @include flex-center();\n\n    .va-rating--disabled & {\n      @include va-disabled();\n\n      &__wrapper {\n        cursor: initial !important;\n      }\n    }\n\n    .va-rating--readonly & &__wrapper {\n      cursor: initial !important;\n    }\n  }\n\n  &__text-wrapper {\n    padding-left: 10px;\n  }\n}\n</style>\n"],"mappings":";;;;;;;oCACEA,gBAAA,CA4CM;EAzCH,OAAAC,SAAA,IAAAC,kBAAA,CAAsB,OAAS;IAAAC,KAAA,EAAAC,cAAA,eAAAC,IAAA,CAAAC,SAAA;IAEhC,cA+BMD,IAAA,CAAAE,EAAA,CAAAF,IAAA,CAAAG,MAAA,CAAAC,SAAA;MAAAC,GAAA,EAAAL,IAAA,CAAAG,MAAA,CAAAE,GAAA;MAAAC,KAAA,EAAAN,IAAA,CAAAG,MAAA,CAAAI;IAAA;EAAA,IA7BEC,kBAAA;IAAAV,KAAA;IAAAW,OAAA,G,mFAELC,MAAA,QAAUA,MAAA,CAAE,KAAAC,QAAA,CAAAC,MAAA,IAAAZ,IAAA,CAAAa,eAAA,iBACZ;IAAAC,YAAA,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAAf,IAAA,CAAAgB,YAAA,IAAAhB,IAAA,CAAAgB,YAAA,IAAAD,IAAA;IAAAE,YAAA,EAAAP,MAAA,CAED,CAuBiB,MAAAA,MAAA,UAAAK,IAAA,KAAAf,IAAA,CAAAkB,YAAA,IAtBMlB,IAAA,CAAOkB,YAAA,CAArB,GAAUH,IAAA;EAAA,KAAAnB,SAAA,CACX,IAAU,GAAAC,kBAAA,CAAAsB,QAAA,QAAAC,UAAA,CAAApB,IAAA,CAAAG,MAAA,CAAAE,GAAA,EAAAgB,UAAA;IACX,OAAAzB,SAAA,CAAkB,GAAA0B,WAAA,CAAAC,yBAAA,EAAAC,UAAA;MACfC,GAAA,EAAAJ,UAAA;MACPvB,KAAA;IAAA,GACAE,IAAA,CAAa0B,iBAAA;MACb,cAAU1B,IAAA,CAAgBE,EAAA,CAAAF,IAAA,CAAAG,MAAA,CAAAwB,aAAA;QAAAtB,GAAA,EAAAL,IAAA,CAAAG,MAAA,CAAAE,GAAA;QAAAC,KAAA,EAAAe;MAAA;MAC1B,eAAUrB,IAAA,CAAe4B,YAAA,CAAAP,UAAA;MACzBQ,QAAA,EAAU7B,IAAA,CAAA8B,gBAAA;MACVC,QAAA,EAAK/B,IAAA,CAAEG,MAAA,CAAA4B,QAAA;MACPC,QAAA,EAAkBhC,IAAA,CAAAG,MAAA,CAAA6B,QAAA;MAAAC,OAAA,EAAArB,MAAA,IAAAZ,IAAA,CAAAkC,qBAAA,IAAAlC,IAAA,CAAAmC,wBAAA,CAAAd,UAAA,MAAAT,MAAA;MACT,uBAAAA,MAAA,IAAOZ,IAAA,CAAOkC,qBAAA,IAAAlC,IAAA,CAAAoC,iBAAA,CAAAf,UAAA,MAAAT,MAAA;IAAA,CAExB;MAAAyB,OAAA,EACkBC,OAAA,CAAO,CAAO;QAAAhC,KAAA;QAAAiC;MAAA,OAAAC,UAAA,CAAAxC,IAAA,CAAAyC,MAAA,EAC5B,QAIEC,cAAA,CAAAC,kBAAA;QAJFrC,KAAA;QAIEiC,OAAA;QAHQK,KAAA,EAA6BvB;MAAA,YACpCrB,IAAA,CAAAG,MAAA,CAAA0C,OAAA,IAAAjD,SAAA,IACW0B,WAAA,CAAYwB,mCAAA,EAAAtB,UAAA;QAAAC,GAAA;MAAA,GAAAzB,IAAA,CAAA+C,6BAAA;QAAA,eAAAzC,KAAA;QAAA,eAAAe;;;;EAO1B,iBAAArB,IAAA,CAAAG,MAAA,CAAA6C,KAAA,IAAAhD,IAAA,CAAAG,MAAA,CAAA6C,KAAA,CAAAC,MAAA,KAAAjD,IAAA,CAAAG,MAAA,CAAAE,GAAA,IAAAT,SAAA,IACyBC,kBAAA;IAC9B4B,GAAA,EAAK;IAAA3B,KAAA;IAAAoD,KAAA,EAAAC,cAAA;MAAAC,KAAA,EAAApD,IAAA,CAAAqD;IAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}