{"ast":null,"code":"import { _ as _sfc_main } from \"./VaMessageListWrapper.vue_vue_type_script_lang-c37178cc.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, renderSlot, createVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaMessageListWrapper_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-message-list-wrapper\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_message_list = resolveComponent(\"va-message-list\");\n  return openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\"), createVNode(_component_va_message_list, {\n    color: _ctx.messagesColor,\n    limit: _ctx.errorLimit,\n    \"has-error\": _ctx.hasError,\n    \"model-value\": _ctx.messagesComputed\n  }, null, 8, [\"color\", \"limit\", \"has-error\", \"model-value\"])]);\n}\nconst VaMessageListWrapper = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { VaMessageListWrapper as V };","map":{"version":3,"names":["resolveComponent","openBlock","createElementBlock","_hoisted_1","renderSlot","_ctx","$slots","createVNode","_component_va_message_list","color","messagesColor","limit","errorLimit","hasError","messagesComputed"],"sources":["../../../../../../src/components/va-input/components/VaMessageListWrapper.vue"],"sourcesContent":["<template>\n  <div class=\"va-message-list-wrapper\">\n    <slot />\n    <va-message-list\n      :color=\"messagesColor\"\n      :limit=\"errorLimit\"\n      :has-error=\"hasError\"\n      :model-value=\"messagesComputed\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRef } from 'vue'\n\nimport { useValidationProps } from '../../../composables'\n\nimport { VaMessageList } from './VaMessageList'\n\nexport default defineComponent({\n  name: 'VaMessageListWrapper',\n\n  components: { VaMessageList },\n\n  props: {\n    ...useValidationProps,\n  },\n\n  setup (props) {\n    return {\n      messagesColor: computed(() => {\n        if (props.error) { return 'danger' }\n        if (props.success) { return 'success' }\n        return ''\n      }),\n      hasError: toRef(props, 'error'),\n      messagesComputed: computed(() => props.error ? props.errorMessages : props.messages),\n      errorLimit: computed(() => props.error ? Number(props.errorCount) : 99),\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-message-list-wrapper {\n  font-family: var(--va-font-family);\n}\n</style>\n"],"mappings":";;;;;;;;qCACEA,gBAAA,CAQM;SANJC,SAAA,CAKE,GAAAC,kBAAA,QAAAC,UAAA,GAAAC,UAAA,CAJQC,IAAA,CAAaC,MAAA,cAAAC,WAAA,CACbC,0BAAA,EAAU;IACjBC,KAAA,EAASJ,IAAA,CAAAK,aAAA;IACTC,KAAA,EAAAN,IAAA,CAAAO,UAAA;IAAA,aAAAP,IAAA,CAAAQ,QAAA;IAAA,eAAAR,IAAA,CAAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}