{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { u as useStatefulEmits, a as useStatefulProps, b as useStateful } from \"../../composables/useStateful-50e4a6b9.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useKeyboardOnlyFocus } from \"../../composables/useKeyboardOnlyFocus-2734fefc.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaColorIndicator\",\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Boolean,\n      default: null\n    },\n    color: {\n      type: String,\n      default: \"\"\n    },\n    square: {\n      type: Boolean,\n      default: false\n    },\n    size: {\n      type: String,\n      default: \"1rem\"\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      valueComputed\n    } = useStateful(props, emit);\n    const {\n      getColor\n    } = useColors();\n    const {\n      hasKeyboardFocus,\n      keyboardFocusListeners\n    } = useKeyboardOnlyFocus();\n    const colorComputed = computed(() => getColor(props.color));\n    const borderRadiusComputed = computed(() => props.square ? \"0px\" : \"50%\");\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size\n    }));\n    const computedClass = computed(() => ({\n      \"va-color-indicator--selected\": valueComputed.value,\n      \"va-color-indicator--on-keyboard-focus\": hasKeyboardFocus.value\n    }));\n    const toggleModelValue = () => {\n      valueComputed.value = !valueComputed.value;\n    };\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaColorIndicator.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","emits","useStatefulEmits","props","useStatefulProps","useComponentPresetProp","modelValue","type","Boolean","default","color","String","square","size","setup","emit","valueComputed","useStateful","getColor","useColors","hasKeyboardFocus","keyboardFocusListeners","useKeyboardOnlyFocus","colorComputed","computed","borderRadiusComputed","computedStyle","backgroundColor","value","height","width","computedClass","toggleModelValue"],"sources":["../../../../../src/components/va-color-indicator/VaColorIndicator.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    :class=\"computedClass\"\n    :style=\"typeof computedStyle === 'object' ? (Array.isArray(computedStyle) ? [...computedStyle, `--va-0-border-radius-computed: ${String(borderRadiusComputed)}`] : { ...computedStyle, '--va-0-border-radius-computed': String(borderRadiusComputed) }) : computedStyle + `;--va-0-border-radius-computed: ${String(borderRadiusComputed)}`\"\n    @click=\"toggleModelValue\"\n    @keydown.enter=\"toggleModelValue\"\n    @keydown.space=\"toggleModelValue\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  useColors,\n  useStateful,\n  useStatefulProps,\n  useStatefulEmits,\n  useKeyboardOnlyFocus,\n  useComponentPresetProp,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n    size: { type: String, default: '1rem' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const colorComputed = computed(() => getColor(props.color))\n    const borderRadiusComputed = computed(() => props.square ? '0px' : '50%')\n\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: var(--va-0-border-radius-computed);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: content-box;\n\n  &__core {\n    border-radius: var(--va-0-border-radius-computed);\n    height: 1rem;\n    width: 1rem;\n  }\n\n  &--selected {\n    background-color: var(--va-primary);\n    border-color: var(--va-primary);\n  }\n\n  &--on-keyboard-focus {\n    @include focus-outline(var(--va-0-border-radius-computed));\n  }\n}\n</style>\n"],"mappings":";;;;;AA6BA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO,CAAC,GAAGC,gBAAgB;EAC3BC,KAAA,EAAO;IACL,GAAGC,gBAAA;IACH,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAK;IAC3CC,KAAA,EAAO;MAAEH,IAAA,EAAMI,MAAA;MAAQF,OAAA,EAAS;IAAG;IACnCG,MAAA,EAAQ;MAAEL,IAAA,EAAMC,OAAA;MAASC,OAAA,EAAS;IAAM;IACxCI,IAAA,EAAM;MAAEN,IAAA,EAAMI,MAAA;MAAQF,OAAA,EAAS;IAAO;EACxC;EACAK,MAAOX,KAAA,EAAO;IAAEY;EAAA,GAAQ;IACtB,MAAM;MAAEC;IAAkB,IAAAC,WAAA,CAAYd,KAAA,EAAOY,IAAI;IAC3C;MAAEG;IAAA,IAAaC,SAAA;IACrB,MAAM;MAAEC,gBAAA;MAAkBC;IAAuB,IAAIC,oBAAA,CAAqB;IAE1E,MAAMC,aAAA,GAAgBC,QAAA,CAAS,MAAMN,QAAA,CAASf,KAAA,CAAMO,KAAK,CAAC;IAC1D,MAAMe,oBAAA,GAAuBD,QAAA,CAAS,MAAMrB,KAAA,CAAMS,MAAA,GAAS,QAAQ,KAAK;IAElE,MAAAc,aAAA,GAAgBF,QAAA,CAAS,OAAO;MACpCG,eAAA,EAAiBJ,aAAA,CAAcK,KAAA;MAC/BC,MAAA,EAAQ1B,KAAA,CAAMU,IAAA;MACdiB,KAAA,EAAO3B,KAAA,CAAMU;IACb;IAEI,MAAAkB,aAAA,GAAgBP,QAAA,CAAS,OAAO;MACpC,gCAAgCR,aAAA,CAAcY,KAAA;MAC9C,yCAAyCR,gBAAA,CAAiBQ;IAC1D;IAEF,MAAMI,gBAAA,GAAmBA,CAAA,KAAM;MAAgBhB,aAAA,CAAAY,KAAA,GAAQ,CAACZ,aAAA,CAAcY,KAAA;IAAA;IAE/D;MACLZ,aAAA;MACAU,aAAA;MACAK,aAAA;MACAN,oBAAA;MACAJ,sBAAA;MACAW;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}