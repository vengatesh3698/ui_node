{"ast":null,"code":"import { ref } from \"vue\";\nfunction useKeyboardOnlyFocus() {\n  const hasKeyboardFocus = ref(false);\n  let previouslyClicked = false;\n  const keyboardFocusListeners = {\n    mousedown: () => {\n      previouslyClicked = true;\n    },\n    focus: () => {\n      if (!previouslyClicked) {\n        hasKeyboardFocus.value = true;\n      }\n      previouslyClicked = false;\n    },\n    blur: () => {\n      hasKeyboardFocus.value = false;\n      previouslyClicked = false;\n    }\n  };\n  return {\n    hasKeyboardFocus,\n    keyboardFocusListeners\n  };\n}\nexport { useKeyboardOnlyFocus as u };","map":{"version":3,"names":["useKeyboardOnlyFocus","hasKeyboardFocus","ref","previouslyClicked","keyboardFocusListeners","mousedown","focus","value","blur"],"sources":["../../../../src/composables/useKeyboardOnlyFocus.ts"],"sourcesContent":["import { ref } from 'vue'\n\nexport function useKeyboardOnlyFocus () {\n  const hasKeyboardFocus = ref(false)\n  let previouslyClicked = false\n\n  const keyboardFocusListeners = {\n    mousedown: () => {\n      previouslyClicked = true\n    },\n\n    focus: () => {\n      if (!previouslyClicked) {\n        hasKeyboardFocus.value = true\n      }\n\n      previouslyClicked = false\n    },\n\n    blur: () => {\n      hasKeyboardFocus.value = false\n      previouslyClicked = false\n    },\n  }\n\n  return {\n    hasKeyboardFocus,\n    keyboardFocusListeners,\n  }\n}\n"],"mappings":";AAEO,SAASA,qBAAA,EAAwB;EAChC,MAAAC,gBAAA,GAAmBC,GAAA,CAAI,KAAK;EAClC,IAAIC,iBAAA,GAAoB;EAExB,MAAMC,sBAAA,GAAyB;IAC7BC,SAAA,EAAWA,CAAA,KAAM;MACKF,iBAAA;IACtB;IAEAG,KAAA,EAAOA,CAAA,KAAM;MACX,IAAI,CAACH,iBAAA,EAAmB;QACtBF,gBAAA,CAAiBM,KAAA,GAAQ;MAC3B;MAEoBJ,iBAAA;IACtB;IAEAK,IAAA,EAAMA,CAAA,KAAM;MACVP,gBAAA,CAAiBM,KAAA,GAAQ;MACLJ,iBAAA;IACtB;EAAA;EAGK;IACLF,gBAAA;IACAG;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}