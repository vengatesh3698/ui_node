{"ast":null,"code":"import { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { defineComponent, computed } from \"vue\";\nimport { b as clamp } from \"../../../vendor-fff696df.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nimport { u as useTextColor } from \"../../composables/useTextColor-f36510ca.mjs\";\nimport { u as useTranslation } from \"../../composables/useTranslation-acf7d88d.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaProgressBar\",\n  props: {\n    ...useComponentPresetProp,\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    indeterminate: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    size: {\n      type: [Number, String],\n      default: \"medium\"\n    },\n    buffer: {\n      type: Number,\n      default: 100\n    },\n    rounded: {\n      type: Boolean,\n      default: true\n    },\n    reverse: {\n      type: Boolean,\n      default: false\n    },\n    contentInside: {\n      type: Boolean,\n      default: false\n    },\n    showPercent: {\n      type: Boolean,\n      default: false\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    ariaLabel: {\n      type: String,\n      default: \"$t:progressState\"\n    }\n  },\n  setup(props) {\n    const {\n      getColor,\n      getHoverColor\n    } = useColors();\n    const {\n      textColorComputed\n    } = useTextColor();\n    const colorComputed = computed(() => getColor(props.color));\n    const isTextSize = computed(() => typeof props.size === \"string\" && [\"small\", \"medium\", \"large\"].includes(props.size));\n    const getCSSHeight = () => {\n      if (typeof props.size === \"number\") {\n        return `${props.size}px`;\n      }\n      if (isTextSize.value) {\n        return;\n      }\n      return props.size;\n    };\n    const {\n      tp\n    } = useTranslation();\n    const progressBarValue = computed(() => 100 / props.max * props.modelValue);\n    return {\n      rootClass: computed(() => ({\n        \"va-progress-bar--square\": !props.rounded,\n        [`va-progress-bar--${props.size}`]: isTextSize.value\n      })),\n      rooStyle: computed(() => ({\n        \"--va-progress-bar-color\": colorComputed.value,\n        \"--va-progress-bar-background-color\": getHoverColor(colorComputed.value)\n      })),\n      wrapperStyle: computed(() => ({\n        height: getCSSHeight()\n      })),\n      bufferStyle: computed(() => ({\n        width: `${props.indeterminate ? 100 : clamp(props.buffer, 0, 100)}%`,\n        color: textColorComputed.value,\n        [props.reverse ? \"right\" : \"left\"]: 0\n      })),\n      progressStyle: computed(() => ({\n        marginLeft: props.reverse ? \"auto\" : void 0,\n        width: `${clamp(progressBarValue.value, 0, 100)}%`\n      })),\n      intermediateStyle: computed(() => ({\n        animationDirection: props.reverse ? \"reverse\" : \"normal\"\n      })),\n      ariaAttributesComputed: computed(() => ({\n        role: \"progressbar\",\n        \"aria-label\": tp(props.ariaLabel),\n        \"aria-valuenow\": !props.indeterminate ? props.modelValue : void 0\n      }))\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaProgressBar.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useComponentPresetProp","modelValue","type","Number","default","indeterminate","Boolean","color","String","size","buffer","rounded","reverse","contentInside","showPercent","max","ariaLabel","setup","getColor","getHoverColor","useColors","textColorComputed","useTextColor","colorComputed","computed","isTextSize","includes","getCSSHeight","value","tp","useTranslation","progressBarValue","rootClass","rooStyle","wrapperStyle","height","bufferStyle","width","clamp","progressStyle","marginLeft","intermediateStyle","animationDirection","ariaAttributesComputed","role"],"sources":["../../../../../src/components/va-progress-bar/VaProgressBar.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-progress-bar\"\n    :class=\"rootClass\"\n    :style=\"rooStyle\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <div\n      v-if=\"!$props.contentInside\"\n      class=\"va-progress-bar__info\"\n    >\n      <slot v-bind=\"{ value: $props.modelValue }\">\n        <template v-if=\"$props.showPercent\">\n          {{ $props.modelValue }}%\n        </template>\n      </slot>\n    </div>\n\n    <div class=\"va-progress-bar__wrapper\" :style=\"wrapperStyle\">\n      <div class=\"va-progress-bar__buffer\" :style=\"bufferStyle\">\n        <slot v-if=\"$props.contentInside\" v-bind=\"{ value: $props.modelValue }\">\n          <template v-if=\"$props.showPercent\">\n            {{ $props.modelValue }}%\n          </template>\n        </slot>\n      </div>\n\n      <template v-if=\"indeterminate\">\n        <div\n          class=\"va-progress-bar__progress--indeterminate-start\"\n          :style=\"intermediateStyle\"\n        />\n        <div\n          class=\"va-progress-bar__progress--indeterminate-end\"\n          :style=\"intermediateStyle\"\n        />\n      </template>\n      <div v-else class=\"va-progress-bar__progress\" :style=\"progressStyle\" />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\nimport { computed, defineComponent, PropType, StyleValue } from 'vue'\nimport clamp from 'lodash/clamp.js'\n\nimport { useColors, useTextColor, useTranslation } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaProgressBar',\n\n  props: {\n    ...useComponentPresetProp,\n    modelValue: { type: Number, default: 0 },\n    indeterminate: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    size: {\n      type: [Number, String] as PropType<number | 'medium' | 'large' | 'small'>,\n      default: 'medium',\n    },\n    buffer: { type: Number, default: 100 },\n    rounded: { type: Boolean, default: true },\n    reverse: { type: Boolean, default: false },\n    contentInside: { type: Boolean, default: false },\n    showPercent: { type: Boolean, default: false },\n    max: { type: Number, default: 100 },\n    ariaLabel: { type: String, default: '$t:progressState' },\n  },\n\n  setup (props) {\n    const { getColor, getHoverColor } = useColors()\n    const { textColorComputed } = useTextColor()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const isTextSize = computed(() => typeof props.size === 'string' && ['small', 'medium', 'large'].includes(props.size))\n\n    const getCSSHeight = () => {\n      if (typeof props.size === 'number') { return `${props.size}px` }\n      if (isTextSize.value) { return }\n\n      return props.size\n    }\n\n    const { tp } = useTranslation()\n\n    const progressBarValue = computed(() => 100 / props.max * props.modelValue)\n\n    return {\n      rootClass: computed(() => ({\n        'va-progress-bar--square': !props.rounded,\n        [`va-progress-bar--${props.size}`]: isTextSize.value,\n      })),\n\n      rooStyle: computed(() => ({\n        '--va-progress-bar-color': colorComputed.value,\n        '--va-progress-bar-background-color': getHoverColor(colorComputed.value),\n      }) as StyleValue),\n\n      wrapperStyle: computed(() => ({\n        height: getCSSHeight(),\n      })),\n\n      bufferStyle: computed(() => ({\n        width: `${props.indeterminate ? 100 : clamp(props.buffer, 0, 100)}%`,\n        color: textColorComputed.value,\n        [props.reverse ? 'right' : 'left']: 0,\n      })),\n\n      progressStyle: computed(() => ({\n        marginLeft: props.reverse ? 'auto' : undefined,\n        width: `${clamp(progressBarValue.value, 0, 100)}%`,\n      })),\n\n      intermediateStyle: computed(() => ({\n        animationDirection: props.reverse ? 'reverse' : 'normal',\n      })),\n\n      ariaAttributesComputed: computed(() => ({\n        role: 'progressbar',\n        'aria-label': tp(props.ariaLabel),\n        'aria-valuenow': !props.indeterminate ? props.modelValue : undefined,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import 'variables';\n\n.va-progress-bar {\n  $p: &;\n\n  width: var(--va-progress-bar-width);\n  position: relative;\n  overflow: hidden;\n  font-family: var(--va-font-family);\n  line-height: var(--va-progress-bar-line-height);\n\n  &__info {\n    font-weight: var(--va-progress-bar-info-font-weight);\n    text-align: var(--va-progress-bar-info-text-align);\n    text-transform: var(--va-progress-bar-info-text-transform);\n\n    &:not(:empty) {\n      margin-bottom: var(--va-progress-bar-info-not-empty-margin-bottom);\n    }\n  }\n\n  &__wrapper {\n    position: relative;\n    overflow: hidden;\n    border-radius: var(--va-progress-bar-border-radius);\n\n    #{$p}--small & {\n      height: var(--va-progress-bar-sm-height);\n    }\n\n    #{$p}--medium & {\n      height: var(--va-progress-bar-height);\n    }\n\n    #{$p}--large & {\n      height: var(--va-progress-bar-lg-height);\n    }\n  }\n\n  &--square &__wrapper {\n    --va-progress-bar-border-radius: 0;\n  }\n\n  &__buffer {\n    position: absolute;\n    top: 0;\n    height: inherit;\n    border-radius: inherit;\n    transition: var(--va-progress-bar-buffer-transition);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    letter-spacing: var(--va-progress-bar-letter-spacing);\n    font-size: var(--va-progress-bar-font-size);\n    font-weight: var(--va-progress-bar-font-weight);\n    background-color: var(--va-progress-bar-background-color);\n  }\n\n  &__progress {\n    height: inherit;\n    border-radius: inherit;\n    transition: var(--va-progress-bar-transition);\n    background-color: var(--va-progress-bar-color);\n\n    &--indeterminate-start {\n      background-color: var(--va-progress-bar-color);\n      animation: va-progress-bar-indeterminate-start 2s ease-in infinite;\n      position: absolute;\n      height: inherit;\n    }\n\n    &--indeterminate-end {\n      background-color: var(--va-progress-bar-color);\n      animation: va-progress-bar-indeterminate-end 2s ease-out 1s infinite;\n      position: absolute;\n      height: inherit;\n    }\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-start {\n  0% {\n    width: 10%;\n    left: -10%;\n  }\n\n  50% {\n    width: 100%;\n    left: 100%;\n  }\n\n  100% {\n    width: 100%;\n    left: 100%;\n  }\n}\n\n@keyframes va-progress-bar-indeterminate-end {\n  0% {\n    width: 100%;\n    left: -100%;\n  }\n\n  50% {\n    width: 10%;\n    left: 100%;\n  }\n\n  100% {\n    width: 10%;\n    left: 100%;\n  }\n}\n</style>\n"],"mappings":";;;;;;AAiDA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IACL,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAE;IACvCC,aAAA,EAAe;MAAEH,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAM;IAC/CG,KAAA,EAAO;MAAEL,IAAA,EAAMM,MAAA;MAAQJ,OAAA,EAAS;IAAU;IAC1CK,IAAA,EAAM;MACJP,IAAA,EAAM,CAACC,MAAA,EAAQK,MAAM;MACrBJ,OAAA,EAAS;IACX;IACAM,MAAA,EAAQ;MAAER,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAI;IACrCO,OAAA,EAAS;MAAET,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAK;IACxCQ,OAAA,EAAS;MAAEV,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAM;IACzCS,aAAA,EAAe;MAAEX,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAM;IAC/CU,WAAA,EAAa;MAAEZ,IAAA,EAAMI,OAAA;MAASF,OAAA,EAAS;IAAM;IAC7CW,GAAA,EAAK;MAAEb,IAAA,EAAMC,MAAA;MAAQC,OAAA,EAAS;IAAI;IAClCY,SAAA,EAAW;MAAEd,IAAA,EAAMM,MAAA;MAAQJ,OAAA,EAAS;IAAmB;EACzD;EAEAa,MAAOlB,KAAA,EAAO;IACZ,MAAM;MAAEmB,QAAA;MAAUC;IAAc,IAAIC,SAAA,CAAU;IACxC;MAAEC;IAAA,IAAsBC,YAAA;IAC9B,MAAMC,aAAA,GAAgBC,QAAA,CAAS,MAAMN,QAAA,CAASnB,KAAA,CAAMQ,KAAK,CAAC;IAE1D,MAAMkB,UAAA,GAAaD,QAAA,CAAS,MAAM,OAAOzB,KAAA,CAAMU,IAAA,KAAS,YAAY,CAAC,SAAS,UAAU,OAAO,EAAEiB,QAAA,CAAS3B,KAAA,CAAMU,IAAI,CAAC;IAErH,MAAMkB,YAAA,GAAeA,CAAA,KAAM;MACrB,WAAO5B,KAAA,CAAMU,IAAA,KAAS,UAAU;QAAE,OAAO,GAAGV,KAAA,CAAMU,IAAA;MAAS;MAC/D,IAAIgB,UAAA,CAAWG,KAAA,EAAO;QAAE;MAAO;MAE/B,OAAO7B,KAAA,CAAMU,IAAA;IAAA;IAGT;MAAEoB;IAAA,IAAOC,cAAA;IAEf,MAAMC,gBAAA,GAAmBP,QAAA,CAAS,MAAM,MAAMzB,KAAA,CAAMgB,GAAA,GAAMhB,KAAA,CAAME,UAAU;IAEnE;MACL+B,SAAA,EAAWR,QAAA,CAAS,OAAO;QACzB,2BAA2B,CAACzB,KAAA,CAAMY,OAAA;QAClC,CAAC,oBAAoBZ,KAAA,CAAMU,IAAA,EAAM,GAAGgB,UAAA,CAAWG;MAAA,EAC/C;MAEFK,QAAA,EAAUT,QAAA,CAAS,OAAO;QACxB,2BAA2BD,aAAA,CAAcK,KAAA;QACzC,sCAAsCT,aAAA,CAAcI,aAAA,CAAcK,KAAK;MAAA,EACzD;MAEhBM,YAAA,EAAcV,QAAA,CAAS,OAAO;QAC5BW,MAAA,EAAQR,YAAA,CAAa;MAAA,EACrB;MAEFS,WAAA,EAAaZ,QAAA,CAAS,OAAO;QAC3Ba,KAAA,EAAO,GAAGtC,KAAA,CAAMM,aAAA,GAAgB,MAAMiC,KAAA,CAAMvC,KAAA,CAAMW,MAAA,EAAQ,GAAG,GAAG;QAChEH,KAAA,EAAOc,iBAAA,CAAkBO,KAAA;QACzB,CAAC7B,KAAA,CAAMa,OAAA,GAAU,UAAU,MAAM,GAAG;MAAA,EACpC;MAEF2B,aAAA,EAAef,QAAA,CAAS,OAAO;QAC7BgB,UAAA,EAAYzC,KAAA,CAAMa,OAAA,GAAU,SAAS;QACrCyB,KAAA,EAAO,GAAGC,KAAA,CAAMP,gBAAA,CAAiBH,KAAA,EAAO,GAAG,GAAG;MAAA,EAC9C;MAEFa,iBAAA,EAAmBjB,QAAA,CAAS,OAAO;QACjCkB,kBAAA,EAAoB3C,KAAA,CAAMa,OAAA,GAAU,YAAY;MAAA,EAChD;MAEF+B,sBAAA,EAAwBnB,QAAA,CAAS,OAAO;QACtCoB,IAAA,EAAM;QACN,cAAcf,EAAA,CAAG9B,KAAA,CAAMiB,SAAS;QAChC,iBAAiB,CAACjB,KAAA,CAAMM,aAAA,GAAgBN,KAAA,CAAME,UAAA,GAAa;MAAA,EAC3D;IAAA;EAEN;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}