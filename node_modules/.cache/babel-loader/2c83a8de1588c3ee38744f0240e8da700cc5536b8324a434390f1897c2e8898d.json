{"ast":null,"code":"import { i as isDate } from \"../../../../vendor-fff696df.mjs\";\nconst isDatesDayEqual = (date1, date2) => (date1 == null ? void 0 : date1.toDateString()) === (date2 == null ? void 0 : date2.toDateString());\nconst isDatesYearEqual = (date1, date2) => {\n  return (date1 == null ? void 0 : date1.getFullYear()) === (date2 == null ? void 0 : date2.getFullYear());\n};\nconst isDatesMonthEqual = (date1, date2) => {\n  return isDatesYearEqual(date1, date2) && (date1 == null ? void 0 : date1.getMonth()) === (date2 == null ? void 0 : date2.getMonth());\n};\nconst createYearDate = year => {\n  const date = /* @__PURE__ */new Date();\n  date.setFullYear(year);\n  return date;\n};\nconst isRange = value => {\n  return typeof value === \"object\" && (\"start\" in value || \"end\" in value);\n};\nconst isSingleDate = value => isDate(value);\nconst isDates = value => Array.isArray(value);\nexport { isSingleDate as a, isRange as b, createYearDate as c, isDatesMonthEqual as d, isDatesDayEqual as e, isDatesYearEqual as f, isDates as i };","map":{"version":3,"names":["isDatesDayEqual","date1","date2","toDateString","isDatesYearEqual","getFullYear","isDatesMonthEqual","getMonth","createYearDate","year","date","Date","setFullYear","isRange","value","isSingleDate","isDate","isDates","Array","isArray"],"sources":["../../../../../../src/components/va-date-picker/utils/date-utils.ts"],"sourcesContent":["import isDate from 'lodash/isDate.js'\n\nimport { DatePickerModelValue, DatePickerRange } from '../types'\nimport { DateInputModelValue } from '../../va-date-input/types'\n\nexport const isDatesDayEqual = (date1?: Date | null, date2?: Date | null): boolean => date1?.toDateString() === date2?.toDateString()\n\nexport const isDatesYearEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return date1?.getFullYear() === date2?.getFullYear()\n}\n\nexport const isDatesMonthEqual = (date1?: Date | null, date2?: Date | null): boolean => {\n  return isDatesYearEqual(date1, date2) && date1?.getMonth() === date2?.getMonth()\n}\n\nexport const createYearDate = (year: number) => {\n  const date = new Date()\n  date.setFullYear(year)\n  return date\n}\n\nexport const isDatesArrayIncludeDay = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesDayEqual(d, date))\n}\n\nexport const isDatesArrayIncludeMonth = (dates: Date[], date: Date): boolean => {\n  return !!dates.find((d) => isDatesMonthEqual(d, date))\n}\n\nexport const isRange = (value: DatePickerModelValue | DateInputModelValue): value is DatePickerRange => {\n  return typeof value === 'object' && ('start' in value || 'end' in value)\n}\n\nexport const isSingleDate = (value: DatePickerModelValue | DateInputModelValue): value is Date => isDate(value)\n\nexport const isDates = (value: DatePickerModelValue | DateInputModelValue): value is Date[] => Array.isArray(value)\n"],"mappings":";AAKa,MAAAA,eAAA,GAAkBA,CAACC,KAAA,EAAqBC,KAAA,MAAiCD,KAAA,oBAAAA,KAAA,CAAOE,YAAA,SAAmBD,KAAA,oBAAAA,KAAA,CAAOC,YAAA;AAE1G,MAAAC,gBAAA,GAAmBA,CAACH,KAAA,EAAqBC,KAAA,KAAiC;EACrF,QAAOD,KAAA,oBAAAA,KAAA,CAAOI,WAAA,SAAkBH,KAAA,oBAAAA,KAAA,CAAOG,WAAA;AACzC;AAEa,MAAAC,iBAAA,GAAoBA,CAACL,KAAA,EAAqBC,KAAA,KAAiC;EAC/E,OAAAE,gBAAA,CAAiBH,KAAA,EAAOC,KAAK,MAAKD,KAAA,oBAAAA,KAAA,CAAOM,QAAA,SAAeL,KAAA,oBAAAA,KAAA,CAAOK,QAAA;AACxE;AAEa,MAAAC,cAAA,GAAkBC,IAAA,IAAiB;EACxC,MAAAC,IAAA,sBAAWC,IAAA;EACjBD,IAAA,CAAKE,WAAA,CAAYH,IAAI;EACd,OAAAC,IAAA;AACT;AAUa,MAAAG,OAAA,GAAWC,KAAA,IAAgF;EACtG,OAAO,OAAOA,KAAA,KAAU,aAAa,WAAWA,KAAA,IAAS,SAASA,KAAA;AACpE;AAEO,MAAMC,YAAA,GAAgBD,KAAA,IAAqEE,MAAA,CAAOF,KAAK;AAEvG,MAAMG,OAAA,GAAWH,KAAA,IAAuEI,KAAA,CAAMC,OAAA,CAAQL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}