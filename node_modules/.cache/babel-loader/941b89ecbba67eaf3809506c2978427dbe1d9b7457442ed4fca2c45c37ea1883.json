{"ast":null,"code":"import Toaster from './Toaster.vue';\nimport eventBus from './helpers/event-bus.js';\nimport mount from './helpers/mount-component';\nconst Api = (globalOptions = {}) => {\n  return {\n    show(message, options = {}) {\n      let localOptions = {\n        message,\n        ...options\n      };\n      const c = mount(Toaster, {\n        props: {\n          ...globalOptions,\n          ...localOptions\n        }\n      });\n      return c;\n    },\n    clear() {\n      eventBus.$emit('toast-clear');\n    },\n    success(message, options = {}) {\n      options.type = 'success';\n      return this.show(message, options);\n    },\n    error(message, options = {}) {\n      options.type = 'error';\n      return this.show(message, options);\n    },\n    info(message, options = {}) {\n      options.type = 'info';\n      return this.show(message, options);\n    },\n    warning(message, options = {}) {\n      options.type = 'warning';\n      return this.show(message, options);\n    }\n  };\n};\nexport default Api;","map":{"version":3,"names":["Toaster","eventBus","mount","Api","globalOptions","show","message","options","localOptions","c","props","clear","$emit","success","type","error","info","warning"],"sources":["/etc/vrv/code/gn_ui/node_modules/@meforma/vue-toaster/src/api.js"],"sourcesContent":["import Toaster from './Toaster.vue'\nimport eventBus from './helpers/event-bus.js'\nimport mount from './helpers/mount-component'\n\nconst Api = (globalOptions = {}) => {\n  return {\n    show(message, options = {}) {\n      let localOptions = { message, ...options }\n      const c = mount(Toaster, {\n        props: { ...globalOptions, ...localOptions }\n      })\n      return c\n    },\n    clear() {\n      eventBus.$emit('toast-clear')\n    },\n    success(message, options = {}) {\n      options.type = 'success'\n      return this.show(message, options)\n    },\n    error(message, options = {}) {\n      options.type = 'error'\n      return this.show(message, options)\n    },\n    info(message, options = {}) {\n      options.type = 'info'\n      return this.show(message, options)\n    },\n    warning(message, options = {}) {\n      options.type = 'warning'\n      return this.show(message, options)\n    }\n  }\n}\n\nexport default Api\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,2BAA2B;AAE7C,MAAMC,GAAG,GAAGA,CAACC,aAAa,GAAG,CAAC,CAAC,KAAK;EAClC,OAAO;IACLC,IAAIA,CAACC,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC1B,IAAIC,YAAY,GAAG;QAAEF,OAAO;QAAE,GAAGC;MAAQ,CAAC;MAC1C,MAAME,CAAC,GAAGP,KAAK,CAACF,OAAO,EAAE;QACvBU,KAAK,EAAE;UAAE,GAAGN,aAAa;UAAE,GAAGI;QAAa;MAC7C,CAAC,CAAC;MACF,OAAOC,CAAC;IACV,CAAC;IACDE,KAAKA,CAAA,EAAG;MACNV,QAAQ,CAACW,KAAK,CAAC,aAAa,CAAC;IAC/B,CAAC;IACDC,OAAOA,CAACP,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC7BA,OAAO,CAACO,IAAI,GAAG,SAAS;MACxB,OAAO,IAAI,CAACT,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC;IACpC,CAAC;IACDQ,KAAKA,CAACT,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC3BA,OAAO,CAACO,IAAI,GAAG,OAAO;MACtB,OAAO,IAAI,CAACT,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC;IACpC,CAAC;IACDS,IAAIA,CAACV,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC1BA,OAAO,CAACO,IAAI,GAAG,MAAM;MACrB,OAAO,IAAI,CAACT,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC;IACpC,CAAC;IACDU,OAAOA,CAACX,OAAO,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;MAC7BA,OAAO,CAACO,IAAI,GAAG,SAAS;MACxB,OAAO,IAAI,CAACT,IAAI,CAACC,OAAO,EAAEC,OAAO,CAAC;IACpC;EACF,CAAC;AACH,CAAC;AAED,eAAeJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}