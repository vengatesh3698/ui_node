{"ast":null,"code":"import { inject, computed } from \"vue\";\nimport { w as warn } from \"../utils/console-42c8e8cc.mjs\";\nimport { v as vaBreakpointSymbol } from \"../services/breakpoint/index-a161fafe.mjs\";\nimport { u as useReactiveComputed } from \"./useReactiveComputed-2cefedc6.mjs\";\nimport { u as useGlobalConfig } from \"./useGlobalConfig-29bee2de.mjs\";\nimport { u as useIsMounted } from \"./useIsMounted-a63f9559.mjs\";\nconst helpersKeys = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\", \"smUp\", \"mdUp\", \"lgUp\", \"smDown\", \"mdDown\", \"lgDown\"];\nconst defaultHelpers = helpersKeys.reduce((acc, key) => {\n  acc[key] = false;\n  return acc;\n}, {});\nconst useBreakpoint = () => {\n  const injected = inject(vaBreakpointSymbol, {});\n  const isMounted = useIsMounted();\n  const {\n    globalConfig\n  } = useGlobalConfig();\n  const breakpointConfig = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint;\n    if (!breakpoint) {\n      warn(\"useBreakpoint: breakpointConfig is not defined!\");\n    }\n    return breakpoint ?? {};\n  });\n  const defaultBreakpoint = computed(() => breakpointConfig.value.enabled ? {\n    width: void 0,\n    height: void 0,\n    current: void 0,\n    thresholds: breakpointConfig.value.thresholds,\n    ...defaultHelpers\n  } : {});\n  return useReactiveComputed(() => isMounted.value ? injected : defaultBreakpoint.value);\n};\nexport { useBreakpoint as u };","map":{"version":3,"names":["helpersKeys","defaultHelpers","reduce","acc","key","useBreakpoint","injected","inject","vaBreakpointSymbol","isMounted","useIsMounted","globalConfig","useGlobalConfig","breakpointConfig","computed","breakpoint","value","warn","defaultBreakpoint","enabled","width","height","current","thresholds","useReactiveComputed"],"sources":["../../../../src/composables/useBreakpoint.ts"],"sourcesContent":["import { inject, computed, ComputedRef } from 'vue'\n\nimport { warn } from '../utils/console'\nimport { vaBreakpointSymbol } from '../services/breakpoint'\nimport { useReactiveComputed } from './useReactiveComputed'\nimport { useGlobalConfig } from './useGlobalConfig'\nimport { useIsMounted } from './useIsMounted'\n\nimport type {\n  BreakpointServiceObject,\n  BreakpointHelpersKeys,\n  BreakpointHelpers,\n  BreakpointConfig,\n} from '../services/breakpoint'\n\nconst helpersKeys: BreakpointHelpersKeys[] = ['xs', 'sm', 'md', 'lg', 'xl', 'smUp', 'mdUp', 'lgUp', 'smDown', 'mdDown', 'lgDown']\nconst defaultHelpers = helpersKeys.reduce((acc, key) => {\n  acc[key] = false\n  return acc\n}, {} as BreakpointHelpers)\n\nexport const useBreakpoint = (): BreakpointServiceObject => {\n  const injected = inject(vaBreakpointSymbol, {}) as BreakpointServiceObject\n\n  const isMounted = useIsMounted()\n\n  const { globalConfig } = useGlobalConfig()\n\n  const breakpointConfig: ComputedRef<BreakpointConfig> = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint\n    if (!breakpoint) { warn('useBreakpoint: breakpointConfig is not defined!') }\n    return breakpoint ?? {} as BreakpointConfig\n  })\n\n  const defaultBreakpoint = computed(() => breakpointConfig.value.enabled\n    ? {\n      width: undefined,\n      height: undefined,\n      current: undefined,\n      thresholds: breakpointConfig.value.thresholds,\n      ...defaultHelpers,\n    }\n    : {} as BreakpointServiceObject)\n\n  return useReactiveComputed(() => isMounted.value ? injected : defaultBreakpoint.value)\n}\n"],"mappings":";;;;;;AAeA,MAAMA,WAAA,GAAuC,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,QAAQ,QAAQ,UAAU,UAAU,QAAQ;AAChI,MAAMC,cAAA,GAAiBD,WAAA,CAAYE,MAAA,CAAO,CAACC,GAAA,EAAKC,GAAA,KAAQ;EACtDD,GAAA,CAAIC,GAAG,IAAI;EACJ,OAAAD,GAAA;AACT,GAAG,CAAuB;AAEnB,MAAME,aAAA,GAAgBA,CAAA,KAA+B;EAC1D,MAAMC,QAAA,GAAWC,MAAA,CAAOC,kBAAA,EAAoB,CAAE;EAE9C,MAAMC,SAAA,GAAYC,YAAA;EAEZ;IAAEC;EAAA,IAAiBC,eAAA;EAEnB,MAAAC,gBAAA,GAAkDC,QAAA,CAAS,MAAM;IAC/D,MAAAC,UAAA,GAAaJ,YAAA,CAAaK,KAAA,CAAMD,UAAA;IACtC,IAAI,CAACA,UAAA,EAAY;MAAEE,IAAA,CAAK,iDAAiD;IAAE;IAC3E,OAAOF,UAAA,IAAc;EAAC,CACvB;EAED,MAAMG,iBAAA,GAAoBJ,QAAA,CAAS,MAAMD,gBAAA,CAAiBG,KAAA,CAAMG,OAAA,GAC5D;IACAC,KAAA,EAAO;IACPC,MAAA,EAAQ;IACRC,OAAA,EAAS;IACTC,UAAA,EAAYV,gBAAA,CAAiBG,KAAA,CAAMO,UAAA;IACnC,GAAGtB;EACL,IACE,CAA6B;EAEjC,OAAOuB,mBAAA,CAAoB,MAAMf,SAAA,CAAUO,KAAA,GAAQV,QAAA,GAAWY,iBAAA,CAAkBF,KAAK;AACvF"},"metadata":{},"sourceType":"module","externalDependencies":[]}