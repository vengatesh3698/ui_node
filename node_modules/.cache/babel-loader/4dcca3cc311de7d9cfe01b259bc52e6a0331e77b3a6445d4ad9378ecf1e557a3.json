{"ast":null,"code":"import { ref, watch, onMounted, onBeforeUnmount, unref } from \"vue\";\nconst useResizeObserver = (elementsList, cb) => {\n  const resizeObserver = ref();\n  const observeAll = elementsList2 => {\n    elementsList2.forEach(element => {\n      var _a;\n      const unrefedElement = unref(element);\n      unrefedElement && ((_a = resizeObserver.value) == null ? void 0 : _a.observe(unrefedElement));\n    });\n  };\n  watch(elementsList, newValue => {\n    var _a;\n    (_a = resizeObserver.value) == null ? void 0 : _a.disconnect();\n    observeAll(newValue);\n  });\n  onMounted(() => {\n    resizeObserver.value = new ResizeObserver(cb);\n    observeAll(elementsList);\n  });\n  onBeforeUnmount(() => {\n    var _a;\n    return (_a = resizeObserver.value) == null ? void 0 : _a.disconnect();\n  });\n  return resizeObserver;\n};\nexport { useResizeObserver as u };","map":{"version":3,"names":["useResizeObserver","elementsList","cb","resizeObserver","ref","observeAll","elementsList2","forEach","element","unrefedElement","unref","_a","value","observe","watch","newValue","disconnect","onMounted","ResizeObserver","onBeforeUnmount"],"sources":["../../../../src/composables/useResizeObserver.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, ref, Ref, unref, watch } from 'vue'\n\ntype MaybeRef<T> = T | Ref<T>\n\nexport const useResizeObserver = <T extends HTMLElement | undefined>(elementsList: MaybeRef<T>[], cb: () => void) => {\n  const resizeObserver = ref<ResizeObserver>()\n\n  const observeAll = (elementsList: MaybeRef<T>[]) => {\n    elementsList.forEach((element: MaybeRef<T>) => {\n      const unrefedElement = unref(element)\n\n      unrefedElement && resizeObserver.value?.observe(unrefedElement)\n    })\n  }\n\n  watch(elementsList, (newValue) => {\n    resizeObserver.value?.disconnect()\n    observeAll(newValue)\n  })\n\n  onMounted(() => {\n    resizeObserver.value = new ResizeObserver(cb)\n    observeAll(elementsList)\n  })\n\n  onBeforeUnmount(() => resizeObserver.value?.disconnect())\n\n  return resizeObserver\n}\n"],"mappings":";AAIa,MAAAA,iBAAA,GAAoBA,CAAoCC,YAAA,EAA6BC,EAAA,KAAmB;EACnH,MAAMC,cAAA,GAAiBC,GAAA;EAEjB,MAAAC,UAAA,GAAcC,aAAA,IAAgC;IAClDA,aAAA,CAAaC,OAAA,CAASC,OAAA,IAAyB;;MACvC,MAAAC,cAAA,GAAiBC,KAAA,CAAMF,OAAO;MAElBC,cAAA,MAAAE,EAAA,GAAAR,cAAA,CAAeS,KAAA,KAAf,gBAAAD,EAAA,CAAsBE,OAAA,CAAQJ,cAAA;IAAc,CAC/D;EAAA;EAGGK,KAAA,CAAAb,YAAA,EAAec,QAAA,IAAa;;IAChC,CAAAJ,EAAA,GAAAR,cAAA,CAAeS,KAAA,KAAf,gBAAAD,EAAA,CAAsBK,UAAA;IACtBX,UAAA,CAAWU,QAAQ;EAAA,CACpB;EAEDE,SAAA,CAAU,MAAM;IACCd,cAAA,CAAAS,KAAA,GAAQ,IAAIM,cAAA,CAAehB,EAAE;IAC5CG,UAAA,CAAWJ,YAAY;EAAA,CACxB;EAEDkB,eAAA,CAAgB;;IAAM,QAAAR,EAAA,GAAAR,cAAA,CAAeS,KAAA,KAAf,gBAAAD,EAAA,CAAsBK,UAAA;EAAA,CAAY;EAEjD,OAAAb,cAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}