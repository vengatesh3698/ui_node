{"ast":null,"code":"import { _ as _sfc_main } from \"./VaChip.vue_vue_type_script_lang-68965099.mjs\";\nimport { resolveComponent, openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, createElementVNode, mergeProps, toHandlers, createCommentVNode, renderSlot, withModifiers, withKeys } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaChip_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = {\n  class: \"va-chip__content\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  return _ctx.valueComputed ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.tagComputed), {\n    key: 0,\n    class: normalizeClass([\"va-chip\", _ctx.computedClass]),\n    href: _ctx.hrefComputed,\n    target: _ctx.target,\n    to: _ctx.to,\n    replace: _ctx.replace,\n    exact: _ctx.exact,\n    \"active-class\": _ctx.activeClass,\n    \"exact-active-class\": _ctx.exactActiveClass,\n    style: normalizeStyle(_ctx.computedStyle)\n  }, {\n    default: withCtx(() => [createElementVNode(\"span\", mergeProps({\n      class: \"va-chip__inner\",\n      onFocus: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"focus\")),\n      onMouseenter: _cache[1] || (_cache[1] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),\n      onMouseleave: _cache[2] || (_cache[2] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args))\n    }, toHandlers(_ctx.keyboardFocusListeners, true)), [_ctx.icon ? (openBlock(), createBlock(_component_va_icon, {\n      key: 0,\n      class: \"va-chip__icon\",\n      name: _ctx.icon,\n      size: _ctx.iconSize\n    }, null, 8, [\"name\", \"size\"])) : createCommentVNode(\"\", true), createElementVNode(\"span\", _hoisted_1, [renderSlot(_ctx.$slots, \"default\")]), _ctx.closeable ? (openBlock(), createBlock(_component_va_icon, {\n      key: 1,\n      role: \"button\",\n      name: \"va-close\",\n      class: \"va-chip__close-icon\",\n      \"aria-label\": _ctx.tp(_ctx.$props.ariaCloseLabel),\n      tabindex: _ctx.tabIndexComputed,\n      size: _ctx.iconSize,\n      onClick: withModifiers(_ctx.close, [\"stop\"]),\n      onKeydown: [withKeys(withModifiers(_ctx.close, [\"stop\"]), [\"enter\"]), withKeys(withModifiers(_ctx.close, [\"stop\"]), [\"space\"])]\n    }, null, 8, [\"aria-label\", \"tabindex\", \"size\", \"onClick\", \"onKeydown\"])) : createCommentVNode(\"\", true)], 16)]),\n    _: 3\n  }, 8, [\"href\", \"target\", \"to\", \"replace\", \"exact\", \"active-class\", \"exact-active-class\", \"class\", \"style\"])) : createCommentVNode(\"\", true);\n}\nconst _VaChip = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaChip as _ };","map":{"version":3,"names":["_component_va_icon","resolveComponent","_ctx","valueComputed","openBlock","createBlock","resolveDynamicComponent","tagComputed","key","class","normalizeClass","computedClass","href","hrefComputed","target","to","replace","exact","activeClass","exactActiveClass","style","normalizeStyle","computedStyle","default","withCtx","createElementVNode","mergeProps","onFocus","_cache","$event","$emit","onMouseenter","args","onMouseEnter","onMouseleave","onMouseLeave","toHandlers","keyboardFocusListeners","icon","name","size","iconSize","createCommentVNode","_hoisted_1","renderSlot","$slots","closeable","role","tp","$props","ariaCloseLabel","tabindex","tabIndexComputed","onClick","withModifiers","close","onKeydown","withKeys"],"sources":["../../../../../src/components/va-chip/VaChip.vue"],"sourcesContent":["<template>\n  <component\n    v-if=\"valueComputed\"\n    class=\"va-chip\"\n    :is=\"tagComputed\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n  >\n    <span\n      class=\"va-chip__inner\"\n      @focus=\"$emit('focus')\"\n      @mouseenter=\"onMouseEnter\"\n      @mouseleave=\"onMouseLeave\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <va-icon\n        v-if=\"icon\"\n        class=\"va-chip__icon\"\n        :name=\"icon\"\n        :size=\"iconSize\"\n      />\n      <span class=\"va-chip__content\">\n        <slot></slot>\n      </span>\n      <va-icon\n        v-if=\"closeable\"\n        role=\"button\"\n        name=\"va-close\"\n        class=\"va-chip__close-icon\"\n        :aria-label=\"tp($props.ariaCloseLabel)\"\n        :tabindex=\"tabIndexComputed\"\n        :size=\"iconSize\"\n        @click.stop=\"close\"\n        @keydown.enter.stop=\"close\"\n        @keydown.space.stop=\"close\"\n      />\n    </span>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, toRef } from 'vue'\nimport pick from 'lodash/pick'\n\nimport { getBoxShadowColor, getHoverColor, getFocusColor } from '../../services/color'\nimport {\n  useComponentPresetProp,\n  useKeyboardOnlyFocus,\n  useRouterLink, useRouterLinkProps,\n  useColors, useColorProps,\n  useStateful, useStatefulEmits, useStatefulProps,\n  useHover,\n  useTextColor,\n  useBem,\n  useTranslation,\n} from '../../composables'\n\nimport { VaIcon } from '../va-icon'\n\nexport default defineComponent({\n  name: 'VaChip',\n\n  components: { VaIcon },\n\n  emits: [...useStatefulEmits, 'focus'],\n\n  props: {\n    ...useRouterLinkProps,\n    ...useColorProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: true },\n    closeable: { type: Boolean, default: false },\n    outline: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    square: { type: Boolean, default: false },\n    shadow: { type: Boolean, default: false },\n    flat: { type: Boolean, default: false },\n    icon: { type: String, default: '' },\n    tag: { type: String, default: 'span' },\n    size: {\n      type: String as PropType<'small' | 'medium' | 'large'>,\n      default: 'medium',\n      validator: (value: string) => ['small', 'medium', 'large'].includes(value),\n    },\n\n    ariaCloseLabel: { type: String, default: '$t:close' },\n  },\n\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n    const borderColor = computed(() => props.outline ? colorComputed.value : '')\n    const isTransparentBackground = computed(() => Boolean(props.outline || props.flat))\n    const { textColorComputed } = useTextColor(toRef(props, 'color'), isTransparentBackground)\n    const size = {\n      small: '0.875rem',\n      medium: '1rem',\n      large: '1.25rem',\n    } as Record<string, string>\n\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n    const shadowStyle = computed(() => {\n      if (!props.shadow || props.flat || props.outline || props.disabled || hasKeyboardFocus.value) {\n        return\n      }\n      return `0 0.125rem 0.19rem 0 ${getBoxShadowColor(colorComputed.value)}`\n    })\n\n    const { valueComputed } = useStateful(props, emit)\n    const { tagComputed, hrefComputed } = useRouterLink(props)\n    const { isHovered, onMouseEnter, onMouseLeave } = useHover()\n\n    return {\n      ...useTranslation(),\n      keyboardFocusListeners,\n      valueComputed,\n      hrefComputed,\n      tagComputed,\n      onMouseEnter,\n      onMouseLeave,\n      isHovered,\n\n      close: () => {\n        if (!props.disabled) {\n          valueComputed.value = false\n        }\n      },\n\n      iconSize: computed(() => size[props.size]),\n\n      tabIndexComputed: computed(() => props.disabled ? -1 : 0),\n\n      computedClass: useBem('va-chip', () => ({\n        ...pick(props, ['disabled', 'readonly', 'square']),\n        small: props.size === 'small',\n        large: props.size === 'large',\n      })),\n\n      computedStyle: computed(() => {\n        const result = {\n          color: textColorComputed.value,\n          borderColor: borderColor.value,\n          background: '',\n          boxShadow: shadowStyle.value,\n        }\n\n        if (props.outline || props.flat) {\n          if (hasKeyboardFocus.value) {\n            result.background = getFocusColor(colorComputed.value)\n          } else if (!props.readonly && isHovered.value) {\n            result.background = getHoverColor(colorComputed.value)\n          }\n        } else {\n          result.background = colorComputed.value\n        }\n\n        return result\n      }),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-chip {\n  display: var(--va-chip-display);\n  border: var(--va-chip-border, var(--va-control-border));\n  position: var(--va-chip-position);\n  border-radius: var(--va-chip-border-radius);\n  width: var(--va-chip-width);\n  height: var(--va-chip-height);\n  min-width: var(--va-chip-min-width);\n  min-height: var(--va-chip-min-height);\n  padding: var(--va-chip-padding);\n  color: var(--va-chip-color);\n  cursor: var(--va-chip-cursor);\n  font-size: var(--va-chip-font-size);\n  font-family: var(--va-font-family);\n  vertical-align: var(--va-chip-vertical-align);\n\n  &__inner {\n    display: var(--va-chip-inner-display);\n    align-items: var(--va-chip-inner-align-items);\n    width: var(--va-chip-inner-width);\n    vertical-align: inherit;\n  }\n\n  &:hover:not(&--readonly) {\n    opacity: var(--va-chip-hover-opacity);\n  }\n\n  &__content {\n    display: var(--va-chip-content-display);\n    justify-content: var(--va-chip-content-justify-content);\n    align-items: var(--va-chip-content-align-items);\n    padding: var(--va-chip-content-padding);\n    line-height: var(--va-chip-content-line-height);\n    width: var(--va-chip-content-width);\n  }\n\n  &__close-icon {\n    cursor: pointer;\n\n    @at-root {\n      .va-chip--disabled {\n        .va-chip__close-icon {\n          cursor: default !important;\n        }\n      }\n    }\n  }\n\n  &--square {\n    border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\n  }\n\n  &--small {\n    height: var(--va-chip-sm-height);\n    font-size: var(--va-chip-sm-font-size);\n  }\n\n  &--large {\n    height: var(--va-chip-lg-height);\n    font-size: var(--va-chip-lg-font-size);\n  }\n\n  &.va-chip--disabled {\n    @include va-disabled;\n  }\n}\n</style>\n"],"mappings":";;;;;;;;EAEuB,MAAAA,kBAAA,GAAAC,gBAAA;EACd,OAAAC,IAAA,CAAAC,aAAA,IAAAC,SAAA,IAAAC,WAAA,CAACC,uBAAA,CASEJ,IAAA,CAAaK,WAAA;IAPpBC,GAAA,EAAI;IACJC,KAAA,EAAMC,cAAA,CAAQ,YAAAR,IAAA,CAAAS,aAAA;IACdC,IAAA,EAAIV,IAAA,CAAEW,YAAA;IACNC,MAAA,EAAOZ,IAAA,CAAEY,MAAA;IACTC,EAAA,EAAOb,IAAA,CAAAa,EAAA;IACPC,OAAA,EAAYd,IAAA,CAAAc,OAAA;IACZC,KAAA,EAAAf,IAAA,CAAAe,KAAA;IAEA,gBAAKf,IAAA,CAAAgB,WAAA;IAAA,sBAAAhB,IAAA,CAAAiB,gBAAA;IA8BCC,KAAA,EAAAC,cAAA,CAAAnB,IAAA,CAAAoB,aAAA;EAAA;IAAAC,OAAA,EA3BAC,OAAA,CAAC,OACAC,kBAAA,SAAAC,UAAA;MACLjB,KAAA;MACAkB,OAAA,EAAAC,MAAA,CAAU,CAAE,MAAAA,MAAA,MAAAC,MAAA,IAAA3B,IAAA,CAAA4B,KAAA;MAAAC,YAAA,EACgBH,MAAA,CAAD,OAAAA,MAAA,UAAAI,IAAA,KAAA9B,IAAA,CAAA+B,YAAA,IAAA/B,IAAA,CAAA+B,YAAA,IAAAD,IAAA;MAGhBE,YAAA,EAAAN,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAA9B,IAAA,CAAAiC,YAAA,IAAAjC,IAAA,CAAAiC,YAAA,IAAAH,IAAA;IAIV,GAAAI,UAAA,CAAAlC,IAAA,CAAAmC,sBAAA,WAAAnC,IAAA,CAAAoC,IAAA,IAAAlC,SAAA,IAHqBC,WAAA,CAAAL,kBAAA;MACpBQ,GAAA,EAAI;MACJC,KAAA,EAAM;MAAA8B,IAAA,EAAArC,IAAA,CAAAoC,IAAA;MAAAE,IAAA,EAAAtC,IAAA,CAAAuC;OAIF,wBAFP,MACEC,kBAAA,CAAa,WAAAjB,kBAAA,SAAAkB,UAAA,GAGPC,UAAA,CAAS1C,IAAA,CAAA2C,MAAA,gBAAA3C,IAAA,CAAA4C,SAAA,IAAA1C,SAAA,IACFC,WAAA,CAAAL,kBAAA;MACbQ,GAAA,EAAI;MACJuC,IAAA,EAAK;MACJR,IAAA;MACA9B,KAAA;MACA,cAAMP,IAAA,CAAQ8C,EAAA,CAAA9C,IAAA,CAAA+C,MAAA,CAAAC,cAAA;MACdC,QAAA,EAAKjD,IAAA,CAAAkD,gBAAA;MACLZ,IAAA,EAAOtC,IAAA,CAAAuC,QAAA;MAAAY,OAAA,EAAAC,aAAA,CAAApD,IAAA,CAAaqD,KAAA,EAAK;MAAAC,SAAA,GAAAC,QAAA,CAAAH,aAAA,CAAApD,IAAA,CAAAqD,KAAA,yB"},"metadata":{},"sourceType":"module","externalDependencies":[]}