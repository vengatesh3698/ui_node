{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { w as warn } from \"../../utils/console-42c8e8cc.mjs\";\nconst setPaginationRange = (currentPage = 1, visiblePages, pages, includeBoundary = false) => {\n  let start = 0;\n  if (pages === 0) {\n    pages = 1;\n  }\n  if (visiblePages > pages) {\n    visiblePages = pages;\n  }\n  if (visiblePages === 0) {\n    start = 1;\n    visiblePages = pages > 10 ? 10 : pages;\n  } else {\n    const paginationMiddlePage = visiblePages / 2;\n    if (currentPage - paginationMiddlePage <= 0 || currentPage > pages) {\n      start = 1;\n    } else {\n      start = currentPage + paginationMiddlePage > pages ? pages - visiblePages + 1 : Math.ceil(currentPage - paginationMiddlePage);\n    }\n  }\n  const range = [];\n  for (let i = 0; i < visiblePages; i++) {\n    range.push(start + i);\n  }\n  if (includeBoundary && visiblePages < 7) {\n    pages >= 7 && warn(\"[va-pagination] To work in a proper way, the `boundaryNumbers` prop needs at least 7 visible pages to be set via the `visiblePages` prop (first, last, 2 boundaries, current, previous, next).\");\n  } else if (includeBoundary) {\n    start !== 1 && range.splice(0, 2, 1, \"...\");\n    range[range.length - 1] !== pages && range.splice(-2, 2, \"...\", pages);\n  }\n  return range;\n};\nexport { setPaginationRange as s };","map":{"version":3,"names":["setPaginationRange","currentPage","visiblePages","pages","includeBoundary","start","paginationMiddlePage","Math","ceil","range","i","push","warn","splice","length"],"sources":["../../../../../src/components/va-pagination/setPaginationRange.ts"],"sourcesContent":["import { warn } from '../../utils/console'\n\nexport const setPaginationRange = (\n  currentPage = 1,\n  visiblePages: number,\n  pages: number,\n  includeBoundary = false) => {\n  let start = 0\n  if (pages === 0) { pages = 1 }\n  if (visiblePages > pages) { visiblePages = pages }\n\n  if (visiblePages === 0) {\n    start = 1\n\n    // to prevent extra long pagination, can be overwritten by user via `visiblePages` property\n    visiblePages = pages > 10 ? 10 : pages\n  } else {\n    const paginationMiddlePage = visiblePages / 2\n    if (currentPage - paginationMiddlePage <= 0 || currentPage > pages) {\n      start = 1\n    } else {\n      start = currentPage + paginationMiddlePage > pages\n        ? pages - visiblePages + 1\n        : Math.ceil(currentPage - paginationMiddlePage)\n    }\n  }\n\n  const range: Array<'...' | number> = []\n\n  for (let i = 0; i < visiblePages; i++) {\n    range.push(start + i)\n  }\n\n  if (includeBoundary && visiblePages < 7) {\n    pages >= 7 && warn(\n      '[va-pagination] To work in a proper way, the `boundaryNumbers` prop needs at least 7 visible pages to be set via the `visiblePages` prop (first, last, 2 boundaries, current, previous, next).',\n    )\n  } else if (includeBoundary) {\n    start !== 1 && range.splice(0, 2, 1, '...')\n    range[range.length - 1] !== pages && range.splice(-2, 2, '...', pages)\n  }\n\n  return range\n}\n"],"mappings":";;AAEO,MAAMA,kBAAA,GAAqBA,CAChCC,WAAA,GAAc,GACdC,YAAA,EACAC,KAAA,EACAC,eAAA,GAAkB,UAAU;EAC5B,IAAIC,KAAA,GAAQ;EACZ,IAAIF,KAAA,KAAU,GAAG;IAAUA,KAAA;EAAE;EAC7B,IAAID,YAAA,GAAeC,KAAA,EAAO;IAAiBD,YAAA,GAAAC,KAAA;EAAM;EAEjD,IAAID,YAAA,KAAiB,GAAG;IACdG,KAAA;IAGOH,YAAA,GAAAC,KAAA,GAAQ,KAAK,KAAKA,KAAA;EAAA,OAC5B;IACL,MAAMG,oBAAA,GAAuBJ,YAAA,GAAe;IAC5C,IAAID,WAAA,GAAcK,oBAAA,IAAwB,KAAKL,WAAA,GAAcE,KAAA,EAAO;MAC1DE,KAAA;IAAA,OACH;MACGA,KAAA,GAAAJ,WAAA,GAAcK,oBAAA,GAAuBH,KAAA,GACzCA,KAAA,GAAQD,YAAA,GAAe,IACvBK,IAAA,CAAKC,IAAA,CAAKP,WAAA,GAAcK,oBAAoB;IAClD;EACF;EAEA,MAAMG,KAAA,GAA+B;EAErC,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIR,YAAA,EAAcQ,CAAA,IAAK;IAC/BD,KAAA,CAAAE,IAAA,CAAKN,KAAA,GAAQK,CAAC;EACtB;EAEI,IAAAN,eAAA,IAAmBF,YAAA,GAAe,GAAG;IACvCC,KAAA,IAAS,KAAKS,IAAA,CACZ;EAAA,WAEOR,eAAA,EAAiB;IAC1BC,KAAA,KAAU,KAAKI,KAAA,CAAMI,MAAA,CAAO,GAAG,GAAG,GAAG,KAAK;IACpCJ,KAAA,CAAAA,KAAA,CAAMK,MAAA,GAAS,CAAC,MAAMX,KAAA,IAASM,KAAA,CAAMI,MAAA,CAAO,IAAI,GAAG,OAAOV,KAAK;EACvE;EAEO,OAAAM,KAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}