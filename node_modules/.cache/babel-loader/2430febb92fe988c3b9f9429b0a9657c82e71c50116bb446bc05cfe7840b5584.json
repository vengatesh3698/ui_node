{"ast":null,"code":"import { computed, watch } from \"vue\";\nimport { b as isClient } from \"../../../utils/ssr-fd33979c.mjs\";\nimport { w as warn } from \"../../../utils/console-42c8e8cc.mjs\";\nimport { g as generateUniqueId } from \"../../../utils/uuid-7d2e5892.mjs\";\nimport { a as addOrUpdateStyleElement } from \"../../../utils/dom-ddcff6c3.mjs\";\nimport { g as getGlobalProperty } from \"../../vue-plugin/utils/global-properties-9524ee5b.mjs\";\nimport { u as useWindowSize } from \"../../../composables/useWindowSize-b378da34.mjs\";\nimport { u as useDocument } from \"../../../composables/useDocument-5c9446c6.mjs\";\nimport { u as useReactiveComputed } from \"../../../composables/useReactiveComputed-2cefedc6.mjs\";\nconst createBreakpointConfigPlugin = app => {\n  var _a;\n  const globalConfig = (_a = getGlobalProperty(app, \"$vaConfig\")) == null ? void 0 : _a.globalConfig;\n  if (!globalConfig) {\n    warn(\"createBreakpointConfigPlugin: globalConfig is not defined!\");\n    return {};\n  }\n  const breakpointConfig = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint;\n    if (!breakpoint) {\n      warn(\"createBreakpointConfigPlugin: breakpointConfig is not defined!\");\n    }\n    return breakpoint ?? {};\n  });\n  if (!breakpointConfig.value.enabled) {\n    return {};\n  }\n  if (!breakpointConfig.value.thresholds || !Object.values(breakpointConfig.value.thresholds).length) {\n    warn(\"createBreakpointConfigPlugin: there are no defined thresholds!\");\n    return {};\n  }\n  const {\n    windowSizes\n  } = useWindowSize();\n  const isMounted = computed(isClient);\n  const currentBreakpoint = computed(() => {\n    if (!isMounted.value || !windowSizes.width) {\n      return;\n    }\n    return Object.entries(breakpointConfig.value.thresholds).reduce((acc, [key, value]) => {\n      if (windowSizes.width >= value) {\n        acc = key;\n      }\n      return acc;\n    }, \"xs\");\n  });\n  const screenClasses = computed(() => Object.keys(breakpointConfig.value.thresholds).reduce((acc, threshold) => {\n    acc[threshold] = `va-screen-${threshold}`;\n    return acc;\n  }, {}));\n  const generateHelpersMediaCss = () => {\n    let result = \"\";\n    Object.values(breakpointConfig.value.thresholds).forEach((thresholdValue, index) => {\n      result += `@media screen and (min-width: ${thresholdValue}px) {`;\n      result += `:root { --va-media-ratio: ${(index + 1) * 0.2} }`;\n      result += \"}\\n\";\n    });\n    return result;\n  };\n  const uniqueId = computed(generateUniqueId);\n  addOrUpdateStyleElement(`va-helpers-media-${uniqueId.value}`, generateHelpersMediaCss);\n  const getDocument = useDocument();\n  watch(currentBreakpoint, newValue => {\n    if (!newValue || !breakpointConfig.value.bodyClass || !getDocument.value) {\n      return;\n    }\n    getDocument.value.body.classList.forEach(className => {\n      if (Object.values(screenClasses.value).includes(className)) {\n        getDocument.value.body.classList.remove(className);\n      }\n    });\n    getDocument.value.body.classList.add(screenClasses.value[newValue]);\n  }, {\n    immediate: true\n  });\n  const breakpointHelpers = computed(() => {\n    const isXs = currentBreakpoint.value === \"xs\";\n    const isSm = currentBreakpoint.value === \"sm\";\n    const isMd = currentBreakpoint.value === \"md\";\n    const isLg = currentBreakpoint.value === \"lg\";\n    const isXl = currentBreakpoint.value === \"xl\";\n    return {\n      xs: isXs,\n      sm: isSm,\n      md: isMd,\n      lg: isLg,\n      xl: isXl,\n      smUp: isSm || isMd || isLg || isXl,\n      mdUp: isMd || isLg || isXl,\n      lgUp: isLg || isXl,\n      smDown: isXs || isSm,\n      mdDown: isXs || isSm || isMd,\n      lgDown: isXs || isSm || isMd || isLg\n    };\n  });\n  return useReactiveComputed(() => ({\n    width: windowSizes.width,\n    height: windowSizes.height,\n    current: currentBreakpoint.value,\n    thresholds: breakpointConfig.value.thresholds,\n    ...breakpointHelpers.value\n  }));\n};\nexport { createBreakpointConfigPlugin as c };","map":{"version":3,"names":["createBreakpointConfigPlugin","app","globalConfig","_a","getGlobalProperty","warn","breakpointConfig","computed","breakpoint","value","enabled","thresholds","Object","values","length","windowSizes","useWindowSize","isMounted","isClient","currentBreakpoint","width","entries","reduce","acc","key","screenClasses","keys","threshold","generateHelpersMediaCss","result","forEach","thresholdValue","index","uniqueId","generateUniqueId","addOrUpdateStyleElement","getDocument","useDocument","watch","newValue","bodyClass","body","classList","className","includes","remove","add","immediate","breakpointHelpers","isXs","isSm","isMd","isLg","isXl","xs","sm","md","lg","xl","smUp","mdUp","lgUp","smDown","mdDown","lgDown","useReactiveComputed","height","current"],"sources":["../../../../../../src/services/breakpoint/plugin/create-service.ts"],"sourcesContent":["import { App, Ref, computed, watch, ComputedRef } from 'vue'\n\nimport { useDocument, useWindowSize, useReactiveComputed } from '../../../composables'\n\nimport { isClient } from '../../../utils/ssr'\nimport { warn } from '../../../utils/console'\nimport { generateUniqueId } from '../../../utils/uuid'\nimport { getGlobalProperty } from '../../vue-plugin/utils'\nimport { addOrUpdateStyleElement } from '../../../utils/dom'\n\nimport { GlobalConfig } from '../../global-config/types'\nimport { ThresholdsKey, BreakpointConfig, BodyClass, BreakpointServiceObject, BreakpointHelpers } from '../types'\n\nexport const createBreakpointConfigPlugin = (app: App): BreakpointServiceObject => {\n  const globalConfig: Ref<GlobalConfig> | undefined = getGlobalProperty(app, '$vaConfig')?.globalConfig\n  if (!globalConfig) {\n    warn('createBreakpointConfigPlugin: globalConfig is not defined!')\n    return {} as BreakpointServiceObject\n  }\n\n  const breakpointConfig: ComputedRef<BreakpointConfig> = computed(() => {\n    const breakpoint = globalConfig.value.breakpoint\n    if (!breakpoint) { warn('createBreakpointConfigPlugin: breakpointConfig is not defined!') }\n    return breakpoint ?? {} as BreakpointConfig\n  })\n\n  if (!breakpointConfig.value.enabled) {\n    return {} as BreakpointServiceObject\n  }\n\n  if (!breakpointConfig.value.thresholds || !Object.values(breakpointConfig.value.thresholds).length) {\n    warn('createBreakpointConfigPlugin: there are no defined thresholds!')\n    return {} as BreakpointServiceObject\n  }\n\n  const { windowSizes } = useWindowSize()\n\n  const isMounted = computed(isClient)\n  const currentBreakpoint = computed(() => {\n    if (!isMounted.value || !windowSizes.width) { return }\n\n    return Object.entries(breakpointConfig.value.thresholds).reduce((acc: string, [key, value]) => {\n      if (windowSizes.width! >= value) { acc = key }\n      return acc\n    }, 'xs') as unknown as ThresholdsKey\n  })\n\n  const screenClasses = computed(() =>\n    (Object.keys(breakpointConfig.value.thresholds) as ThresholdsKey[])\n      .reduce((acc: Record<ThresholdsKey, BodyClass>, threshold: ThresholdsKey) => {\n        acc[threshold] = `va-screen-${threshold}`\n        return acc\n      }, {} as Record<ThresholdsKey, BodyClass>))\n\n  const generateHelpersMediaCss = () => {\n    let result = ''\n\n    Object.values(breakpointConfig.value.thresholds)\n      .forEach((thresholdValue, index) => {\n        result += `@media screen and (min-width: ${thresholdValue}px) {`\n        // 0.2 coefficient for xs threshold and 1 for xl, experimental value for now\n        result += `:root { --va-media-ratio: ${(index + 1) * 0.2} }`\n        result += '}\\n'\n      })\n\n    return result\n  }\n\n  const uniqueId = computed(generateUniqueId)\n  addOrUpdateStyleElement(`va-helpers-media-${uniqueId.value}`, generateHelpersMediaCss)\n\n  const getDocument = useDocument()\n  watch(currentBreakpoint, (newValue) => {\n    if (!newValue || !breakpointConfig.value.bodyClass || !getDocument.value) { return }\n\n    getDocument.value.body.classList.forEach((className: string) => {\n      if ((Object.values(screenClasses.value) as string[]).includes(className)) {\n        getDocument.value!.body.classList.remove(className)\n      }\n    })\n\n    getDocument.value.body.classList.add(screenClasses.value[newValue])\n  }, { immediate: true })\n\n  const breakpointHelpers = computed(() => {\n    const isXs = currentBreakpoint.value === 'xs'\n    const isSm = currentBreakpoint.value === 'sm'\n    const isMd = currentBreakpoint.value === 'md'\n    const isLg = currentBreakpoint.value === 'lg'\n    const isXl = currentBreakpoint.value === 'xl'\n\n    return {\n      xs: isXs,\n      sm: isSm,\n      md: isMd,\n      lg: isLg,\n      xl: isXl,\n\n      smUp: isSm || isMd || isLg || isXl,\n      mdUp: isMd || isLg || isXl,\n      lgUp: isLg || isXl,\n\n      smDown: isXs || isSm,\n      mdDown: isXs || isSm || isMd,\n      lgDown: isXs || isSm || isMd || isLg,\n    }\n  }) as ComputedRef<BreakpointHelpers>\n\n  return useReactiveComputed<BreakpointServiceObject>(() => ({\n    width: windowSizes.width!,\n    height: windowSizes.height!,\n    current: currentBreakpoint.value!,\n    thresholds: breakpointConfig.value.thresholds,\n    ...breakpointHelpers.value,\n  }))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}