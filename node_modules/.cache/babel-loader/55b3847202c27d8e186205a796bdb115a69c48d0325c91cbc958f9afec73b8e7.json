{"ast":null,"code":"const extractGlobalProperties = app => app.config.globalProperties;\nconst defineGlobalProperty = (app, key, v) => {\n  const globalProperties = extractGlobalProperties(app);\n  globalProperties[key] = v;\n};\nconst getGlobalProperty = (app, key) => {\n  return extractGlobalProperties(app)[key];\n};\nexport { defineGlobalProperty as d, getGlobalProperty as g };","map":{"version":3,"names":["extractGlobalProperties","app","config","globalProperties","defineGlobalProperty","key","v","getGlobalProperty"],"sources":["../../../../../../src/services/vue-plugin/utils/global-properties.ts"],"sourcesContent":["import { App, AppContext, ComponentCustomProperties } from 'vue'\n\n/** Type safe return app global properties for assign */\nexport const extractGlobalProperties = (app: App | AppContext) => app.config.globalProperties\n\n/**\n * Type safe set vue global property\n * Declare type before use this method.\n * ```\ndeclare module 'vue' {\n  export interface ComponentCustomProperties {\n    $vaThing: ThingType\n  }\n}\n * ```\n * @example See `global-config` or `color-config` for example\n */\nexport const defineGlobalProperty = <Key extends keyof ComponentCustomProperties, Value extends ComponentCustomProperties[Key]>(app: App, key: Key, v: Value) => {\n  const globalProperties = extractGlobalProperties(app)\n  globalProperties[key] = v\n}\n\n/** Type safe return vue global property */\nexport const getGlobalProperty = <Key extends keyof ComponentCustomProperties>(app: App | AppContext, key: Key): ComponentCustomProperties[Key] => {\n  return extractGlobalProperties(app)[key]\n}\n"],"mappings":"AAGO,MAAMA,uBAAA,GAA2BC,GAAA,IAA0BA,GAAA,CAAIC,MAAA,CAAOC,gBAAA;AActE,MAAMC,oBAAA,GAAuBA,CAA4FH,GAAA,EAAUI,GAAA,EAAUC,CAAA,KAAa;EACzJ,MAAAH,gBAAA,GAAmBH,uBAAA,CAAwBC,GAAG;EACpDE,gBAAA,CAAiBE,GAAG,IAAIC,CAAA;AAC1B;AAGa,MAAAC,iBAAA,GAAoBA,CAA8CN,GAAA,EAAuBI,GAAA,KAA6C;EAC1I,OAAAL,uBAAA,CAAwBC,GAAG,EAAEI,GAAG;AACzC"},"metadata":{},"sourceType":"module","externalDependencies":[]}