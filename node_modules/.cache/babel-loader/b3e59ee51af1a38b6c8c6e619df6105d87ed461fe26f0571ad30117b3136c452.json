{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { defineComponent, shallowRef, ref, computed, onMounted, watch, nextTick } from \"vue\";\nimport { p as pick } from \"../../../../../vendor-fff696df.mjs\";\nimport { u as useTextareaRowHeight } from \"./useTextareaRowHeight-97db7eb8.mjs\";\nimport { u as useFormFieldProps } from \"../../../../composables/useFormField-0ac52e7e.mjs\";\nimport { u as useEmitProxy } from \"../../../../composables/useEmitProxy-a435894a.mjs\";\nconst positiveNumberValidator = val => {\n  if (val > 0 && (val | 0) === val) {\n    return true;\n  }\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${val} is provided`);\n};\nconst {\n  createEmits,\n  createListeners\n} = useEmitProxy([\"input\", \"change\", \"click\", \"update:modelValue\"]);\nconst _sfc_main = defineComponent({\n  name: \"VaTextarea\",\n  props: {\n    ...useFormFieldProps,\n    modelValue: {\n      type: [String, Number],\n      default: \"\"\n    },\n    placeholder: {\n      type: String\n    },\n    autosize: {\n      type: Boolean,\n      default: false\n    },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator\n    },\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator\n    }\n  },\n  emits: createEmits(),\n  setup(props, {\n    emit\n  }) {\n    const textarea = shallowRef();\n    const rowHeight = ref(-1);\n    const height = ref(-1);\n    const {\n      calculateRowHeight,\n      calculateHeight\n    } = useTextareaRowHeight(textarea);\n    const isResizable = computed(() => {\n      return Boolean((props.autosize || props.maxRows || props.minRows !== 1) && textarea.value);\n    });\n    const updateRowHeight = () => {\n      if (isResizable.value) {\n        rowHeight.value = calculateRowHeight();\n      }\n    };\n    const updateHeight = () => {\n      if (isResizable.value) {\n        height.value = calculateHeight();\n      }\n    };\n    onMounted(() => {\n      updateRowHeight();\n      updateHeight();\n    });\n    watch(() => props.modelValue, () => {\n      nextTick(updateHeight);\n    });\n    const computedStyle = computed(() => ({\n      minHeight: rowHeight.value * props.minRows + \"px\",\n      maxHeight: props.maxRows ? rowHeight.value * props.maxRows + \"px\" : void 0,\n      height: height.value + \"px\",\n      resize: isResizable.value ? void 0 : \"none\"\n    }));\n    const computedProps = computed(() => ({\n      ...pick(props, [\"disabled\", \"readonly\", \"placeholder\", \"ariaLabel\"])\n    }));\n    const focus = () => {\n      var _a;\n      (_a = textarea.value) == null ? void 0 : _a.focus();\n    };\n    const blur = () => {\n      var _a;\n      (_a = textarea.value) == null ? void 0 : _a.blur();\n    };\n    return {\n      textarea,\n      computedStyle,\n      listeners: createListeners(emit),\n      computedProps,\n      focus,\n      blur\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaTextarea.css';","map":{"version":3,"names":["positiveNumberValidator","val","Error","createEmits","createListeners","useEmitProxy","_sfc_main","defineComponent","name","props","useFormFieldProps","modelValue","type","String","Number","default","placeholder","autosize","Boolean","minRows","validator","maxRows","emits","setup","emit","textarea","shallowRef","rowHeight","ref","height","calculateRowHeight","calculateHeight","useTextareaRowHeight","isResizable","computed","value","updateRowHeight","updateHeight","onMounted","watch","nextTick","computedStyle","minHeight","maxHeight","resize","computedProps","pick","focus","_a","blur","listeners"],"sources":["../../../../../../../src/components/va-input/components/VaTextarea/VaTextarea.vue"],"sourcesContent":["<template>\n  <textarea\n    ref=\"textarea\"\n    class=\"textarea\"\n    :style=\"computedStyle\"\n    v-bind=\"{ ...computedProps, ...listeners }\"\n    :value=\"modelValue\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, watch, nextTick, CSSProperties, shallowRef } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useFormFieldProps, useEmitProxy } from '../../../../composables'\nimport { useTextareaRowHeight } from './useTextareaRowHeight'\n\nconst positiveNumberValidator = (val: number) => {\n  if (val > 0 && (val | 0) === val) {\n    return true\n  }\n  throw new Error(`\\`minRows|maxRows\\` must be a positive integer greater than 0, but ${val} is provided`)\n}\n\nconst { createEmits, createListeners } = useEmitProxy([\n  'input', 'change', 'click', 'update:modelValue',\n])\n\nexport default defineComponent({\n  name: 'VaTextarea',\n\n  props: {\n    ...useFormFieldProps,\n    modelValue: { type: [String, Number], default: '' },\n    placeholder: { type: String },\n    autosize: { type: Boolean, default: false },\n    minRows: {\n      type: Number,\n      default: 1,\n      validator: positiveNumberValidator,\n    },\n    maxRows: {\n      type: Number,\n      validator: positiveNumberValidator,\n    },\n  },\n\n  emits: createEmits(),\n\n  setup (props, { emit }) {\n    const textarea = shallowRef<HTMLTextAreaElement>()\n\n    const rowHeight = ref(-1)\n    const height = ref(-1)\n    const { calculateRowHeight, calculateHeight } = useTextareaRowHeight(textarea)\n\n    const isResizable = computed(() => {\n      return Boolean((props.autosize || props.maxRows || props.minRows !== 1) && textarea.value)\n    })\n\n    const updateRowHeight = () => {\n      if (isResizable.value) {\n        rowHeight.value = calculateRowHeight()\n      }\n    }\n\n    const updateHeight = () => {\n      if (isResizable.value) {\n        height.value = calculateHeight()\n      }\n    }\n\n    onMounted(() => {\n      updateRowHeight()\n      updateHeight()\n    })\n\n    watch(() => props.modelValue, () => {\n      nextTick(updateHeight)\n    })\n\n    const computedStyle = computed(() => ({\n      minHeight: rowHeight.value * props.minRows + 'px',\n      maxHeight: props.maxRows ? (rowHeight.value * props.maxRows + 'px') : undefined,\n      height: height.value + 'px',\n      resize: isResizable.value ? undefined : 'none',\n    }) as CSSProperties)\n\n    const computedProps = computed(() => ({\n      ...pick(props, ['disabled', 'readonly', 'placeholder', 'ariaLabel']),\n    }))\n\n    const focus = () => {\n      textarea.value?.focus()\n    }\n\n    const blur = () => {\n      textarea.value?.blur()\n    }\n\n    return {\n      textarea,\n      computedStyle,\n      listeners: createListeners(emit),\n      computedProps,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.textarea {\n  padding: 0;\n  border: 0;\n  font-family: var(--va-font-family);\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}