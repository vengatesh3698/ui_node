{"ast":null,"code":"import { V as VaModal } from \"./VaModal-e5b438bc.mjs\";\nimport { h, render, nextTick } from \"vue\";\nconst getNodeProps = vNode => {\n  var _a;\n  return ((_a = vNode.component) == null ? void 0 : _a.props) || {};\n};\nconst destroy = (el, vNode) => {\n  if (el) {\n    render(null, el);\n    el.remove();\n  }\n  el = null;\n};\nconst mount = (component, {\n  props,\n  appContext\n} = {}) => {\n  const el = document == null ? void 0 : document.createElement(\"div\");\n  let vNode;\n  const onClose = event => {\n    var _a;\n    (_a = props == null ? void 0 : props.onClose) == null ? void 0 : _a.call(props, event);\n    destroy(el);\n  };\n  const onUpdateModelValue = value => {\n    var _a;\n    (_a = props == null ? void 0 : props[\"onUpdate:modelValue\"]) == null ? void 0 : _a.call(props, value);\n    if ((props == null ? void 0 : props.withoutTransitions) && !value) {\n      nextTick(() => {\n        destroy(el);\n      });\n    }\n  };\n  vNode = h(component, {\n    ...props,\n    stateful: (props == null ? void 0 : props.stateful) ?? true,\n    modelValue: true,\n    onClose,\n    \"onUpdate:modelValue\": onUpdateModelValue\n  });\n  if (appContext) {\n    vNode.appContext = appContext;\n  }\n  if (el) {\n    render(vNode, el);\n  }\n  return {\n    vNode,\n    el\n  };\n};\nconst getModalOptions = options => typeof options === \"string\" ? {\n  message: options\n} : options;\nconst createModalInstance = (customProps, appContext) => {\n  const {\n    vNode,\n    el\n  } = mount(VaModal, {\n    appContext,\n    props: getModalOptions(customProps)\n  });\n  if (el && vNode.el && getNodeProps(vNode)) {\n    document.body.appendChild(el.childNodes[0]);\n  }\n  return vNode;\n};\nexport { createModalInstance as c };","map":{"version":3,"names":["getNodeProps","vNode","_a","component","props","destroy","el","render","remove","mount","appContext","document","createElement","onClose","event","call","onUpdateModelValue","value","withoutTransitions","nextTick","h","stateful","modelValue","getModalOptions","options","message","createModalInstance","customProps","VaModal","body","appendChild","childNodes"],"sources":["../../../../../src/components/va-modal/modal.ts"],"sourcesContent":["import { VaModal } from './VaModal'\nimport type { ModalOptions } from './types'\nimport { VNode, render, AppContext, h, nextTick } from 'vue'\n\ntype OptionKeys = keyof ModalOptions;\n\nconst getNodeProps = (vNode: VNode): Record<OptionKeys, any> => {\n  return (vNode.component?.props as Record<OptionKeys, any>) || {}\n}\n\nconst destroy = (el: HTMLElement | null | undefined, vNode: VNode | null) => {\n  if (el) {\n    render(null, el)\n    el.remove()\n  }\n\n  el = null\n  vNode = null\n}\n\nconst mount = (\n  component: any,\n  { props, appContext }: { props?: ModalOptions; appContext?: AppContext } = {},\n): { vNode: VNode; el?: HTMLElement } => {\n  const el: HTMLElement | undefined = document?.createElement('div')\n\n  // eslint-disable-next-line prefer-const\n  let vNode: VNode | null\n\n  // handling the case when 'withoutTransitions = false'\n  const onClose = (event: HTMLElement) => {\n    props?.onClose?.(event)\n    destroy(el, vNode)\n  }\n\n  // handling the case when 'withoutTransitions = true'\n  const onUpdateModelValue = (value: boolean) => {\n    props?.['onUpdate:modelValue']?.(value)\n\n    if (props?.withoutTransitions && !value) {\n      nextTick(() => { // this is required for all handlers to execute\n        destroy(el, vNode)\n      })\n    }\n  }\n\n  vNode = h(component, {\n    ...props,\n    stateful: props?.stateful ?? true,\n    modelValue: true,\n    onClose,\n    'onUpdate:modelValue': onUpdateModelValue,\n  })\n\n  if (appContext) {\n    vNode.appContext = appContext\n  }\n\n  if (el) {\n    render(vNode, el)\n  }\n\n  return { vNode, el }\n}\n\nconst getModalOptions = (options: string | ModalOptions): ModalOptions => typeof options === 'string'\n  ? { message: options }\n  : options\n\nexport const createModalInstance = (customProps: ModalOptions | string, appContext?: AppContext): VNode => {\n  const { vNode, el } = mount(VaModal, { appContext, props: getModalOptions(customProps) })\n\n  if (el && vNode.el && getNodeProps(vNode)) {\n    document.body.appendChild(el.childNodes[0])\n  }\n\n  return vNode\n}\n"],"mappings":";;AAMA,MAAMA,YAAA,GAAgBC,KAAA,IAA0C;;EACtD,SAAAC,EAAA,GAAAD,KAAA,CAAME,SAAA,KAAN,gBAAAD,EAAA,CAAiBE,KAAA,KAAqC;AAChE;AAEA,MAAMC,OAAA,GAAUA,CAACC,EAAA,EAAoCL,KAAA,KAAwB;EAC3E,IAAIK,EAAA,EAAI;IACNC,MAAA,CAAO,MAAMD,EAAE;IACfA,EAAA,CAAGE,MAAA,CAAO;EACZ;EAEKF,EAAA;AAEP;AAEA,MAAMG,KAAA,GAAQA,CACZN,SAAA,EACA;EAAEC,KAAA;EAAOM;AAAW,IAAuD,OACpC;EACjC,MAAAJ,EAAA,GAA8BK,QAAA,oBAAAA,QAAA,CAAUC,aAAA,CAAc;EAGxD,IAAAX,KAAA;EAGE,MAAAY,OAAA,GAAWC,KAAA,IAAuB;;IACtC,CAAAZ,EAAA,GAAAE,KAAA,oBAAAA,KAAA,CAAOS,OAAA,KAAP,gBAAAX,EAAA,CAAAa,IAAA,CAAAX,KAAA,EAAiBU,KAAA;IACjBT,OAAA,CAAQC,EAAS;EAAA;EAIb,MAAAU,kBAAA,GAAsBC,KAAA,IAAmB;;IACrC,CAAAf,EAAA,GAAAE,KAAA,oBAAAA,KAAA,4CAAAF,EAAA,CAAAa,IAAA,CAAAX,KAAA,EAAyBa,KAAA;IAE7B,KAAAb,KAAA,oBAAAA,KAAA,CAAOc,kBAAA,KAAsB,CAACD,KAAA,EAAO;MACvCE,QAAA,CAAS,MAAM;QACbd,OAAA,CAAQC,EAAS;MAAA,CAClB;IACH;EAAA;EAGFL,KAAA,GAAQmB,CAAA,CAAEjB,SAAA,EAAW;IACnB,GAAGC,KAAA;IACHiB,QAAA,GAAUjB,KAAA,oBAAAA,KAAA,CAAOiB,QAAA,KAAY;IAC7BC,UAAA,EAAY;IACZT,OAAA;IACA,uBAAuBG;EAAA,CACxB;EAED,IAAIN,UAAA,EAAY;IACdT,KAAA,CAAMS,UAAA,GAAaA,UAAA;EACrB;EAEA,IAAIJ,EAAA,EAAI;IACNC,MAAA,CAAON,KAAA,EAAOK,EAAE;EAClB;EAEO;IAAEL,KAAA;IAAOK;EAAA;AAClB;AAEA,MAAMiB,eAAA,GAAmBC,OAAA,IAAiD,OAAOA,OAAA,KAAY,WACzF;EAAEC,OAAA,EAASD;AACX,IAAAA,OAAA;AAES,MAAAE,mBAAA,GAAsBA,CAACC,WAAA,EAAoCjB,UAAA,KAAmC;EACzG,MAAM;IAAET,KAAA;IAAOK;EAAG,IAAIG,KAAA,CAAMmB,OAAA,EAAS;IAAElB,UAAA;IAAYN,KAAA,EAAOmB,eAAA,CAAgBI,WAAW;EAAG;EAExF,IAAIrB,EAAA,IAAML,KAAA,CAAMK,EAAA,IAAMN,YAAA,CAAaC,KAAK,GAAG;IACzCU,QAAA,CAASkB,IAAA,CAAKC,WAAA,CAAYxB,EAAA,CAAGyB,UAAA,CAAW,CAAC,CAAC;EAC5C;EAEO,OAAA9B,KAAA;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}