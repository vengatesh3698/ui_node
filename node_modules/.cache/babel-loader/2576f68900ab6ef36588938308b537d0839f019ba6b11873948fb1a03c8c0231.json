{"ast":null,"code":"import { _ as _sfc_main } from \"./VaSelectOption.vue_vue_type_script_lang-5ef66737.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, createCommentVNode, createTextVNode, toDisplayString, withDirectives, createVNode, vShow } from \"vue\";\nimport { _ as _export_sfc } from \"../../../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaSelectOption_vue_vue_type_style_index_0_lang = \"\";\nconst _hoisted_1 = [\"aria-selected\"];\nconst _hoisted_2 = {\n  key: 1,\n  class: \"va-select-option__highlighted\"\n};\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_icon = resolveComponent(\"va-icon\");\n  return openBlock(), createElementBlock(\"div\", {\n    role: \"option\",\n    class: normalizeClass([\"va-select-option\", _ctx.optionClass]),\n    style: normalizeStyle(_ctx.optionStyle),\n    \"aria-selected\": _ctx.isSelected\n  }, [_ctx.optionIcon ? (openBlock(), createBlock(_component_va_icon, {\n    key: 0,\n    size: \"small\",\n    class: \"va-select-option__icon\",\n    name: _ctx.optionIcon\n  }, null, 8, [\"name\"])) : createCommentVNode(\"\", true), createTextVNode(\" \" + toDisplayString(_ctx.optionTextSplitted.start) + \" \", 1), _ctx.optionTextSplitted.searchedSubString ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.optionTextSplitted.searchedSubString), 1)) : createCommentVNode(\"\", true), createTextVNode(\" \" + toDisplayString(_ctx.optionTextSplitted.end) + \" \", 1), withDirectives(createVNode(_component_va_icon, {\n    class: \"va-select-option__selected-icon\",\n    size: \"small\",\n    name: \"va-check\",\n    color: _ctx.optionIconColor\n  }, null, 8, [\"color\"]), [[vShow, _ctx.isSelected]])], 14, _hoisted_1);\n}\nconst _VaSelectOption = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaSelectOption as _ };","map":{"version":3,"names":["_hoisted_2","key","class","resolveComponent","openBlock","createElementBlock","role","normalizeClass","_ctx","optionClass","style","normalizeStyle","optionStyle","isSelected","optionIcon","createBlock","_component_va_icon","size","name","createCommentVNode","createTextVNode","toDisplayString","optionTextSplitted","start","searchedSubString","end","withDirectives","createVNode","color","optionIconColor","vShow"],"sources":["../../../../../../../src/components/va-select/components/VaSelectOption/VaSelectOption.vue"],"sourcesContent":["<template>\n  <div\n    role=\"option\"\n    class=\"va-select-option\"\n    :class=\"optionClass\"\n    :style=\"optionStyle\"\n    :aria-selected=\"isSelected\"\n  >\n    <va-icon\n      v-if=\"optionIcon\"\n      size=\"small\"\n      class=\"va-select-option__icon\"\n      :name=\"optionIcon\"\n    />\n    {{ optionTextSplitted.start }}\n    <span\n      v-if=\"optionTextSplitted.searchedSubString\"\n      class=\"va-select-option__highlighted\"\n    >\n      {{ optionTextSplitted.searchedSubString }}\n    </span>\n    {{ optionTextSplitted.end }}\n    <va-icon\n      v-show=\"isSelected\"\n      class=\"va-select-option__selected-icon\"\n      size=\"small\"\n      name=\"va-check\"\n      :color=\"optionIconColor\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, type PropType } from 'vue'\n\nimport { useColors, useColorProps, useBem } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\n\nimport { isNilValue } from '../../../../utils/isNilValue'\n\nimport type { SelectableOption } from '../../../../composables'\n\nexport default defineComponent({\n  name: 'VaSelectOption',\n\n  components: { VaIcon },\n\n  props: {\n    ...useColorProps,\n    disabled: { type: Boolean, default: false },\n    option: { type: [Number, String, Boolean, Object] as PropType<SelectableOption>, default: () => ({}) },\n    getText: { type: Function as PropType<(option: SelectableOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectableOption) => number | string>, required: true },\n    currentOption: { type: [String, Number, Boolean, Object] as PropType<SelectableOption | null>, default: null },\n    getSelectedState: { type: Function as PropType<(option: SelectableOption) => boolean>, required: true },\n    search: { type: String, default: '' },\n    highlightMatchedText: { type: Boolean, default: true },\n    inputFocused: { type: Boolean, default: false },\n    minSearchChars: { type: Number, default: 0 },\n  },\n\n  setup (props) {\n    const { getColor, getHoverColor } = useColors()\n\n    const optionIcon = computed(() => typeof props.option === 'object' ? (props.option.icon as string) : undefined)\n    const optionIconColor = computed(() => getColor(props.color))\n\n    const optionText = computed(() => props.getText(props.option))\n    const optionTextSplitted = computed(() => {\n      const defaultSplit = { start: optionText.value, searchedSubString: '', end: '' }\n\n      if (!optionText.value || !props.search || !props.highlightMatchedText || props.search.length < props.minSearchChars) {\n        return defaultSplit\n      }\n\n      const substringStartIndex = optionText.value.toLowerCase().indexOf(props.search.toLowerCase())\n\n      if (substringStartIndex < 0) { return defaultSplit }\n\n      const start = optionText.value.slice(0, substringStartIndex)\n      const searchedSubString = optionText.value.slice(substringStartIndex, substringStartIndex + props.search.length)\n      const end = optionText.value.slice(substringStartIndex + props.search.length)\n\n      return { start, searchedSubString, end }\n    })\n\n    const isSelected = computed(() => props.getSelectedState(props.option))\n    const isFocused = computed(() => {\n      if (isNilValue(props.currentOption)) { return false }\n      if (typeof props.option === 'string') { return props.option === props.currentOption }\n\n      return props.getTrackBy(props.currentOption) === props.getTrackBy(props.option)\n    })\n\n    const optionClass = useBem('va-select-option', () => ({\n      selected: isSelected.value,\n    }))\n\n    const optionStyle = computed(() => ({\n      color: isSelected.value ? getColor(props.color) : 'inherit',\n      backgroundColor: isFocused.value ? getHoverColor(getColor(props.color)) : 'transparent',\n      cursor: props.disabled ? 'default' : undefined,\n      opacity: props.disabled ? 'var(--va-select-option-list-option-disabled-opacity)' : undefined,\n    }))\n\n    return {\n      getColor,\n      optionIcon,\n      isSelected,\n      optionStyle,\n      optionClass,\n      optionIconColor,\n      optionTextSplitted,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-select-option {\n  min-height: var(--va-select-option-list-option-min-height);\n  padding: var(--va-select-option-list-option-padding);\n  display: var(--va-select-option-list-option-display);\n  align-items: var(--va-select-option-list-option-align-items);\n  word-break: var(--va-select-option-list-option-word-break);\n  cursor: var(--va-select-option-list-option-cursor);\n\n  &__icon {\n    margin-right: var(--va-select-option-list-option-icon-margin-right);\n  }\n\n  &__selected-icon {\n    margin-left: var(--va-select-option-list-option-selected-icon-margin-left);\n    font-size: var(--va-select-option-list-option-selected-icon-font-size);\n  }\n\n  &__highlighted {\n    color: var(--va-select-option-list-option-highlighted-color);\n    background-color: var(--va-select-option-list-option-highlighted-background-color);\n    border-radius: var(--va-select-option-list-option-highlighted-border-radius);\n    margin: var(--va-select-option-list-option-highlighted-margin);\n    padding: var(--va-select-option-list-option-highlighted-padding);\n  }\n}\n</style>\n"],"mappings":";;;;;MAiBMA,UAAA,GAAM;EAAAC,GAAA;EAAAC,KAAA;;;6BAhBVC,gBAAA,CA4BM;EA1BC,OAAAC,SAAA,IAAAC,kBAAA,CAAC,OACE;IACPC,IAAA,EAAK;IACLJ,KAAA,EAAAK,cAAA,CAAe,CAAU,oBAAAC,IAAA,CAAAC,WAAA;IAAAC,KAAA,EAAAC,cAAA,CAAAH,IAAA,CAAAI,WAAA;IAGR,iBAAAJ,IAAA,CAAAK;EAAA,IAAAL,IAAA,CAAAM,UAAA,IAAAV,SAAA,IACJW,WAAA,CAAAC,kBAAA;IACZf,GAAA,EAAK;IACJgB,IAAA,EAAM;IAAAf,KAAA;IAAAgB,IAAA,EAAAV,IAAA,CAAAM;eACP,MACF,MAEQK,kBAAA,CAAkB,IAAC,OAAAC,eAAA,OAD3BC,eAAA,CAKOb,IAAA,CADFc,kBAAA,CAAAC,KAAA,aACEf,IAAA,CAAAc,kBAAA,CAAAE,iBAAA,IAAApB,SAAA,IAAAC,kBAAA,CACP,QAAGL,UAAA,EAAAqB,eAAA,CACHb,IAAA,CAMEc,kBAAA,CAAAE,iBAAA,SAAAL,kBAAA,YAAAC,eAAA,CAJM,MAAiCC,eAAA,CAAAb,IAAA,CAAAc,kBAAA,CAAAG,GAAA,aAC3BC,cAAA,CAAAC,WAAA,CAAAX,kBAAA;IACZd,KAAA,EAAK;IACJe,IAAA,EAAK;IAAAC,IAAA;IAJEU,KAAA,EAAApB,IAAA,CAAAqB;EAAA,0BAAAC,KAAA,EAAAtB,IAAA,CAAAK,UAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}