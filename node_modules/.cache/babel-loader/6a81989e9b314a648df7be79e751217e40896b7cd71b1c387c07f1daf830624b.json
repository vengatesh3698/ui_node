{"ast":null,"code":"import { computed, getCurrentInstance } from \"vue\";\nimport { u as useGlobalConfig } from \"./useGlobalConfig-29bee2de.mjs\";\nconst useRouterLinkProps = {\n  tag: {\n    type: String,\n    default: \"span\"\n  },\n  to: {\n    type: [String, Object],\n    default: void 0\n  },\n  replace: {\n    type: Boolean,\n    default: void 0\n  },\n  append: {\n    type: Boolean,\n    default: void 0\n  },\n  exact: {\n    type: Boolean,\n    default: void 0\n  },\n  activeClass: {\n    type: String,\n    default: void 0\n  },\n  exactActiveClass: {\n    type: String,\n    default: void 0\n  },\n  href: {\n    type: String,\n    default: void 0\n  },\n  target: {\n    type: String,\n    default: void 0\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  }\n};\nconst useRouterLink = props => {\n  var _a;\n  const globalProperties = computed(() => {\n    var _a2;\n    return (_a2 = getCurrentInstance()) == null ? void 0 : _a2.appContext.config.globalProperties;\n  });\n  const vueRouter = computed(() => {\n    var _a2;\n    return (_a2 = globalProperties.value) == null ? void 0 : _a2.$router;\n  });\n  const vueRoute = computed(() => {\n    var _a2;\n    return (_a2 = globalProperties.value) == null ? void 0 : _a2.$route;\n  });\n  const {\n    getGlobalConfig\n  } = useGlobalConfig();\n  const routerComponent = getGlobalConfig().routerComponent;\n  const isNuxt = !!((_a = globalProperties.value) == null ? void 0 : _a.$nuxt);\n  const isNuxtLink = computed(() => !!(!props.disabled && props.to && isNuxt && routerComponent));\n  const tagComputed = computed(() => {\n    if (props.disabled) {\n      return props.tag;\n    }\n    if (props.href && !props.to) {\n      return \"a\";\n    }\n    if (isNuxtLink.value) {\n      return routerComponent;\n    }\n    if (props.to) {\n      return \"router-link\";\n    }\n    return props.tag || \"div\";\n  });\n  const isLinkTag = computed(() => isNuxtLink.value || [\"a\", \"router-link\"].includes(tagComputed.value));\n  const linkAttributesComputed = computed(() => {\n    if (!isLinkTag.value) {\n      return {};\n    }\n    return tagComputed.value === \"a\" ? {\n      target: props.target,\n      href: hrefComputed.value\n    } : {\n      target: props.target,\n      to: props.to,\n      replace: props.replace,\n      append: props.append,\n      activeClass: props.activeClass,\n      exact: props.exact,\n      exactActiveClass: props.exactActiveClass\n    };\n  });\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) {\n      return false;\n    }\n    const to = vueRouter.value.resolve(props.to).href;\n    const currentHref = vueRouter.value.currentRoute.value.path;\n    return to.replace(\"#\", \"\") === currentHref.replace(\"#\", \"\");\n  });\n  const hrefComputed = computed(() => {\n    var _a2;\n    return props.href || (props.to ? (_a2 = vueRouter.value) == null ? void 0 : _a2.resolve(props.to, vueRoute.value).href : void 0);\n  });\n  return {\n    isLinkTag,\n    tagComputed,\n    hrefComputed,\n    isActiveRouterLink,\n    linkAttributesComputed\n  };\n};\nexport { useRouterLink as a, useRouterLinkProps as u };","map":{"version":3,"names":["useRouterLinkProps","tag","type","String","default","to","Object","replace","Boolean","append","exact","activeClass","exactActiveClass","href","target","disabled","useRouterLink","props","globalProperties","computed","_a2","getCurrentInstance","appContext","config","vueRouter","value","$router","vueRoute","$route","getGlobalConfig","useGlobalConfig","routerComponent","isNuxt","_a","$nuxt","isNuxtLink","tagComputed","isLinkTag","includes","linkAttributesComputed","hrefComputed","isActiveRouterLink","resolve","currentHref","currentRoute","path"],"sources":["../../../../src/composables/useRouterLink.ts"],"sourcesContent":["import { computed, PropType, getCurrentInstance, type ExtractPropTypes } from 'vue'\n\nimport { useGlobalConfig } from '../services/global-config'\n\nexport const useRouterLinkProps = {\n  tag: { type: String, default: 'span' },\n  to: { type: [String, Object] as PropType<string | Record<string, any>>, default: undefined },\n  replace: { type: Boolean, default: undefined },\n  append: { type: Boolean, default: undefined },\n  exact: { type: Boolean, default: undefined },\n  activeClass: { type: String, default: undefined },\n  exactActiveClass: { type: String, default: undefined },\n  href: { type: String, default: undefined },\n  target: { type: String, default: undefined },\n  disabled: { type: Boolean, default: false },\n}\n\nexport const useRouterLink = (props: ExtractPropTypes<typeof useRouterLinkProps>) => {\n  const globalProperties = computed(() => getCurrentInstance()?.appContext.config.globalProperties)\n  const vueRouter = computed(() => globalProperties.value?.$router)\n  const vueRoute = computed(() => globalProperties.value?.$route)\n\n  const { getGlobalConfig } = useGlobalConfig()\n  const routerComponent = getGlobalConfig().routerComponent\n  const isNuxt = !!globalProperties.value?.$nuxt\n  const isNuxtLink = computed(() => !!(!props.disabled && props.to && isNuxt && routerComponent))\n\n  const tagComputed = computed(() => {\n    if (props.disabled) { return props.tag }\n\n    if (props.href && !props.to) { return 'a' }\n\n    if (isNuxtLink.value) { return routerComponent }\n\n    if (props.to) { return 'router-link' }\n\n    return props.tag || 'div'\n  })\n\n  const isLinkTag = computed(() => isNuxtLink.value || ['a', 'router-link'].includes(tagComputed.value as string))\n\n  const linkAttributesComputed = computed(() => {\n    if (!isLinkTag.value) { return {} }\n\n    return tagComputed.value === 'a'\n      ? {\n        target: props.target,\n        href: hrefComputed.value,\n      }\n      : {\n        target: props.target,\n        to: props.to,\n        replace: props.replace,\n        append: props.append,\n        activeClass: props.activeClass,\n        exact: props.exact,\n        exactActiveClass: props.exactActiveClass,\n      }\n  })\n\n  const isActiveRouterLink = computed(() => {\n    if (!vueRouter.value || !props.to) { return false }\n\n    const to = vueRouter.value.resolve(props.to).href\n    const currentHref = vueRouter.value.currentRoute.value.path\n\n    return to.replace('#', '') === currentHref.replace('#', '')\n  })\n\n  const hrefComputed = computed(() => {\n    // to resolve href on server for SEO optimization\n    // https://github.com/nuxt/nuxt.js/issues/8204\n    // @ts-ignore\n    return props.href || (props.to ? vueRouter.value?.resolve(props.to, vueRoute.value).href : undefined)\n  })\n\n  return {\n    isLinkTag,\n    tagComputed,\n    hrefComputed,\n    isActiveRouterLink,\n    linkAttributesComputed,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}