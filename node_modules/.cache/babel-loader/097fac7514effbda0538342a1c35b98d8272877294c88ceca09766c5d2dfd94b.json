{"ast":null,"code":"import { computed } from \"vue\";\nimport { s as safeCSSLength } from \"../../../utils/css-cc8466bb.mjs\";\nimport { c as useSelectableProp } from \"./useCommonProps-59d5fc97.mjs\";\nimport { u as useColors } from \"../../../composables/useColors-f23d24ff.mjs\";\nconst prefix = \"--va-data-table\";\nconst isFunction = val => typeof val === \"function\";\nconst useStylableProps = {\n  ...useSelectableProp,\n  selectedColor: {\n    type: String,\n    default: \"primary\"\n  },\n  allowFooterSorting: {\n    type: Boolean,\n    default: false\n  },\n  stickyHeader: {\n    type: Boolean,\n    default: false\n  },\n  stickyFooter: {\n    type: Boolean,\n    default: false\n  },\n  height: {\n    type: [String, Number]\n  }\n};\nconst getClass = classes => isFunction(classes) ? classes() : classes;\nconst getStyle = styles => isFunction(styles) ? styles() : styles;\nconst useStylable = props => {\n  const {\n    getColor,\n    getFocusColor,\n    getHoverColor\n  } = useColors();\n  const color = computed(() => getColor(props.selectedColor));\n  const CSSVariables = computed(() => ({\n    hoverColor: getHoverColor(color.value),\n    selectedColor: props.selectable ? getFocusColor(color.value) : void 0,\n    tableHeight: props.height ? safeCSSLength(props.height) : \"var(--va-data-table-height)\",\n    theadBg: props.stickyHeader ? \"var(--va-data-table-thead-background, var(--va-data-table-header-background))\" : \"var(--va-data-table-thead-background)\",\n    tfootBg: props.stickyFooter ? \"var(--va-data-table-tfoot-background, var(--va-data-table-header-background))\" : \"var(--va-data-table-tfoot-background)\"\n  }));\n  const getHeaderCSSVariables = column => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? \"pointer\" : \"default\"\n  });\n  const getCellCSSVariables = cell => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign\n  });\n  const getFooterCSSVariables = column => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? \"pointer\" : \"default\"\n  });\n  return {\n    CSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle\n  };\n};\nexport { useStylable as a, useStylableProps as u };","map":{"version":3,"names":["prefix","isFunction","val","useStylableProps","useSelectableProp","selectedColor","type","String","default","allowFooterSorting","Boolean","stickyHeader","stickyFooter","height","Number","getClass","classes","getStyle","styles","useStylable","props","getColor","getFocusColor","getHoverColor","useColors","color","computed","CSSVariables","hoverColor","value","selectable","tableHeight","safeCSSLength","theadBg","tfootBg","getHeaderCSSVariables","column","width","thAlign","thVerticalAlign","sortable","getCellCSSVariables","cell","tdAlign","tdVerticalAlign","getFooterCSSVariables"],"sources":["../../../../../../src/components/va-data-table/hooks/useStylable.ts"],"sourcesContent":["import { computed, PropType, ExtractPropTypes } from 'vue'\n\nimport { safeCSSLength } from '../../../utils/css'\nimport { useColors } from '../../../composables'\nimport { useSelectableProp } from './useCommonProps'\n\nimport type {\n  DataTableColumnInternal,\n  DataTableColumnClass,\n  DataTableColumnStyle,\n  DataTableCell,\n} from '../types'\n\nconst prefix = '--va-data-table'\n\nconst isFunction = (val: unknown): val is Function => typeof val === 'function'\n\nexport const useStylableProps = {\n  ...useSelectableProp,\n  selectedColor: { type: String, default: 'primary' },\n  allowFooterSorting: { type: Boolean, default: false },\n  stickyHeader: { type: Boolean, default: false },\n  stickyFooter: { type: Boolean, default: false },\n  height: { type: [String, Number] as PropType<string | number | undefined> },\n}\n\nconst getClass = (classes: DataTableColumnClass) => isFunction(classes) ? classes() : classes\nconst getStyle = (styles: DataTableColumnStyle) => isFunction(styles) ? styles() : styles\n\nexport const useStylable = (props: ExtractPropTypes<typeof useStylableProps>) => {\n  const { getColor, getFocusColor, getHoverColor } = useColors()\n\n  const color = computed(() => getColor(props.selectedColor))\n\n  const CSSVariables = computed(() => ({\n    hoverColor: getHoverColor(color.value),\n    selectedColor: props.selectable ? getFocusColor(color.value) : undefined,\n    tableHeight: props.height ? safeCSSLength(props.height) : 'var(--va-data-table-height)',\n    theadBg: props.stickyHeader\n      ? 'var(--va-data-table-thead-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-thead-background)',\n    tfootBg: props.stickyFooter\n      ? 'var(--va-data-table-tfoot-background, var(--va-data-table-header-background))'\n      : 'var(--va-data-table-tfoot-background)',\n  }))\n\n  const getHeaderCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-width`]: column.width && safeCSSLength(column.width),\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: column.sortable ? 'pointer' : 'default',\n  })\n\n  const getCellCSSVariables = (cell: DataTableCell) => ({\n    [`${prefix}-align`]: cell.column.tdAlign,\n    [`${prefix}-vertical-align`]: cell.column.tdVerticalAlign,\n  })\n\n  const getFooterCSSVariables = (column: DataTableColumnInternal) => ({\n    [`${prefix}-align`]: column.thAlign,\n    [`${prefix}-vertical-align`]: column.thVerticalAlign,\n    [`${prefix}-cursor`]: props.allowFooterSorting && column.sortable ? 'pointer' : 'default',\n  })\n\n  return {\n    CSSVariables,\n    getHeaderCSSVariables,\n    getCellCSSVariables,\n    getFooterCSSVariables,\n    getClass,\n    getStyle,\n  }\n}\n"],"mappings":";;;;AAaA,MAAMA,MAAA,GAAS;AAEf,MAAMC,UAAA,GAAcC,GAAA,IAAkC,OAAOA,GAAA,KAAQ;AAE9D,MAAMC,gBAAA,GAAmB;EAC9B,GAAGC,iBAAA;EACHC,aAAA,EAAe;IAAEC,IAAA,EAAMC,MAAA;IAAQC,OAAA,EAAS;EAAU;EAClDC,kBAAA,EAAoB;IAAEH,IAAA,EAAMI,OAAA;IAASF,OAAA,EAAS;EAAM;EACpDG,YAAA,EAAc;IAAEL,IAAA,EAAMI,OAAA;IAASF,OAAA,EAAS;EAAM;EAC9CI,YAAA,EAAc;IAAEN,IAAA,EAAMI,OAAA;IAASF,OAAA,EAAS;EAAM;EAC9CK,MAAA,EAAQ;IAAEP,IAAA,EAAM,CAACC,MAAA,EAAQO,MAAM;EAA2C;AAC5E;AAEA,MAAMC,QAAA,GAAYC,OAAA,IAAkCf,UAAA,CAAWe,OAAO,IAAIA,OAAA,CAAY,IAAAA,OAAA;AACtF,MAAMC,QAAA,GAAYC,MAAA,IAAiCjB,UAAA,CAAWiB,MAAM,IAAIA,MAAA,CAAW,IAAAA,MAAA;AAEtE,MAAAC,WAAA,GAAeC,KAAA,IAAqD;EAC/E,MAAM;IAAEC,QAAA;IAAUC,aAAA;IAAeC;EAAA,IAAkBC,SAAA,CAAU;EAE7D,MAAMC,KAAA,GAAQC,QAAA,CAAS,MAAML,QAAA,CAASD,KAAA,CAAMf,aAAa,CAAC;EAEpD,MAAAsB,YAAA,GAAeD,QAAA,CAAS,OAAO;IACnCE,UAAA,EAAYL,aAAA,CAAcE,KAAA,CAAMI,KAAK;IACrCxB,aAAA,EAAee,KAAA,CAAMU,UAAA,GAAaR,aAAA,CAAcG,KAAA,CAAMI,KAAK,IAAI;IAC/DE,WAAA,EAAaX,KAAA,CAAMP,MAAA,GAASmB,aAAA,CAAcZ,KAAA,CAAMP,MAAM,IAAI;IAC1DoB,OAAA,EAASb,KAAA,CAAMT,YAAA,GACX,kFACA;IACJuB,OAAA,EAASd,KAAA,CAAMR,YAAA,GACX,kFACA;EACJ;EAEI,MAAAuB,qBAAA,GAAyBC,MAAA,KAAqC;IAClE,CAAC,GAAGpC,MAAA,QAAc,GAAGoC,MAAA,CAAOC,KAAA,IAASL,aAAA,CAAcI,MAAA,CAAOC,KAAK;IAC/D,CAAC,GAAGrC,MAAA,QAAc,GAAGoC,MAAA,CAAOE,OAAA;IAC5B,CAAC,GAAGtC,MAAA,iBAAuB,GAAGoC,MAAA,CAAOG,eAAA;IACrC,CAAC,GAAGvC,MAAA,SAAe,GAAGoC,MAAA,CAAOI,QAAA,GAAW,YAAY;EAAA;EAGhD,MAAAC,mBAAA,GAAuBC,IAAA,KAAyB;IACpD,CAAC,GAAG1C,MAAA,QAAc,GAAG0C,IAAA,CAAKN,MAAA,CAAOO,OAAA;IACjC,CAAC,GAAG3C,MAAA,iBAAuB,GAAG0C,IAAA,CAAKN,MAAA,CAAOQ;EAAA;EAGtC,MAAAC,qBAAA,GAAyBT,MAAA,KAAqC;IAClE,CAAC,GAAGpC,MAAA,QAAc,GAAGoC,MAAA,CAAOE,OAAA;IAC5B,CAAC,GAAGtC,MAAA,iBAAuB,GAAGoC,MAAA,CAAOG,eAAA;IACrC,CAAC,GAAGvC,MAAA,SAAe,GAAGoB,KAAA,CAAMX,kBAAA,IAAsB2B,MAAA,CAAOI,QAAA,GAAW,YAAY;EAAA;EAG3E;IACLb,YAAA;IACAQ,qBAAA;IACAM,mBAAA;IACAI,qBAAA;IACA9B,QAAA;IACAE;EAAA;AAEJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}