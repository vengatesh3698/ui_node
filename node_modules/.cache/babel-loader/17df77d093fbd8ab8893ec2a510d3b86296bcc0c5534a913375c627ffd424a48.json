{"ast":null,"code":"import { defineComponent } from \"vue\";\nimport { u as useTreeView } from \"./hooks/useTreeView-b428d23c.mjs\";\nimport { u as useTreeViewProps, a as useTreeViewEmits } from \"./hooks/useTreeHelpers-914126ee.mjs\";\nimport { V as VaTreeNode } from \"./components/VaTreeNode/index-121faae3.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaTreeView\",\n  props: {\n    ...useTreeViewProps\n  },\n  emits: [...useTreeViewEmits],\n  components: {\n    VaTreeNode\n  },\n  setup: (props, {\n    emit\n  }) => {\n    const {\n      treeItems,\n      getTrackBy\n    } = useTreeView(props, emit);\n    return {\n      treeItems,\n      getTrackBy\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaTreeView.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","props","useTreeViewProps","emits","useTreeViewEmits","components","VaTreeNode","setup","emit","treeItems","getTrackBy","useTreeView"],"sources":["../../../../../src/components/va-tree-view/VaTreeView.vue"],"sourcesContent":["<template>\n  <div class=\"va-tree-view\" role=\"tree\">\n    <template v-if=\"$props.filter && !treeItems.length\">\n      <slot name=\"not-found\">No matching nodes found</slot>\n    </template>\n    <template v-else>\n      <va-tree-node\n        v-for=\"nodeItem in treeItems\"\n        :key=\"getTrackBy(nodeItem)\"\n        :node=\"nodeItem\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"slotScope\">\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n      </va-tree-node>\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nimport useTreeView from './hooks/useTreeView'\nimport { useTreeViewProps, useTreeViewEmits } from './hooks/useTreeHelpers'\n\nimport { VaTreeNode } from './components/VaTreeNode'\n\nexport default defineComponent({\n  name: 'VaTreeView',\n\n  props: { ...useTreeViewProps },\n\n  emits: [...useTreeViewEmits],\n\n  components: { VaTreeNode },\n\n  setup: (props, { emit }) => {\n    const { treeItems, getTrackBy } = useTreeView(props, emit)\n\n    return { treeItems, getTrackBy }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-tree-view {\n  padding: var(--va-tree-view-padding);\n  font-family: var(--va-font-family);\n}\n</style>\n"],"mappings":";;;;AA2BA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,KAAA,EAAO;IAAE,GAAGC;EAAiB;EAE7BC,KAAA,EAAO,CAAC,GAAGC,gBAAgB;EAE3BC,UAAA,EAAY;IAAEC;EAAW;EAEzBC,KAAA,EAAOA,CAACN,KAAA,EAAO;IAAEO;EAAA,MAAW;IAC1B,MAAM;MAAEC,SAAA;MAAWC;IAAA,IAAeC,WAAA,CAAYV,KAAA,EAAOO,IAAI;IAElD;MAAEC,SAAA;MAAWC;IAAA;EACtB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}