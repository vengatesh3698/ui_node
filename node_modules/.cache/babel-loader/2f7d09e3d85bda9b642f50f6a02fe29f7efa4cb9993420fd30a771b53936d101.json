{"ast":null,"code":"import { defineComponent, computed } from \"vue\";\nimport { g as generateUniqueId } from \"../../utils/uuid-7d2e5892.mjs\";\nimport { u as useFormFieldProps, a as useFormField } from \"../../composables/useFormField-0ac52e7e.mjs\";\nimport { u as useComponentPresetProp } from \"../../composables/useComponentPreset-0dfbd395.mjs\";\nimport { u as useColors } from \"../../composables/useColors-f23d24ff.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaRadio\",\n  emits: [\"update:modelValue\", \"focus\"],\n  props: {\n    ...useFormFieldProps,\n    ...useComponentPresetProp,\n    modelValue: {\n      type: [Boolean, Array, String, Object, Number],\n      default: null\n    },\n    option: {\n      type: [String, Boolean, Object, Number],\n      default: null\n    },\n    name: {\n      type: String,\n      default: \"\"\n    },\n    label: {\n      type: String,\n      default: \"\"\n    },\n    leftLabel: {\n      type: Boolean,\n      default: false\n    },\n    color: {\n      type: String,\n      default: \"primary\"\n    },\n    tabindex: {\n      type: [String, Number],\n      default: 0\n    }\n  },\n  setup(props, {\n    emit\n  }) {\n    const {\n      getColor\n    } = useColors();\n    const isActive = computed(() => props.modelValue === props.option);\n    const {\n      computedClasses\n    } = useFormField(\"va-radio\", props);\n    const computedClass = computed(() => ({\n      \"va-radio--left-label\": props.leftLabel,\n      ...computedClasses\n    }));\n    const iconBackgroundComputedStyles = computed(() => ({\n      backgroundColor: getColor(props.color)\n    }));\n    const iconDotComputedStyles = computed(() => {\n      if (!isActive.value) {\n        return;\n      }\n      return {\n        borderColor: getColor(props.color),\n        backgroundColor: getColor(props.color)\n      };\n    });\n    const iconComputedStyles = computed(() => {\n      if (!isActive.value) {\n        return;\n      }\n      return {\n        borderColor: getColor(props.color)\n      };\n    });\n    const computedLabel = computed(() => props.label || props.option);\n    const onClick = e => {\n      if (props.readonly || props.disabled) {\n        return;\n      }\n      emit(\"update:modelValue\", props.option, e);\n    };\n    const onFocus = e => emit(\"focus\", e);\n    return {\n      computedClass,\n      isActive,\n      iconBackgroundComputedStyles,\n      iconDotComputedStyles,\n      iconComputedStyles,\n      computedLabel,\n      onClick,\n      onFocus,\n      computedName: computed(() => props.name || generateUniqueId()),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex)\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaRadio.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","emits","props","useFormFieldProps","useComponentPresetProp","modelValue","type","Boolean","Array","String","Object","Number","default","option","label","leftLabel","color","tabindex","setup","emit","getColor","useColors","isActive","computed","computedClasses","useFormField","computedClass","iconBackgroundComputedStyles","backgroundColor","iconDotComputedStyles","value","borderColor","iconComputedStyles","computedLabel","onClick","e","readonly","disabled","onFocus","computedName","generateUniqueId","tabIndexComputed"],"sources":["../../../../../src/components/va-radio/VaRadio.vue"],"sourcesContent":["<template>\n  <label\n    class=\"va-radio\"\n    :class=\"computedClass\"\n  >\n    <input\n      class=\"va-radio__input\"\n      type=\"radio\"\n      :checked=\"isActive\"\n      :disabled=\"$props.disabled\"\n      :readonly=\"$props.readonly\"\n      :name=\"computedName\"\n      :value=\"computedLabel\"\n      :aria-checked=\"isActive\"\n      :tabindex=\"tabIndexComputed\"\n      @change=\"onClick\"\n      @focus=\"onFocus\"\n    >\n\n    <span\n      aria-hidden=\"true\"\n      class=\"va-radio__icon\"\n      :style=\"iconComputedStyles\"\n    >\n      <span\n        class=\"va-radio__icon__background\"\n        :style=\"iconBackgroundComputedStyles\"\n      />\n      <span\n        class=\"va-radio__icon__dot\"\n        :style=\"iconDotComputedStyles\"\n      />\n    </span>\n\n    <span class=\"va-radio__text\">\n      <slot>\n        {{ computedLabel }}\n      </slot>\n    </span>\n  </label>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed } from 'vue'\n\nimport { generateUniqueId } from '../../utils/uuid'\nimport { useComponentPresetProp, useColors, useFormFieldProps, useFormField } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaRadio',\n  emits: ['update:modelValue', 'focus'],\n  props: {\n    ...useFormFieldProps,\n    ...useComponentPresetProp,\n    modelValue: { type: [Boolean, Array, String, Object, Number] as PropType<boolean | null | string | number | Record<any, unknown> | unknown[]>, default: null },\n    option: { type: [String, Boolean, Object, Number] as PropType<any>, default: null },\n    name: { type: String, default: '' },\n    label: { type: String, default: '' },\n    leftLabel: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    tabindex: { type: [String, Number], default: 0 },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n\n    const isActive = computed(() => props.modelValue === props.option)\n\n    const { computedClasses } = useFormField('va-radio', props)\n\n    const computedClass = computed(() => ({\n      'va-radio--left-label': props.leftLabel,\n      ...computedClasses,\n    }))\n\n    const iconBackgroundComputedStyles = computed(() => ({\n      backgroundColor: getColor(props.color),\n    }))\n\n    const iconDotComputedStyles = computed(() => {\n      if (!isActive.value) { return }\n\n      return {\n        borderColor: getColor(props.color),\n        backgroundColor: getColor(props.color),\n      }\n    })\n\n    const iconComputedStyles = computed(() => {\n      if (!isActive.value) { return }\n\n      return { borderColor: getColor(props.color) }\n    })\n\n    const computedLabel = computed(() => props.label || props.option)\n\n    const onClick = (e: Event) => {\n      if (props.readonly || props.disabled) { return }\n      emit('update:modelValue', props.option, e)\n    }\n\n    const onFocus = (e: Event) => emit('focus', e)\n\n    return {\n      computedClass,\n      isActive,\n      iconBackgroundComputedStyles,\n      iconDotComputedStyles,\n      iconComputedStyles,\n      computedLabel,\n      onClick,\n      onFocus,\n      computedName: computed(() => props.name || generateUniqueId()),\n      tabIndexComputed: computed(() => props.disabled ? -1 : props.tabindex),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-radio {\n  display: var(--va-radio-display);\n  align-items: center;\n  cursor: var(--va-radio-cursor);\n  position: var(--va-radio-position);\n  margin-top: var(--va-radio-margin-top);\n  margin-right: var(--va-radio-margin-right);\n  transition: var(--va-radio-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  &--disabled {\n    cursor: var(--va-radio-disabled-cursor);\n  }\n\n  &--readonly {\n    @include va-readonly;\n\n    .va-radio--left-label,\n    .va-radio__text {\n      cursor: initial;\n      pointer-events: auto;\n    }\n  }\n\n  &--left-label {\n    flex-direction: row-reverse;\n    display: inline-flex;\n  }\n\n  &__input {\n    @include visually-hidden;\n  }\n\n  &__icon {\n    transition: var(--va-radio-icon-transition);\n    display: flex;\n    align-items: center;\n    width: var(--va-radio-icon-width);\n    height: var(--va-radio-icon-height);\n    border-radius: var(--va-radio-icon-border-radius);\n    position: relative;\n    border: var(--va-radio-icon-border);\n    box-sizing: border-box;\n\n    .va-radio__input:disabled + & {\n      @include va-disabled;\n    }\n\n    .va-radio__input:focus-visible + & {\n      @include focus-outline('inherit');\n    }\n\n    &__dot {\n      transition: var(--va-radio-dot-transition, var(--va-swing-transition));\n      position: absolute;\n      top: var(--va-radio-dot-top);\n      left: var(--va-radio-dot-left);\n      right: var(--va-radio-dot-right);\n      bottom: var(--va-radio-dot-bottom);\n      border-radius: var(--va-radio-dot-border-radius);\n      background-color: var(--va-radio-dot-background-color);\n      opacity: var(--va-radio-dot-opacity);\n\n      .va-radio__input:checked + .va-radio__icon & {\n        opacity: 1;\n        top: 0.25rem;\n        left: 0.25rem;\n        right: 0.25rem;\n        bottom: 0.25rem;\n      }\n    }\n\n    &__background {\n      transition:\n        var(\n          --va-radio-background-transition,\n          var(--va-swing-transition)\n        );\n      position: absolute;\n      top: var(--va-radio-background-top);\n      left: var(--va-radio-background-left);\n      right: var(--va-radio-background-right);\n      bottom: var(--va-radio-background-bottom);\n      background-color: var(--va-radio-background-background-color);\n      border-radius: var(--va-radio-background-border-radius);\n      z-index: var(--va-radio-background-z-index);\n      opacity: var(--va-radio-background-opacity);\n\n      .va-radio:hover & {\n        opacity: 0.2;\n      }\n\n      .va-radio--disabled:hover & {\n        opacity: 0;\n      }\n    }\n  }\n\n  &__text {\n    display: var(--va-radio-text-display);\n    margin-left: var(--va-radio-text-margin-left);\n    margin-right: var(--va-radio-text-margin-right);\n\n    .va-radio--disabled & {\n      @include va-disabled;\n    }\n\n    .va-radio--left-label & {\n      margin-left: 0;\n      margin-right: 0.5rem;\n    }\n  }\n}\n</style>\n"],"mappings":";;;;;AAgDA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EACNC,KAAA,EAAO,CAAC,qBAAqB,OAAO;EACpCC,KAAA,EAAO;IACL,GAAGC,iBAAA;IACH,GAAGC,sBAAA;IACHC,UAAA,EAAY;MAAEC,IAAA,EAAM,CAACC,OAAA,EAASC,KAAA,EAAOC,MAAA,EAAQC,MAAA,EAAQC,MAAM;MAAoFC,OAAA,EAAS;IAAK;IAC7JC,MAAA,EAAQ;MAAEP,IAAA,EAAM,CAACG,MAAA,EAAQF,OAAA,EAASG,MAAA,EAAQC,MAAM;MAAoBC,OAAA,EAAS;IAAK;IAClFZ,IAAA,EAAM;MAAEM,IAAA,EAAMG,MAAA;MAAQG,OAAA,EAAS;IAAG;IAClCE,KAAA,EAAO;MAAER,IAAA,EAAMG,MAAA;MAAQG,OAAA,EAAS;IAAG;IACnCG,SAAA,EAAW;MAAET,IAAA,EAAMC,OAAA;MAASK,OAAA,EAAS;IAAM;IAC3CI,KAAA,EAAO;MAAEV,IAAA,EAAMG,MAAA;MAAQG,OAAA,EAAS;IAAU;IAC1CK,QAAA,EAAU;MAAEX,IAAA,EAAM,CAACG,MAAA,EAAQE,MAAM;MAAGC,OAAA,EAAS;IAAE;EACjD;EACAM,MAAOhB,KAAA,EAAO;IAAEiB;EAAA,GAAQ;IAChB;MAAEC;IAAA,IAAaC,SAAA;IAErB,MAAMC,QAAA,GAAWC,QAAA,CAAS,MAAMrB,KAAA,CAAMG,UAAA,KAAeH,KAAA,CAAMW,MAAM;IAEjE,MAAM;MAAEW;IAAoB,IAAAC,YAAA,CAAa,YAAYvB,KAAK;IAEpD,MAAAwB,aAAA,GAAgBH,QAAA,CAAS,OAAO;MACpC,wBAAwBrB,KAAA,CAAMa,SAAA;MAC9B,GAAGS;IACH;IAEI,MAAAG,4BAAA,GAA+BJ,QAAA,CAAS,OAAO;MACnDK,eAAA,EAAiBR,QAAA,CAASlB,KAAA,CAAMc,KAAK;IACrC;IAEI,MAAAa,qBAAA,GAAwBN,QAAA,CAAS,MAAM;MACvC,KAACD,QAAA,CAASQ,KAAA,EAAO;QAAE;MAAO;MAEvB;QACLC,WAAA,EAAaX,QAAA,CAASlB,KAAA,CAAMc,KAAK;QACjCY,eAAA,EAAiBR,QAAA,CAASlB,KAAA,CAAMc,KAAK;MAAA;IACvC,CACD;IAEK,MAAAgB,kBAAA,GAAqBT,QAAA,CAAS,MAAM;MACpC,KAACD,QAAA,CAASQ,KAAA,EAAO;QAAE;MAAO;MAE9B,OAAO;QAAEC,WAAA,EAAaX,QAAA,CAASlB,KAAA,CAAMc,KAAK;MAAE;IAAA,CAC7C;IAED,MAAMiB,aAAA,GAAgBV,QAAA,CAAS,MAAMrB,KAAA,CAAMY,KAAA,IAASZ,KAAA,CAAMW,MAAM;IAE1D,MAAAqB,OAAA,GAAWC,CAAA,IAAa;MACxB,IAAAjC,KAAA,CAAMkC,QAAA,IAAYlC,KAAA,CAAMmC,QAAA,EAAU;QAAE;MAAO;MAC1ClB,IAAA,sBAAqBjB,KAAA,CAAMW,MAAA,EAAQsB,CAAC;IAAA;IAG3C,MAAMG,OAAA,GAAWH,CAAA,IAAahB,IAAA,CAAK,SAASgB,CAAC;IAEtC;MACLT,aAAA;MACAJ,QAAA;MACAK,4BAAA;MACAE,qBAAA;MACAG,kBAAA;MACAC,aAAA;MACAC,OAAA;MACAI,OAAA;MACAC,YAAA,EAAchB,QAAA,CAAS,MAAMrB,KAAA,CAAMF,IAAA,IAAQwC,gBAAA,EAAkB;MAC7DC,gBAAA,EAAkBlB,QAAA,CAAS,MAAMrB,KAAA,CAAMmC,QAAA,GAAW,KAAKnC,KAAA,CAAMe,QAAQ;IAAA;EAEzE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}