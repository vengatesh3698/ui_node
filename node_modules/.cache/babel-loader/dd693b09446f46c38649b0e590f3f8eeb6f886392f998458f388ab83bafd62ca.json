{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { k as kebabCase } from \"../../../vendor-fff696df.mjs\";\nimport { defineCustomElement } from \"vue\";\nconst componentsOrder = [\"VaConfig\",\n// VaConfig should be registered before any component, because it provides them config\n\"VaForm\",\n// VaForm registered before any component, but not before VaConfig\n\"VaAccordion\", \"VaFileUpload\", \"VaSidebar\", \"VaTabs\"];\nconst registerVuesticWebComponentsEssential = options => {\n  const {\n    css,\n    components\n  } = options;\n  Object.entries(components).sort(([nameA], [nameB]) => {\n    if (!componentsOrder.includes(nameA) && !componentsOrder.includes(nameB)) {\n      return 0;\n    }\n    let indexA = componentsOrder.indexOf(nameA);\n    let indexB = componentsOrder.indexOf(nameB);\n    if (indexA === -1) {\n      indexA = Number.MAX_SAFE_INTEGER;\n    }\n    if (indexB === -1) {\n      indexB = Number.MAX_SAFE_INTEGER;\n    }\n    return indexA - indexB;\n  }).forEach(([name, component]) => {\n    const customElement = defineCustomElement(component);\n    if (css && \"styles\" in component) {\n      component.styles.push(css);\n    }\n    customElements.define(`${kebabCase(name)}`, customElement);\n  });\n};\nexport { registerVuesticWebComponentsEssential as r };","map":{"version":3,"names":["componentsOrder","registerVuesticWebComponentsEssential","options","css","components","Object","entries","sort","nameA","nameB","includes","indexA","indexOf","indexB","Number","MAX_SAFE_INTEGER","forEach","name","component","customElement","defineCustomElement","styles","push","customElements","define","kebabCase"],"sources":["../../../../../src/services/web-components/register-vuestic-web-components-essential.ts"],"sourcesContent":["import kebabCase from 'lodash/kebabCase.js'\nimport { defineCustomElement } from 'vue'\nimport { type VuesticComponent } from '../vue-plugin/types/index'\n\n/**\n * We need to re-order component registration, so\n * components which provide something should be registered first\n */\nconst componentsOrder = [\n  'VaConfig', // VaConfig should be registered before any component, because it provides them config\n  'VaForm', // VaForm registered before any component, but not before VaConfig\n  'VaAccordion',\n  'VaFileUpload',\n  'VaSidebar',\n  'VaTabs',\n]\n\n/**\n * Register vuestic components as Custom Elements\n *\n * @see https://vuestic.dev/getting-started/web-components\n */\nexport const registerVuesticWebComponentsEssential = (options: {\n  /**\n   * In case you need pass some css to shadow-dom of Custom Element\n   *\n   * @example\n   * For Material Icons support inside Custom Element we need to pass `.material-icons` class.\n   *\n   * @default\n   * We do this by default, so you don't need to copy past it. In case you want to use different icon\n   * font, then you need to provide class manually.\n   * Notice: we don't need to pass font, but only style. Fonts are inherited from actual DOM.\n```css\n  .material-icons {\n    font-family: 'Material Icons';\n    font-weight: normal;\n    font-style: normal;\n    line-height: 1;\n    letter-spacing: normal;\n    text-transform: none;\n    display: inline-block;\n    white-space: nowrap;\n    word-wrap: normal;\n    direction: ltr;\n    -webkit-font-smoothing: antialiased;\n}\n```\n   */\n  css?: string,\n\n  /**\n   * Vuestic Component that must be registered as Custom Elements.\n   *\n   * **Make sure to make all imports from `vuestic-ui/web-components`**.\n   */\n  components: Record<string, VuesticComponent>\n}) => {\n  const { css, components } = options\n\n  Object\n    .entries(components)\n    // Re-order components, so components which provides something always registered first\n    .sort(([nameA], [nameB]) => {\n      if (!componentsOrder.includes(nameA) && !componentsOrder.includes(nameB)) {\n        return 0 // Skip components without order\n      }\n\n      let indexA = componentsOrder.indexOf(nameA)\n      let indexB = componentsOrder.indexOf(nameB)\n      // If component is unordered, this means that it should be after ordered components\n      if (indexA === -1) { indexA = Number.MAX_SAFE_INTEGER }\n      if (indexB === -1) { indexB = Number.MAX_SAFE_INTEGER }\n\n      return indexA - indexB\n    })\n    .forEach(([name, component]) => {\n      const customElement = defineCustomElement(component as any)\n\n      // Add custom CSS to component's Shadow DOM\n      if (css && 'styles' in component) { component.styles.push(css) }\n\n      customElements.define(`${kebabCase(name)}`, customElement)\n    })\n}\n"],"mappings":";;;AAQA,MAAMA,eAAA,GAAkB,CACtB;AAAA;AACA;AAAA;AACA,eACA,gBACA,aACA,SACF;AAOa,MAAAC,qCAAA,GAAyCC,OAAA,IAmChD;EACE;IAAEC,GAAA;IAAKC;EAAe,IAAAF,OAAA;EAGzBG,MAAA,CAAAC,OAAA,CAAQF,UAAU,EAElBG,IAAA,CAAK,CAAC,CAACC,KAAK,GAAG,CAACC,KAAK,MAAM;IACtB,KAACT,eAAA,CAAgBU,QAAA,CAASF,KAAK,KAAK,CAACR,eAAA,CAAgBU,QAAA,CAASD,KAAK,GAAG;MACjE;IACT;IAEI,IAAAE,MAAA,GAASX,eAAA,CAAgBY,OAAA,CAAQJ,KAAK;IACtC,IAAAK,MAAA,GAASb,eAAA,CAAgBY,OAAA,CAAQH,KAAK;IAE1C,IAAIE,MAAA,KAAW,IAAI;MAAEA,MAAA,GAASG,MAAA,CAAOC,gBAAA;IAAiB;IACtD,IAAIF,MAAA,KAAW,IAAI;MAAEA,MAAA,GAASC,MAAA,CAAOC,gBAAA;IAAiB;IAEtD,OAAOJ,MAAA,GAASE,MAAA;EACjB,GACAG,OAAA,CAAQ,CAAC,CAACC,IAAA,EAAMC,SAAS,MAAM;IACxB,MAAAC,aAAA,GAAgBC,mBAAA,CAAoBF,SAAgB;IAGtD,IAAAf,GAAA,IAAO,YAAYe,SAAA,EAAW;MAAYA,SAAA,CAAAG,MAAA,CAAOC,IAAA,CAAKnB,GAAG;IAAE;IAE/DoB,cAAA,CAAeC,MAAA,CAAO,GAAGC,SAAA,CAAUR,IAAI,KAAKE,aAAa;EAAA,CAC1D;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}