{"ast":null,"code":"import { _ as _sfc_main } from \"./VaButtonDropdown.vue_vue_type_script_lang-8249f329.mjs\";\nimport { resolveComponent, openBlock, createElementBlock, normalizeClass, createBlock, mergeProps, withCtx, createVNode, toHandlers, withKeys, withModifiers, renderSlot, createTextVNode, toDisplayString, normalizeProps, createCommentVNode } from \"vue\";\nimport { _ as _export_sfc } from \"../../../plugin-vue_export-helper-cc2b3d55.mjs\";\nconst VaButtonDropdown_vue_vue_type_style_index_0_lang = \"\";\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_va_button = resolveComponent(\"va-button\");\n  const _component_va_dropdown_content = resolveComponent(\"va-dropdown-content\");\n  const _component_va_dropdown = resolveComponent(\"va-dropdown\");\n  const _component_va_button_group = resolveComponent(\"va-button-group\");\n  return openBlock(), createElementBlock(\"div\", {\n    class: normalizeClass([\"va-button-dropdown\", _ctx.computedClass])\n  }, [!_ctx.$props.split ? (openBlock(), createBlock(_component_va_dropdown, mergeProps({\n    key: 0\n  }, _ctx.vaDropdownProps, {\n    modelValue: _ctx.valueComputed,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.valueComputed = $event),\n    disabled: _ctx.$props.disabled || _ctx.$props.disableDropdown\n  }), {\n    anchor: withCtx(() => [createVNode(_component_va_button, mergeProps({\n      \"aria-label\": _ctx.tp(_ctx.$props.ariaLabel)\n    }, {\n      ..._ctx.computedButtonIcons,\n      ..._ctx.buttonPropsComputed\n    }, toHandlers(_ctx.listeners), {\n      onKeydown: withKeys(withModifiers(_ctx.hideDropdown, [\"prevent\"]), [\"esc\"])\n    }), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])]),\n      _: 3\n    }, 16, [\"aria-label\", \"onKeydown\"])]),\n    default: withCtx(() => [renderSlot(_ctx.$slots, \"content\", {}, () => [createVNode(_component_va_dropdown_content, null, {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n      _: 3\n    })])]),\n    _: 3\n  }, 16, [\"modelValue\", \"disabled\"])) : (openBlock(), createBlock(_component_va_button_group, normalizeProps(mergeProps({\n    key: 1\n  }, _ctx.buttonPropsComputed)), {\n    default: withCtx(() => [!_ctx.$props.leftIcon ? (openBlock(), createBlock(_component_va_button, mergeProps({\n      key: 0,\n      disabled: _ctx.$props.disabled || _ctx.$props.disableButton\n    }, _ctx.computedMainButtonProps, toHandlers(_ctx.mainButtonListeners)), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])]),\n      _: 3\n    }, 16, [\"disabled\"])) : createCommentVNode(\"\", true), createVNode(_component_va_dropdown, mergeProps({\n      modelValue: _ctx.valueComputed,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.valueComputed = $event)\n    }, _ctx.vaDropdownProps, {\n      disabled: _ctx.$props.disabled || _ctx.$props.disableDropdown,\n      teleport: _ctx.$el\n    }), {\n      anchor: withCtx(() => [createVNode(_component_va_button, mergeProps({\n        \"aria-label\": _ctx.$props.ariaLabel || _ctx.t(\"toggleDropdown\"),\n        disabled: _ctx.$props.disabled || _ctx.$props.disableDropdown,\n        icon: _ctx.computedIcon,\n        \"icon-color\": _ctx.$props.iconColor\n      }, toHandlers(_ctx.listeners), {\n        onKeydown: withKeys(withModifiers(_ctx.hideDropdown, [\"prevent\"]), [\"esc\"])\n      }), null, 16, [\"aria-label\", \"disabled\", \"icon\", \"icon-color\", \"onKeydown\"])]),\n      default: withCtx(() => [createVNode(_component_va_dropdown_content, null, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      })]),\n      _: 3\n    }, 16, [\"modelValue\", \"disabled\", \"teleport\"]), _ctx.$props.leftIcon ? (openBlock(), createBlock(_component_va_button, mergeProps({\n      key: 1,\n      disabled: _ctx.$props.disabled || _ctx.$props.disableButton\n    }, _ctx.computedMainButtonProps, toHandlers(_ctx.mainButtonListeners)), {\n      default: withCtx(() => [renderSlot(_ctx.$slots, \"label\", {}, () => [createTextVNode(toDisplayString(_ctx.label), 1)])]),\n      _: 3\n    }, 16, [\"disabled\"])) : createCommentVNode(\"\", true)]),\n    _: 3\n  }, 16))], 2);\n}\nconst _VaButtonDropdown = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\nexport { _VaButtonDropdown as _ };","map":{"version":3,"names":["resolveComponent","normalizeClass","_ctx","computedClass","$props","split","openBlock","createBlock","_component_va_dropdown","mergeProps","key","vaDropdownProps","modelValue","valueComputed","_cache","$event","disabled","disableDropdown","anchor","withCtx","createVNode","_component_va_button","tp","ariaLabel","computedButtonIcons","buttonPropsComputed","toHandlers","listeners","onKeydown","withKeys","withModifiers","hideDropdown","default","renderSlot","$slots","_component_va_dropdown_content","_component_va_button_group","normalizeProps","leftIcon","disableButton","computedMainButtonProps","mainButtonListeners","createCommentVNode","teleport","$el","t","icon","computedIcon","iconColor","_"],"sources":["../../../../../src/components/va-button-dropdown/VaButtonDropdown.vue"],"sourcesContent":["<template>\n  <div class=\"va-button-dropdown\" :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      v-bind=\"vaDropdownProps\"\n      v-model=\"valueComputed\"\n      :disabled=\"$props.disabled || $props.disableDropdown\"\n    >\n      <template #anchor>\n        <va-button\n          :aria-label=\"tp($props.ariaLabel)\"\n          v-bind=\"{ ...computedButtonIcons, ...buttonPropsComputed }\"\n          v-on=\"listeners\"\n          @keydown.esc.prevent=\"hideDropdown\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <slot name=\"content\">\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </slot>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      v-bind=\"buttonPropsComputed\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"computedMainButtonProps\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        v-model=\"valueComputed\"\n        v-bind=\"vaDropdownProps\"\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :teleport=\"$el\"\n      >\n        <template #anchor>\n          <va-button\n            :aria-label=\"$props.ariaLabel || t('toggleDropdown')\"\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            :icon-color=\"$props.iconColor\"\n            v-on=\"listeners\"\n            @keydown.esc.prevent=\"hideDropdown\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"computedMainButtonProps\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\nimport omit from 'lodash/omit.js'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport {\n  useBem,\n  useComponentPresetProp,\n  useStateful, useStatefulProps,\n  useEmitProxy,\n  usePlacementAliasesProps,\n  useTranslation,\n} from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(['click'])\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst VaButtonProps = omit(extractComponentProps(VaButton), ['iconRight', 'block'])\nconst VaDropdownProps = extractComponentProps(VaDropdown)\n\nexport default defineComponent({\n  name: 'VaButtonDropdown',\n  components: {\n    VaButton,\n    VaDropdown,\n    VaButtonGroup,\n    VaDropdownContent,\n  },\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n  props: {\n    ...useComponentPresetProp,\n    ...VaButtonProps,\n    ...VaDropdownProps,\n    ...useStatefulProps,\n    ...usePlacementAliasesProps,\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    icon: { type: String, default: 'va-arrow-down' },\n    openedIcon: { type: String, default: 'va-arrow-up' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n    iconColor: { type: String, default: '' },\n\n    disabled: { type: Boolean, default: false },\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n\n    offset: { type: [Number, Array] as PropType<number | [number, number]>, default: 2 },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n\n    ariaLabel: { type: String, default: '$t:toggleDropdown' },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed(() => valueComputed.value ? props.openedIcon : props.icon)\n\n    const computedClass = useBem('va-button-dropdown', () => ({\n      split: props.split,\n    }))\n\n    const computedButtonIcons = computed(() => {\n      if (props.hideIcon) { return {} }\n\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return { [propName]: computedIcon.value }\n    })\n\n    const buttonPropsFiltered = computed(() => {\n      let ignoredProps = ['to', 'href', 'loading', 'icon']\n      const presetProps = [\n        'plain',\n        'textOpacity', 'backgroundOpacity',\n        'hoverOpacity', 'hoverBehavior', 'hoverOpacity',\n        'pressedOpacity', 'pressedBehavior', 'pressedOpacity',\n      ]\n\n      if (props.preset) {\n        ignoredProps = [...ignoredProps, ...presetProps]\n      }\n\n      const filteredProps = omit(VaButtonProps, ignoredProps)\n      return Object.keys(filteredProps)\n    })\n    const buttonPropsComputed = computed(\n      () => Object.entries(props)\n        .filter(([key, _]) => buttonPropsFiltered.value.includes(key))\n        .reduce((acc, [key, value]) => {\n          Object.assign(acc, { [key]: value })\n          return acc\n        }, {}),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    const hideDropdown = () => { valueComputed.value = false }\n\n    return {\n      ...useTranslation(),\n      vaDropdownProps: filterComponentProps(VaDropdownProps),\n      hideDropdown,\n      valueComputed,\n      computedIcon,\n      computedClass,\n      computedButtonIcons,\n      buttonPropsComputed,\n      computedMainButtonProps,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n@import '../../styles/resources';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n  vertical-align: middle;\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-button {\n      @include keyboard-focus-outline($offset: -2px);\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}