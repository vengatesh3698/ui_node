{"ast":null,"code":"import { defineComponent, ref, computed } from \"vue\";\nimport { V as VaIcon } from \"../va-icon/index-0ebbc0f2.mjs\";\nimport { u as useIsMounted } from \"../../composables/useIsMounted-a63f9559.mjs\";\nimport { u as useClickOutside } from \"../../composables/useClickOutside-df7e5a91.mjs\";\nimport { u as useDocument } from \"../../composables/useDocument-5c9446c6.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaViewer\",\n  inheritAttrs: false,\n  components: {\n    VaIcon\n  },\n  setup(_, {\n    slots\n  }) {\n    const content = ref();\n    const controls = ref();\n    const isMounted = useIsMounted();\n    const isClosed = ref(true);\n    const isOpened = computed(() => isMounted.value && !isClosed.value);\n    const openViewer = () => isClosed.value = false;\n    const closeViewer = () => isClosed.value = true;\n    const handleAnchorClick = () => {\n      if (!slots.anchor) {\n        openViewer();\n      }\n    };\n    useClickOutside([content, controls], closeViewer);\n    const document = useDocument();\n    const teleportTarget = computed(() => {\n      var _a;\n      return (_a = document.value) == null ? void 0 : _a.body;\n    });\n    return {\n      content,\n      controls,\n      teleportTarget,\n      isOpened,\n      openViewer,\n      closeViewer,\n      handleAnchorClick\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../VaViewer.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","inheritAttrs","components","VaIcon","setup","_","slots","content","ref","controls","isMounted","useIsMounted","isClosed","isOpened","computed","value","openViewer","closeViewer","handleAnchorClick","anchor","useClickOutside","document","useDocument","teleportTarget","_a","body"],"sources":["../../../../../src/components/va-viewer/VaViewer.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-viewer\"\n    v-bind=\"$attrs\"\n    @click=\"handleAnchorClick\"\n  >\n    <slot\n      name=\"anchor\"\n      v-bind=\"{ openViewer }\"\n    />\n\n    <slot v-if=\"!$slots.anchor\" />\n  </div>\n\n  <teleport\n    v-if=\"isOpened\"\n    :to=\"teleportTarget\"\n  >\n    <div class=\"va-viewer-content\">\n      <div\n        ref=\"content\"\n        class=\"va-viewer-content__main-area\"\n      >\n        <slot v-if=\"!$slots.image\" />\n        <slot name=\"image\" />\n      </div>\n\n      <div\n        ref=\"controls\"\n        class=\"va-viewer-content__controls-panel\"\n      >\n        <slot name=\"controls\" />\n\n        <slot\n          name=\"close\"\n          v-bind=\"{ close: closeViewer }\"\n        >\n          <button\n            class=\"va-viewer-content__close-button\"\n            @click=\"closeViewer\"\n          >\n            <va-icon\n              name=\"close\"\n              color=\"backgroundPrimary\"\n            />\n          </button>\n        </slot>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue'\n\nimport { VaIcon } from '../va-icon'\n\nimport { useIsMounted, useDocument, useClickOutside } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaViewer',\n\n  inheritAttrs: false,\n\n  components: { VaIcon },\n\n  setup (_, { slots }) {\n    const content = ref<HTMLElement>()\n    const controls = ref<HTMLElement>()\n\n    const isMounted = useIsMounted()\n    const isClosed = ref(true)\n    const isOpened = computed(() => isMounted.value && !isClosed.value)\n\n    const openViewer = () => (isClosed.value = false)\n    const closeViewer = () => (isClosed.value = true)\n    const handleAnchorClick = () => {\n      if (!slots.anchor) {\n        openViewer()\n      }\n    }\n\n    useClickOutside([content, controls], closeViewer)\n\n    const document = useDocument()\n    const teleportTarget = computed(() => document.value?.body)\n\n    return {\n      content,\n      controls,\n\n      teleportTarget,\n      isOpened,\n\n      openViewer,\n      closeViewer,\n      handleAnchorClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-viewer {\n  --va-image-position: relative;\n}\n\n.va-viewer-content {\n  position: fixed;\n  inset: 0;\n  z-index: var(--va-viewer-content-overlay-z-index);\n  display: flex;\n  justify-content: center;\n  background-color: var(--va-viewer-content-overlay-background-color);\n\n  &__main-area {\n    --va-image-content-position: relative;\n\n    display: flex;\n\n    & > * {\n      width: auto;\n      max-width: unset;\n    }\n  }\n\n  &__controls-panel {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: var(--va-viewer-content-controls-panel-z-index);\n    display: flex;\n    justify-content: var(--va-viewer-content-controls-panel-justify-content);\n    padding: var(--va-viewer-content-controls-panel-padding);\n    background-color: var(--va-viewer-content-controls-panel-background-color);\n  }\n}\n</style>\n"],"mappings":";;;;;AA2DA,MAAAA,SAAA,GAAeC,eAAA,CAAgB;EAC7BC,IAAA,EAAM;EAENC,YAAA,EAAc;EAEdC,UAAA,EAAY;IAAEC;EAAO;EAErBC,MAAOC,CAAA,EAAG;IAAEC;EAAA,GAAS;IACnB,MAAMC,OAAA,GAAUC,GAAA;IAChB,MAAMC,QAAA,GAAWD,GAAA;IAEjB,MAAME,SAAA,GAAYC,YAAA;IACZ,MAAAC,QAAA,GAAWJ,GAAA,CAAI,IAAI;IACzB,MAAMK,QAAA,GAAWC,QAAA,CAAS,MAAMJ,SAAA,CAAUK,KAAA,IAAS,CAACH,QAAA,CAASG,KAAK;IAE5D,MAAAC,UAAA,GAAaA,CAAA,KAAOJ,QAAA,CAASG,KAAA,GAAQ;IACrC,MAAAE,WAAA,GAAcA,CAAA,KAAOL,QAAA,CAASG,KAAA,GAAQ;IAC5C,MAAMG,iBAAA,GAAoBA,CAAA,KAAM;MAC1B,KAACZ,KAAA,CAAMa,MAAA,EAAQ;QACNH,UAAA;MACb;IAAA;IAGFI,eAAA,CAAgB,CAACb,OAAA,EAASE,QAAQ,GAAGQ,WAAW;IAEhD,MAAMI,QAAA,GAAWC,WAAA;IACjB,MAAMC,cAAA,GAAiBT,QAAA,CAAS;;MAAM,QAAAU,EAAA,GAAAH,QAAA,CAASN,KAAA,KAAT,gBAAAS,EAAA,CAAgBC,IAAA;IAAA,CAAI;IAEnD;MACLlB,OAAA;MACAE,QAAA;MAEAc,cAAA;MACAV,QAAA;MAEAG,UAAA;MACAC,WAAA;MACAC;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}