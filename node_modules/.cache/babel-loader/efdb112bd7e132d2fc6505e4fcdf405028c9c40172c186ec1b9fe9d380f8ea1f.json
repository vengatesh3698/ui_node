{"ast":null,"code":"import { V as VaTimePickerColumnCell } from \"../VaTimePickerColumnCell-7272f5f1.mjs\";\nimport { defineComponent, shallowRef, watch, onMounted, nextTick, computed } from \"vue\";\nimport { d as debounce } from \"../../../../../vendor-fff696df.mjs\";\nimport { a as useFocusEmits, u as useFocus } from \"../../../../composables/useFocus-4393f76a.mjs\";\nimport { u as useSyncProp } from \"../../../../composables/useSyncProp-326abeda.mjs\";\nimport { u as useElementBackground } from \"../../../../composables/useElementBackground/useElementBackground-1a8d719e.mjs\";\nimport { u as useTextColor } from \"../../../../composables/useTextColor-f36510ca.mjs\";\nconst _sfc_main = defineComponent({\n  name: \"VaTimePickerColumn\",\n  components: {\n    VaTimePickerColumnCell\n  },\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    },\n    activeItemIndex: {\n      type: Number,\n      default: 0\n    },\n    cellHeight: {\n      type: Number,\n      default: 30\n    }\n  },\n  emits: [\"item-selected\", \"update:activeItemIndex\", ...useFocusEmits],\n  setup(props, {\n    emit\n  }) {\n    const rootElement = shallowRef();\n    const {\n      focus,\n      blur\n    } = useFocus(rootElement, emit);\n    const [syncActiveItemIndex] = useSyncProp(\"activeItemIndex\", props, emit);\n    watch(syncActiveItemIndex, newVal => {\n      scrollTo(newVal);\n    });\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false));\n    const scrollTo = (index, animated = true) => {\n      nextTick(() => {\n        var _a, _b;\n        (_b = (_a = rootElement.value) == null ? void 0 : _a.scrollTo) == null ? void 0 : _b.call(_a, {\n          behavior: animated ? \"smooth\" : \"auto\",\n          top: index * props.cellHeight\n        });\n      });\n    };\n    const makeActiveByIndex = index => {\n      syncActiveItemIndex.value = index;\n      nextTick(() => scrollTo(syncActiveItemIndex.value));\n    };\n    const makeActiveNext = times => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length;\n      nextTick(() => scrollTo(syncActiveItemIndex.value));\n    };\n    const makeActivePrev = times => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length;\n      nextTick(() => scrollTo(syncActiveItemIndex.value));\n    };\n    const onCellClick = index => {\n      syncActiveItemIndex.value = index;\n    };\n    const formatCell = n => {\n      if (!Number.isInteger(n)) {\n        return n;\n      }\n      return Number(n) < 10 ? `0${n}` : `${n}`;\n    };\n    const {\n      background\n    } = useElementBackground(rootElement);\n    const {\n      textColorComputed\n    } = useTextColor(background);\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value\n    }));\n    const getIndex = () => {\n      const scrollTop = rootElement.value.scrollTop;\n      const calculatedIndex = Math.max((scrollTop - scrollTop % props.cellHeight) / props.cellHeight, scrollTop / props.cellHeight);\n      if (calculatedIndex >= props.items.length) {\n        return props.items.length - 1;\n      }\n      if (calculatedIndex < 0) {\n        return 0;\n      }\n      if (syncActiveItemIndex.value * props.cellHeight < scrollTop) {\n        return Math.ceil(calculatedIndex);\n      } else if (syncActiveItemIndex.value * props.cellHeight > scrollTop) {\n        return Math.floor(calculatedIndex);\n      } else {\n        return Math.round(calculatedIndex);\n      }\n    };\n    const onScroll = debounce(() => {\n      if (rootElement.value && syncActiveItemIndex.value !== -1) {\n        syncActiveItemIndex.value = getIndex();\n      }\n    }, 200);\n    return {\n      syncActiveItemIndex,\n      rootElement,\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n      onScroll,\n      onCellClick,\n      formatCell,\n      styleComputed,\n      focus,\n      blur\n    };\n  }\n});\nexport { _sfc_main as _ };\nimport '../../../../../VaTimePickerColumn.css';","map":{"version":3,"names":["_sfc_main","defineComponent","name","components","VaTimePickerColumnCell","props","items","type","Array","default","activeItemIndex","Number","cellHeight","emits","useFocusEmits","setup","emit","rootElement","shallowRef","focus","blur","useFocus","syncActiveItemIndex","useSyncProp","watch","newVal","scrollTo","onMounted","value","index","animated","nextTick","_b","_a","call","behavior","top","makeActiveByIndex","makeActiveNext","times","length","makeActivePrev","onCellClick","formatCell","n","isInteger","background","useElementBackground","textColorComputed","useTextColor","styleComputed","computed","color","getIndex","scrollTop","calculatedIndex","Math","max","ceil","floor","round","onScroll","debounce"],"sources":["../../../../../../../src/components/va-time-picker/components/VaTimePickerColumn/VaTimePickerColumn.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"rootElement\"\n    tabindex=\"0\"\n    class=\"va-time-picker-column\"\n    @keydown.down.stop.prevent=\"makeActiveNext()\"\n    @keydown.space.stop.prevent=\"makeActiveNext(5)\"\n    @keydown.up.stop.prevent=\"makeActivePrev()\"\n    :style=\"styleComputed\"\n  >\n    <VaTimePickerColumnCell\n      v-for=\"(item, index) in items\" :key=\"item\"\n      @scroll.passive=\"onScroll\"\n      @touchmove.passive=\"onScroll\"\n      @mousewheel.passive=\"onScroll\"\n    >\n      <div\n        class=\"va-time-picker-cell\"\n        :class=\"{ 'va-time-picker-cell--active': index === $props.activeItemIndex }\"\n        @click=\"onCellClick(index)\"\n      >\n        <slot name=\"cell\" v-bind=\"{ item, index, activeItemIndex, items, formattedItem: formatCell(item) }\">\n          {{ formatCell(item) }}\n        </slot>\n      </div>\n    </VaTimePickerColumnCell>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport VaTimePickerColumnCell from '../VaTimePickerColumnCell.vue'\nimport { defineComponent, nextTick, shallowRef, watch, onMounted, PropType, computed } from 'vue'\n\nimport { useElementBackground, useSyncProp, useFocus, useFocusEmits, useTextColor } from '../../../../composables'\nimport debounce from 'lodash/debounce.js'\n\nexport default defineComponent({\n  name: 'VaTimePickerColumn',\n\n  components: { VaTimePickerColumnCell },\n\n  props: {\n    items: { type: Array as PropType<string[] | number[]>, default: () => [] },\n    activeItemIndex: { type: Number, default: 0 },\n    cellHeight: { type: Number, default: 30 },\n  },\n\n  emits: ['item-selected', 'update:activeItemIndex', ...useFocusEmits],\n\n  setup (props, { emit }) {\n    const rootElement = shallowRef<HTMLElement>()\n    const { focus, blur } = useFocus(rootElement, emit)\n    const [syncActiveItemIndex] = useSyncProp('activeItemIndex', props, emit)\n\n    watch(syncActiveItemIndex, (newVal) => { scrollTo(newVal) })\n\n    onMounted(() => scrollTo(syncActiveItemIndex.value, false))\n\n    const scrollTo = (index: number, animated = true) => {\n      nextTick(() => {\n        // see: https://github.com/vuejs/vue-test-utils/issues/319#issuecomment-354667621\n        rootElement.value?.scrollTo?.({\n          behavior: animated ? 'smooth' : 'auto',\n          top: index * props.cellHeight,\n        })\n      })\n    }\n\n    const makeActiveByIndex = (index: number) => {\n      syncActiveItemIndex.value = index\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActiveNext = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value + (times || 1)) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const makeActivePrev = (times?: number) => {\n      syncActiveItemIndex.value = (syncActiveItemIndex.value - (times || 1) + props.items.length) % props.items.length\n      nextTick(() => scrollTo(syncActiveItemIndex.value))\n    }\n\n    const onCellClick = (index: number) => {\n      syncActiveItemIndex.value = index\n    }\n\n    const formatCell = (n: number | string): string => {\n      if (!Number.isInteger(n)) { return n as string }\n\n      return Number(n) < 10 ? `0${n}` : `${n}`\n    }\n\n    const { background } = useElementBackground(rootElement)\n    const { textColorComputed } = useTextColor(background)\n\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n    }))\n    const getIndex = () => {\n      const scrollTop = rootElement.value!.scrollTop\n      const calculatedIndex = Math.max(\n        (scrollTop - scrollTop % props.cellHeight) / props.cellHeight,\n        scrollTop / props.cellHeight,\n      )\n\n      if (calculatedIndex >= props.items.length) {\n        return props.items.length - 1\n      }\n      if (calculatedIndex < 0) {\n        return 0\n      }\n\n      if (syncActiveItemIndex.value * props.cellHeight < scrollTop) {\n        return Math.ceil(calculatedIndex)\n      } else if (syncActiveItemIndex.value * props.cellHeight > scrollTop) {\n        return Math.floor(calculatedIndex)\n      } else {\n        return Math.round(calculatedIndex)\n      }\n    }\n\n    const onScroll = debounce(() => {\n      if (rootElement.value && syncActiveItemIndex.value !== -1) {\n        syncActiveItemIndex.value = getIndex()\n      }\n    }, 200)\n\n    return {\n      syncActiveItemIndex,\n      rootElement,\n\n      makeActiveNext,\n      makeActivePrev,\n      makeActiveByIndex,\n      onScroll,\n\n      onCellClick,\n      formatCell,\n\n      styleComputed,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n@import '../../../../styles/resources';\n\n@mixin hiddenYScroll {\n  overflow-y: scroll;\n  -ms-overflow-style: none;  /* IE and Edge */\n  scrollbar-width: none;  /* Firefox */\n  &::-webkit-scrollbar { /* WebKit */\n    display: none;\n  }\n}\n\n.va-time-picker-column {\n  @include hiddenYScroll();\n\n  height: 100%;\n  border-right: var(--va-time-picker-column-border-right);\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n    height: var(--va-time-picker-column-gap-height);\n    width: 100%;\n  }\n\n  &:last-child {\n    border-right: 0;\n  }\n\n  .va-time-picker-cell {\n    height: var(--va-time-picker-cell-height);\n    line-height: var(--va-time-picker-cell-height);\n    width: var(--va-time-picker-cell-width);\n    text-align: center;\n    cursor: var(--va-time-picker-cell-cursor);\n    user-select: none;\n\n    &--active {\n      position: relative;\n      color: var(--va-time-picker-cell-active-color);\n      z-index: 0;\n\n      &::before {\n        background: var(--va-time-picker-cell-active-background);\n        position: absolute;\n        height: 100%;\n        width: 100%;\n        left: 0;\n        right: 0;\n        content: '';\n        z-index: -1;\n        opacity: var(--va-time-picker-cell-active-background-opacity);\n      }\n    }\n\n    &:hover {\n      background: var(--va-time-picker-cell-background-color-hover);\n    }\n  }\n\n  &:focus-visible {\n    outline: none;\n\n    .va-time-picker-cell {\n      &--active {\n        @include focus-outline($radius: 4px, $offset: -2px);\n      }\n    }\n  }\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}