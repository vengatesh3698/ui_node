{"ast":null,"code":"import { w as warn } from \"../../utils/console-42c8e8cc.mjs\";\nconst validateSlider = (value, step, min, max, range) => {\n  if (Array.isArray(value) && !range || !Array.isArray(value) && range) {\n    warn(`The type \"${Array.isArray(value) ? \"array\" : typeof value}\" of prop \"model-value\" does not match prop \"range = ${range}\".`);\n  }\n  if (max < min) {\n    warn(`The maximum value (${max}) can not be less than the minimum value (${min}).`);\n  }\n  if ((max - min) % step !== 0) {\n    warn(`Step ${step} is illegal. Slider is non-divisible (Min:Max-${min}:${max}).`);\n  }\n  const inRange = v => {\n    if (v < min) {\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`);\n    } else if (v > max) {\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`);\n    }\n  };\n  if (Array.isArray(value)) {\n    value.map(inRange);\n  } else {\n    inRange(value);\n  }\n  return true;\n};\nexport { validateSlider as v };","map":{"version":3,"names":["validateSlider","value","step","min","max","range","Array","isArray","warn","inRange","v","map"],"sources":["../../../../../src/components/va-slider/validateSlider.ts"],"sourcesContent":["import { warn } from '../../utils/console'\n\nexport const validateSlider = (value: number | number[], step: number, min: number, max: number, range: boolean) => {\n  if ((Array.isArray(value) && !range) || (!Array.isArray(value) && range)) {\n    warn(`The type \"${Array.isArray(value) ? 'array' : typeof value}\" of prop \"model-value\" does not match prop \"range = ${range}\".`)\n  }\n\n  if (max < min) {\n    warn(`The maximum value (${max}) can not be less than the minimum value (${min}).`)\n  }\n\n  if ((max - min) % step !== 0) {\n    warn(`Step ${step} is illegal. Slider is non-divisible (Min:Max-${min}:${max}).`)\n  }\n\n  const inRange = (v: number) => {\n    if (v < min) {\n      warn(`The value of the slider is ${v}, the minimum value is ${min}, the value of this slider can not be less than the minimum value`)\n    } else if (v > max) {\n      warn(`The value of the slider is ${v}, the maximum value is ${max}, the value of this slider can not be greater than the maximum value`)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    value.map(inRange)\n  } else {\n    inRange(value)\n  }\n\n  return true\n}\n"],"mappings":";AAEO,MAAMA,cAAA,GAAiBA,CAACC,KAAA,EAA0BC,IAAA,EAAcC,GAAA,EAAaC,GAAA,EAAaC,KAAA,KAAmB;EAC7G,IAAAC,KAAA,CAAMC,OAAA,CAAQN,KAAK,KAAK,CAACI,KAAA,IAAW,CAACC,KAAA,CAAMC,OAAA,CAAQN,KAAK,KAAKI,KAAA,EAAQ;IACnEG,IAAA,cAAaF,KAAA,CAAMC,OAAA,CAAQN,KAAK,IAAI,UAAU,OAAOA,KAAA,wDAA6DI,KAAA,IAAS;EAClI;EAEA,IAAID,GAAA,GAAMD,GAAA,EAAK;IACRK,IAAA,uBAAsBJ,GAAA,6CAAgDD,GAAA,IAAO;EACpF;EAEK,KAAAC,GAAA,GAAMD,GAAA,IAAOD,IAAA,KAAS,GAAG;IACvBM,IAAA,SAAQN,IAAA,iDAAqDC,GAAA,IAAOC,GAAA,IAAO;EAClF;EAEM,MAAAK,OAAA,GAAWC,CAAA,IAAc;IAC7B,IAAIA,CAAA,GAAIP,GAAA,EAAK;MACNK,IAAA,+BAA8BE,CAAA,0BAA2BP,GAAA,mEAAsE;IAAA,WAC3HO,CAAA,GAAIN,GAAA,EAAK;MACbI,IAAA,+BAA8BE,CAAA,0BAA2BN,GAAA,sEAAyE;IACzI;EAAA;EAGE,IAAAE,KAAA,CAAMC,OAAA,CAAQN,KAAK,GAAG;IACxBA,KAAA,CAAMU,GAAA,CAAIF,OAAO;EAAA,OACZ;IACLA,OAAA,CAAQR,KAAK;EACf;EAEO;AACT"},"metadata":{},"sourceType":"module","externalDependencies":[]}