{"ast":null,"code":"import { getCurrentInstance, computed, unref } from \"vue\";\nimport { u as useColors } from \"./useColors-f23d24ff.mjs\";\nconst useTextColor = (componentColor, isTransparent = false) => {\n  const {\n    props\n  } = getCurrentInstance();\n  const {\n    getColor,\n    getTextColor\n  } = useColors();\n  const textColorComputed = computed(() => {\n    if (props.textColor) {\n      return getColor(props.textColor);\n    }\n    const componentColorHex = getColor(unref(componentColor) || props.color);\n    return unref(isTransparent) ? componentColorHex : getColor(getTextColor(componentColorHex));\n  });\n  return {\n    textColorComputed\n  };\n};\nexport { useTextColor as u };","map":{"version":3,"names":["useTextColor","componentColor","isTransparent","props","getCurrentInstance","getColor","getTextColor","useColors","textColorComputed","computed","textColor","componentColorHex","unref","color"],"sources":["../../../../src/composables/useTextColor.ts"],"sourcesContent":["import { computed, getCurrentInstance, Ref, unref } from 'vue'\n\nimport { useColors } from './useColors'\n\ntype PropsType = {\n  textColor: string,\n  color?: string\n}\n\n/**\n * @param componentColor component color. By default `props.color`.\n * @param isTransparent if transparent will return component color as text color.\n * @returns Computed text color based on component's color if `props.textColor` if provided.\n */\nexport const useTextColor = (componentColor?: Ref<string> | string | undefined, isTransparent: boolean | Ref<boolean> = false) => {\n  const { props } = getCurrentInstance() as unknown as { props: PropsType }\n  const { getColor, getTextColor } = useColors()\n\n  const textColorComputed = computed(() => {\n    if (props.textColor) { return getColor(props.textColor) }\n\n    const componentColorHex = getColor(unref(componentColor) || props.color)\n    return unref(isTransparent) ? componentColorHex : getColor(getTextColor(componentColorHex))\n  })\n\n  return { textColorComputed }\n}\n"],"mappings":";;AAcO,MAAMA,YAAA,GAAeA,CAACC,cAAA,EAAmDC,aAAA,GAAwC,UAAU;EAC1H;IAAEC;EAAA,IAAUC,kBAAA;EAClB,MAAM;IAAEC,QAAA;IAAUC;EAAa,IAAIC,SAAA,CAAU;EAEvC,MAAAC,iBAAA,GAAoBC,QAAA,CAAS,MAAM;IACvC,IAAIN,KAAA,CAAMO,SAAA,EAAW;MAAS,OAAAL,QAAA,CAASF,KAAA,CAAMO,SAAS;IAAE;IAExD,MAAMC,iBAAA,GAAoBN,QAAA,CAASO,KAAA,CAAMX,cAAc,KAAKE,KAAA,CAAMU,KAAK;IACvE,OAAOD,KAAA,CAAMV,aAAa,IAAIS,iBAAA,GAAoBN,QAAA,CAASC,YAAA,CAAaK,iBAAiB,CAAC;EAAA,CAC3F;EAED,OAAO;IAAEH;EAAkB;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}