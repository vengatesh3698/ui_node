export declare const VaNavbar: import("vue").DefineComponent<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    shape: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    scrollRoot: import("vue").ShallowRef<HTMLElement | undefined>;
    computedStyle: import("vue").ComputedRef<{
        backgroundColor: string;
        color: string;
        fill: string;
        top: string | undefined;
        transform: string | undefined;
    }>;
    shapeStyleComputed: import("vue").ComputedRef<{
        borderTopColor: string;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: {
        type: StringConstructor;
        default: string;
    };
    textColor: {
        type: StringConstructor;
    };
    shape: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    hideOnScroll: {
        type: BooleanConstructor;
        default: boolean;
    };
    fixed: {
        type: BooleanConstructor;
        default: boolean;
    };
    bottom: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    preset: string;
    bottom: boolean;
    color: string;
    hideOnScroll: boolean;
    fixed: boolean;
    shape: boolean;
}>;
export declare const VaNavbarItem: import("vue").DefineComponent<Readonly<import("vue").ComponentPropsOptions<{
    [x: string]: unknown;
}>>, any, any, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, readonly string[] | Readonly<import("vue").ExtractPropTypes<Readonly<import("vue").ComponentObjectPropsOptions<{
    [x: string]: unknown;
}>>>>, {
    [x: number]: string;
} | {}>;
