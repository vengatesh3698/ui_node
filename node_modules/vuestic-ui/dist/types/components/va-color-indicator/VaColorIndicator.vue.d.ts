declare const _default: import("vue").DefineComponent<{
    modelValue: {
        type: BooleanConstructor;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    square: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    stateful: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}, {
    valueComputed: import("vue").WritableComputedRef<any>;
    computedStyle: import("vue").ComputedRef<{
        backgroundColor: string;
        height: string;
        width: string;
    }>;
    computedClass: import("vue").ComputedRef<{
        'va-color-indicator--selected': any;
        'va-color-indicator--on-keyboard-focus': boolean;
    }>;
    borderRadiusComputed: import("vue").ComputedRef<"50%" | "0px">;
    keyboardFocusListeners: {
        mousedown: () => void;
        focus: () => void;
        blur: () => void;
    };
    toggleModelValue: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: BooleanConstructor;
        default: null;
    };
    color: {
        type: StringConstructor;
        default: string;
    };
    square: {
        type: BooleanConstructor;
        default: boolean;
    };
    size: {
        type: StringConstructor;
        default: string;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    stateful: {
        type: import("vue").PropType<boolean>;
        default: boolean;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    preset: string;
    modelValue: boolean;
    stateful: boolean;
    color: string;
    size: string;
    square: boolean;
}>;
export default _default;
