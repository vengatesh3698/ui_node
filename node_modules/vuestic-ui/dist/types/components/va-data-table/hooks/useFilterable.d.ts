import { Ref, PropType, ExtractPropTypes } from 'vue';
import type { DataTableRow, DataTableFilterMethod, DataTableItem } from '../types';
export declare const useFilterableProps: {
    filter: {
        type: StringConstructor;
        default: string;
    };
    filterMethod: {
        type: PropType<DataTableFilterMethod | undefined>;
    };
    delay: {
        type: NumberConstructor;
        default: number;
        validator: (value: number) => boolean;
    };
};
export type TFilteredArgs = {
    items: DataTableItem[];
    itemsIndexes: number[];
};
export type TFilterableEmits = (event: 'filtered', arg: TFilteredArgs) => void;
export declare const useFilterable: (rawRows: Ref<DataTableRow[]>, props: ExtractPropTypes<typeof useFilterableProps>, emit: TFilterableEmits) => {
    filteredRows: Ref<DataTableRow[]>;
};
