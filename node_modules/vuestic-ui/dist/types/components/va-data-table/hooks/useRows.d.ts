import { Ref, ExtractPropTypes } from 'vue';
import type { DataTableColumnInternal, DataTableItem, DataTableRow, DataTableItemKey } from '../types';
export declare const getItemKey: (source: DataTableItem, itemsTrackBy: string | ((item: DataTableItem) => any)) => DataTableItemKey;
export declare const useRowsProps: {
    itemsTrackBy: {
        type: import("vue").PropType<string | ((item: DataTableItem) => any)>;
        default: string;
    };
    items: {
        type: import("vue").PropType<DataTableItem[]>;
        default: () => DataTableItem[];
    };
};
export declare const useRows: (columns: Ref<DataTableColumnInternal[]>, props: ExtractPropTypes<typeof useRowsProps>) => {
    rowsComputed: import("vue").ComputedRef<DataTableRow[]>;
};
