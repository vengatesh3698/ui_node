declare const _default: import("vue").DefineComponent<{
    name: {
        type: StringConstructor;
        default: undefined;
    };
    modelValue: {
        required: boolean;
    };
    error: {
        type: BooleanConstructor;
        default: undefined;
    };
    errorMessages: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    errorCount: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    rules: {
        type: import("vue").PropType<import("../../../composables").ValidationRule<any>[]>;
        default: () => any;
    };
    success: {
        type: BooleanConstructor;
        default: boolean;
    };
    messages: {
        type: import("vue").PropType<string | string[]>;
        default: () => never[];
    };
    immediateValidation: {
        type: BooleanConstructor;
        default: boolean;
    };
}, {
    messagesColor: import("vue").ComputedRef<"" | "danger" | "success">;
    hasError: import("vue").Ref<boolean | undefined>;
    messagesComputed: import("vue").ComputedRef<string | string[] | undefined>;
    errorLimit: import("vue").ComputedRef<number>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    name: {
        type: StringConstructor;
        default: undefined;
    };
    modelValue: {
        required: boolean;
    };
    error: {
        type: BooleanConstructor;
        default: undefined;
    };
    errorMessages: {
        type: import("vue").PropType<string | string[]>;
        default: undefined;
    };
    errorCount: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    rules: {
        type: import("vue").PropType<import("../../../composables").ValidationRule<any>[]>;
        default: () => any;
    };
    success: {
        type: BooleanConstructor;
        default: boolean;
    };
    messages: {
        type: import("vue").PropType<string | string[]>;
        default: () => never[];
    };
    immediateValidation: {
        type: BooleanConstructor;
        default: boolean;
    };
}>>, {
    name: string;
    error: boolean;
    messages: string | string[];
    errorMessages: string | string[];
    errorCount: string | number;
    rules: import("../../../composables").ValidationRule<any>[];
    success: boolean;
    immediateValidation: boolean;
}>;
export default _default;
