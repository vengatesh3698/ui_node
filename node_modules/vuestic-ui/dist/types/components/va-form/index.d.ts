export declare const VaForm: import("vue").DefineComponent<{
    autofocus: {
        type: BooleanConstructor;
        default: boolean;
    };
    immediate: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    trigger: {
        type: import("vue").PropType<"change" | "blur">;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideErrors: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideErrorMessages: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideLoading: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}, {
    context: import("../../composables/useForm/types").Form<string>;
    fields: import("vue").ComputedRef<import("../../composables/useForm/types").FormFiled<string>[]>;
    fieldNames: import("vue").ComputedRef<string[]>;
    formData: import("vue").ComputedRef<Record<string, unknown>>;
    isValid: import("vue").ComputedRef<boolean>;
    isLoading: import("vue").ComputedRef<boolean>;
    errorMessages: import("vue").ComputedRef<string[]>;
    errorMessagesNamed: import("vue").ComputedRef<Record<string, string[]>>;
    validate: () => boolean;
    reset: () => void;
    resetValidation: () => void;
    focus: () => void;
    focusInvalidField: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update:modelValue"[], "update:modelValue", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    autofocus: {
        type: BooleanConstructor;
        default: boolean;
    };
    immediate: {
        type: BooleanConstructor;
        default: boolean;
    };
    tag: {
        type: StringConstructor;
        default: string;
    };
    trigger: {
        type: import("vue").PropType<"change" | "blur">;
        default: string;
    };
    modelValue: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideErrors: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideErrorMessages: {
        type: BooleanConstructor;
        default: boolean;
    };
    hideLoading: {
        type: BooleanConstructor;
        default: boolean;
    };
    stateful: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
}, {
    preset: string;
    modelValue: boolean;
    stateful: boolean;
    tag: string;
    trigger: "change" | "blur";
    autofocus: boolean;
    immediate: boolean;
    hideErrors: boolean;
    hideErrorMessages: boolean;
    hideLoading: boolean;
}>;
