import type { VuesticComponent, VuesticPlugin, VuesticPluginFabric } from '../types';
/**
 * Register only essential Vuestic Plugins.
 *
 * This plugin will register globally only provided component and plugins in options.
 * @notice this plugin will not bundle all vuestic conponents and plugins
 *
 * @example
 * ```ts
 * createVuesticEssential({
 *   plugins: [VaToastPlugin],  // or [VaToastPlugin({ makeLifeEasier: true })],
 *   components: { VaButton, VaInput },
 *   config: { VaButton: { color: '#f0f' } }
 * })
 * ```
 */
export declare const createVuesticEssential: VuesticPluginFabric<[options?: {
    config?: {
        colors?: {
            variables?: {
                [x: string]: string | undefined;
                primary?: string | undefined;
                secondary?: string | undefined;
                success?: string | undefined;
                info?: string | undefined;
                danger?: string | undefined;
                warning?: string | undefined;
                backgroundPrimary?: string | undefined;
                backgroundSecondary?: string | undefined;
                backgroundElement?: string | undefined;
                backgroundBorder?: string | undefined;
                textPrimary?: string | undefined;
                textInverted?: string | undefined;
                shadow?: string | undefined;
                focus?: string | undefined;
            } | undefined;
            threshold?: number | undefined;
            presets?: {
                [x: string]: {
                    [x: string]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                } | undefined;
                light?: {
                    [x: string]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                } | undefined;
                dark?: {
                    [x: string]: string | undefined;
                    primary?: string | undefined;
                    secondary?: string | undefined;
                    success?: string | undefined;
                    info?: string | undefined;
                    danger?: string | undefined;
                    warning?: string | undefined;
                    backgroundPrimary?: string | undefined;
                    backgroundSecondary?: string | undefined;
                    backgroundElement?: string | undefined;
                    backgroundBorder?: string | undefined;
                    textPrimary?: string | undefined;
                    textInverted?: string | undefined;
                    shadow?: string | undefined;
                    focus?: string | undefined;
                } | undefined;
            } | undefined;
            currentPresetName?: string | undefined;
        } | undefined;
        icons?: ({
            name?: string | undefined;
            resolve?: {} | undefined;
            attrs?: {
                [x: string]: string | {} | undefined;
            } | undefined;
            component?: any;
            content?: string | undefined;
            class?: string | undefined;
            tag?: string | undefined;
            color?: string | undefined;
            rotation?: string | number | undefined;
            spin?: boolean | "clockwise" | "counter-clockwise" | undefined;
            to?: string | undefined;
        } | {
            name?: {
                exec?: {} | undefined;
                test?: {} | undefined;
                readonly source?: string | undefined;
                readonly global?: boolean | undefined;
                readonly ignoreCase?: boolean | undefined;
                readonly multiline?: boolean | undefined;
                lastIndex?: number | undefined;
                compile?: {} | undefined;
                readonly flags?: string | undefined;
                readonly sticky?: boolean | undefined;
                readonly unicode?: boolean | undefined;
                readonly dotAll?: boolean | undefined;
                readonly hasIndices?: boolean | undefined;
                [Symbol.match]?: {} | undefined;
                [Symbol.replace]?: {} | undefined;
                [Symbol.search]?: {} | undefined;
                [Symbol.split]?: {} | undefined;
                [Symbol.matchAll]?: {} | undefined;
            } | undefined;
            resolveFromRegex?: {} | undefined;
            attrs?: {
                [x: string]: string | {} | undefined;
            } | undefined;
            component?: any;
            content?: string | undefined;
            class?: string | undefined;
            tag?: string | undefined;
            color?: string | undefined;
            rotation?: string | number | undefined;
            spin?: boolean | "clockwise" | "counter-clockwise" | undefined;
            to?: string | undefined;
        } | undefined)[] | undefined;
        components?: Partial<{
            VaAccordion: {
                preset?: string | undefined;
                modelValue?: boolean[] | undefined;
                multiple?: boolean | undefined;
                inset?: boolean | undefined;
                popout?: boolean | undefined;
                stateful?: boolean | undefined;
            };
            VaAffix: {
                preset?: string | undefined;
                offsetTop?: number | undefined;
                offsetBottom?: number | undefined;
                target?: HTMLElement | Window | (() => HTMLElement | Window) | undefined;
            };
            VaAlert: {
                center?: boolean | undefined;
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                textColor?: string | undefined;
                title?: string | undefined;
                description?: string | undefined;
                icon?: string | undefined;
                closeText?: string | undefined;
                closeable?: boolean | undefined;
                dense?: boolean | undefined;
                outline?: boolean | undefined;
                borderColor?: string | undefined;
                border?: "" | "left" | "right" | "top" | "bottom" | undefined;
            };
            VaAppBar: {
                preset?: string | undefined;
                target?: string | HTMLElement | undefined;
                bottom?: boolean | undefined;
                color?: string | undefined;
                gradient?: boolean | undefined;
                shadowOnScroll?: boolean | undefined;
                shadowColor?: string | undefined;
                hideOnScroll?: boolean | undefined;
                fixed?: boolean | undefined;
            };
            VaAspectRatio: {
                preset?: string | undefined;
                ratio?: number | "auto" | undefined;
                contentHeight?: number | undefined;
                contentWidth?: number | undefined;
                maxWidth?: number | undefined;
            };
            VaAvatar: {
                preset?: string | undefined;
                color?: string | undefined;
                size?: string | number | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                fontSize?: string | undefined;
                readonly textColor?: string | undefined;
                icon?: string | undefined;
                readonly fallbackSrc?: string | undefined;
                readonly fallbackText?: string | undefined;
                readonly fallbackIcon?: string | undefined;
                readonly fallbackRender?: (() => any) | undefined;
                src?: string | undefined;
                alt?: string | undefined;
                square?: boolean | undefined;
                loading?: boolean | undefined;
            };
            VaAvatarGroup: {
                preset?: string | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                size?: string | number | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                fontSize?: string | undefined;
                readonly textColor?: string | undefined;
                square?: boolean | undefined;
                max?: number | undefined;
                options?: Record<string, unknown>[] | undefined;
            };
            VaBacktop: {
                preset?: string | undefined;
                target?: string | Element | undefined;
                color?: string | undefined;
                ariaLabel?: string | undefined;
                visibilityHeight?: number | undefined;
                speed?: number | undefined;
                verticalOffset?: string | undefined;
                horizontalOffset?: string | undefined;
                horizontalPosition?: "left" | "right" | undefined;
                verticalPosition?: "top" | "bottom" | undefined;
            };
            VaBadge: {
                preset?: string | undefined;
                color?: string | undefined;
                readonly textColor?: string | undefined;
                transparent?: boolean | undefined;
                text?: string | number | undefined;
                multiLine?: boolean | undefined;
                visibleEmpty?: boolean | undefined;
                dot?: boolean | undefined;
                overlap?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: string | number | undefined;
            };
            VaBreadcrumbs: {
                preset?: string | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                ariaLabel?: string | undefined;
                align?: string | undefined;
                separator?: string | undefined;
                activeColor?: string | undefined;
                separatorColor?: string | undefined;
            };
            VaBreadcrumbsItem: {
                target?: string | undefined;
                tag?: string | undefined;
                replace?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                label?: string | undefined;
            };
            VaButton: {
                preset?: string | undefined;
                type?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                textColor?: string | undefined;
                icon?: string | undefined;
                borderColor?: string | undefined;
                gradient?: boolean | undefined;
                replace?: boolean | undefined;
                loading?: boolean | undefined;
                block?: boolean | undefined;
                disabled?: boolean | undefined;
                textOpacity?: number | undefined;
                backgroundOpacity?: number | undefined;
                plain?: boolean | undefined;
                round?: boolean | undefined;
                iconRight?: string | undefined;
                iconColor?: string | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                pressedBehavior?: "opacity" | "mask" | undefined;
                pressedOpacity?: number | undefined;
                pressedMaskColor?: string | undefined;
                hoverBehavior?: "opacity" | "mask" | undefined;
                hoverOpacity?: number | undefined;
                hoverMaskColor?: string | undefined;
            };
            VaButtonDropdown: {
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                type?: string | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                tag?: string | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                textColor?: string | undefined;
                icon?: string | undefined;
                borderColor?: string | undefined;
                gradient?: boolean | undefined;
                ariaLabel?: string | undefined;
                replace?: boolean | undefined;
                split?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                textOpacity?: number | undefined;
                backgroundOpacity?: number | undefined;
                plain?: boolean | undefined;
                round?: boolean | undefined;
                iconColor?: string | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                pressedBehavior?: "opacity" | "mask" | undefined;
                pressedOpacity?: number | undefined;
                pressedMaskColor?: string | undefined;
                hoverBehavior?: "opacity" | "mask" | undefined;
                hoverOpacity?: number | undefined;
                hoverMaskColor?: string | undefined;
                leftIcon?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: number | [number, number] | undefined;
                readonly label?: string | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: "none" | "click" | "right-click" | "hover" | "dblclick" | undefined;
                keyboardNavigation?: boolean | undefined;
                openedIcon?: string | undefined;
                hideIcon?: boolean | undefined;
                disableButton?: boolean | undefined;
                disableDropdown?: boolean | undefined;
                splitTo?: string | undefined;
                splitHref?: string | undefined;
            };
            VaButtonGroup: {
                preset?: string | undefined;
                type?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                textColor?: string | undefined;
                icon?: string | undefined;
                borderColor?: string | undefined;
                gradient?: boolean | undefined;
                replace?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                textOpacity?: number | undefined;
                backgroundOpacity?: number | undefined;
                plain?: boolean | undefined;
                round?: boolean | undefined;
                iconRight?: string | undefined;
                iconColor?: string | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                pressedBehavior?: "opacity" | "mask" | undefined;
                pressedOpacity?: number | undefined;
                pressedMaskColor?: string | undefined;
                hoverBehavior?: "opacity" | "mask" | undefined;
                hoverOpacity?: number | undefined;
                hoverMaskColor?: string | undefined;
                grow?: boolean | undefined;
            };
            VaButtonToggle: {
                preset?: string | undefined;
                modelValue?: string | number | boolean | undefined;
                type?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                textColor?: string | undefined;
                icon?: string | undefined;
                borderColor?: string | undefined;
                gradient?: boolean | undefined;
                replace?: boolean | undefined;
                loading?: boolean | undefined;
                readonly options?: import("../../../components").ButtonOption[] | undefined;
                disabled?: boolean | undefined;
                textOpacity?: number | undefined;
                backgroundOpacity?: number | undefined;
                plain?: boolean | undefined;
                round?: boolean | undefined;
                iconRight?: string | undefined;
                iconColor?: string | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                pressedBehavior?: "opacity" | "mask" | undefined;
                pressedOpacity?: number | undefined;
                pressedMaskColor?: string | undefined;
                hoverBehavior?: "opacity" | "mask" | undefined;
                hoverOpacity?: number | undefined;
                hoverMaskColor?: string | undefined;
                grow?: boolean | undefined;
                readonly activeButtonTextColor?: string | undefined;
                toggleColor?: string | undefined;
                textBy?: import("../../../composables").StringOrFunction | undefined;
                valueBy?: import("../../../composables").StringOrFunction | undefined;
                trackBy?: import("../../../composables").StringOrFunction | undefined;
                disabledBy?: import("../../../composables").StringOrFunction | undefined;
                groupBy?: import("../../../composables").StringOrFunction | undefined;
            };
            VaCard: {
                preset?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                readonly textColor?: string | undefined;
                gradient?: boolean | undefined;
                replace?: boolean | undefined;
                square?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                bordered?: boolean | undefined;
                outlined?: boolean | undefined;
                stripe?: boolean | undefined;
                stripeColor?: string | undefined;
            };
            VaCardBlock: {
                horizontal?: boolean | undefined;
            };
            VaCardActions: {
                preset?: string | undefined;
                vertical?: boolean | undefined;
                align?: string | undefined;
            };
            VaCardContent: {};
            VaCardTitle: {
                preset?: string | undefined;
                readonly textColor?: string | undefined;
            };
            VaCarousel: {
                effect?: "fade" | "transition" | undefined;
                preset?: string | undefined;
                modelValue?: number | undefined;
                stateful?: boolean | undefined;
                readonly items?: any[] | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                sizes?: string | undefined;
                title?: string | undefined;
                readonly ratio?: number | undefined;
                maxWidth?: number | undefined;
                ariaLabel?: string | undefined;
                readonly fallbackSrc?: string | undefined;
                readonly fallbackText?: string | undefined;
                readonly fallbackIcon?: string | undefined;
                readonly fallbackRender?: (() => any) | undefined;
                readonly src?: string | undefined;
                alt?: string | undefined;
                readonly loading?: "lazy" | "eager" | undefined;
                lazy?: boolean | undefined;
                contain?: boolean | undefined;
                fit?: "fill" | "none" | "contain" | "cover" | "scale-down" | undefined;
                placeholderSrc?: string | undefined;
                srcset?: string | undefined;
                draggable?: boolean | undefined;
                readonly crossorigin?: "anonymous" | "use-credentials" | undefined;
                readonly decoding?: "auto" | "sync" | "async" | undefined;
                fetchpriority?: "auto" | "high" | "low" | undefined;
                readonly referrerpolicy?: "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url" | undefined;
                autoscroll?: boolean | undefined;
                autoscrollInterval?: number | undefined;
                autoscrollPauseDuration?: number | undefined;
                infinite?: boolean | undefined;
                fadeKeyframe?: string | undefined;
                arrows?: boolean | undefined;
                indicators?: boolean | undefined;
                indicatorTrigger?: "click" | "hover" | undefined;
                height?: string | undefined;
                ariaPreviousLabel?: string | undefined;
                ariaNextLabel?: string | undefined;
                ariaGoToSlideLabel?: string | undefined;
                ariaSlideOfLabel?: string | undefined;
                swipable?: boolean | undefined;
                swipeDistance?: number | undefined;
                swipeDirection?: ("all" | "horizontal" | "vertical" | ("" | "left" | "right" | "up" | "down")) | undefined;
            };
            VaCheckbox: {
                preset?: string | undefined;
                name?: string | undefined;
                modelValue?: string | number | boolean | unknown[] | Record<any, unknown> | null | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                indeterminate?: boolean | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<any>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                checkedIcon?: string | undefined;
                indeterminateValue?: string | number | boolean | unknown[] | Record<any, unknown> | null | undefined;
                indeterminateIcon?: string | undefined;
                id?: string | undefined;
                arrayValue?: string | number | boolean | Record<string, any> | undefined;
                leftLabel?: boolean | undefined;
                trueValue?: any;
                falseValue?: any;
            };
            VaChip: {
                preset?: string | undefined;
                flat?: boolean | undefined;
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                icon?: string | undefined;
                closeable?: boolean | undefined;
                outline?: boolean | undefined;
                replace?: boolean | undefined;
                square?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                readonly?: boolean | undefined;
                shadow?: boolean | undefined;
                ariaCloseLabel?: string | undefined;
            };
            VaCollapse: {
                preset?: string | undefined;
                flat?: boolean | undefined;
                modelValue?: boolean | undefined;
                color?: string | undefined;
                textColor?: string | undefined;
                icon?: string | undefined;
                disabled?: boolean | undefined;
                header?: string | undefined;
                solid?: boolean | undefined;
                colorAll?: boolean | undefined;
            };
            VaColorIndicator: {
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                size?: string | undefined;
                square?: boolean | undefined;
            };
            VaColorInput: {
                preset?: string | undefined;
                modelValue?: string | undefined;
                stateful?: boolean | undefined;
                disabled?: boolean | undefined;
                indicator?: "square" | "dot" | undefined;
                ariaOpenColorPickerLabel?: string | undefined;
            };
            VaColorPalette: {
                preset?: string | undefined;
                modelValue?: string | undefined;
                stateful?: boolean | undefined;
                ariaLabel?: string | undefined;
                indicator?: "square" | "dot" | undefined;
                palette?: string[] | undefined;
                ariaIndicatorLabel?: string | undefined;
            };
            VaConfig: {
                preset?: string | undefined;
                components?: Partial<any & {
                    all: import("../../component-config").Props;
                    presets: import("../../component-config").Presets;
                }> | undefined;
                readonly colors?: {
                    variables?: {
                        [x: string]: string | undefined;
                        primary?: string | undefined;
                        secondary?: string | undefined;
                        success?: string | undefined;
                        info?: string | undefined;
                        danger?: string | undefined;
                        warning?: string | undefined;
                        backgroundPrimary?: string | undefined;
                        backgroundSecondary?: string | undefined;
                        backgroundElement?: string | undefined;
                        backgroundBorder?: string | undefined;
                        textPrimary?: string | undefined;
                        textInverted?: string | undefined;
                        shadow?: string | undefined;
                        focus?: string | undefined;
                    } | undefined;
                    threshold?: number | undefined;
                    presets?: {
                        [x: string]: {
                            [x: string]: string | undefined;
                            primary?: string | undefined;
                            secondary?: string | undefined;
                            success?: string | undefined;
                            info?: string | undefined;
                            danger?: string | undefined;
                            warning?: string | undefined;
                            backgroundPrimary?: string | undefined;
                            backgroundSecondary?: string | undefined;
                            backgroundElement?: string | undefined;
                            backgroundBorder?: string | undefined;
                            textPrimary?: string | undefined;
                            textInverted?: string | undefined;
                            shadow?: string | undefined;
                            focus?: string | undefined;
                        } | undefined;
                        light?: {
                            [x: string]: string | undefined;
                            primary?: string | undefined;
                            secondary?: string | undefined;
                            success?: string | undefined;
                            info?: string | undefined;
                            danger?: string | undefined;
                            warning?: string | undefined;
                            backgroundPrimary?: string | undefined;
                            backgroundSecondary?: string | undefined;
                            backgroundElement?: string | undefined;
                            backgroundBorder?: string | undefined;
                            textPrimary?: string | undefined;
                            textInverted?: string | undefined;
                            shadow?: string | undefined;
                            focus?: string | undefined;
                        } | undefined;
                        dark?: {
                            [x: string]: string | undefined;
                            primary?: string | undefined;
                            secondary?: string | undefined;
                            success?: string | undefined;
                            info?: string | undefined;
                            danger?: string | undefined;
                            warning?: string | undefined;
                            backgroundPrimary?: string | undefined;
                            backgroundSecondary?: string | undefined;
                            backgroundElement?: string | undefined;
                            backgroundBorder?: string | undefined;
                            textPrimary?: string | undefined;
                            textInverted?: string | undefined;
                            shadow?: string | undefined;
                            focus?: string | undefined;
                        } | undefined;
                    } | undefined;
                    currentPresetName?: string | undefined;
                } | undefined;
                readonly i18n?: {
                    search?: string | undefined;
                    noOptions?: string | undefined;
                    ok?: string | undefined;
                    cancel?: string | undefined;
                    uploadFile?: string | undefined;
                    undo?: string | undefined;
                    dropzone?: string | undefined;
                    fileDeleted?: string | undefined;
                    closeAlert?: string | undefined;
                    backToTop?: string | undefined;
                    toggleDropdown?: string | undefined;
                    carousel?: string | undefined;
                    goPreviousSlide?: string | undefined;
                    goNextSlide?: string | undefined;
                    goSlide?: string | undefined;
                    slideOf?: string | undefined;
                    close?: string | undefined;
                    openColorPicker?: string | undefined;
                    colorSelection?: string | undefined;
                    colorName?: string | undefined;
                    decreaseCounter?: string | undefined;
                    increaseCounter?: string | undefined;
                    selectAllRows?: string | undefined;
                    sortColumnBy?: string | undefined;
                    selectRowByIndex?: string | undefined;
                    resetDate?: string | undefined;
                    nextPeriod?: string | undefined;
                    switchView?: string | undefined;
                    previousPeriod?: string | undefined;
                    removeFile?: string | undefined;
                    reset?: string | undefined;
                    pagination?: string | undefined;
                    goToTheFirstPage?: string | undefined;
                    goToPreviousPage?: string | undefined;
                    goToSpecificPage?: string | undefined;
                    goToSpecificPageInput?: string | undefined;
                    goNextPage?: string | undefined;
                    goLastPage?: string | undefined;
                    currentRating?: string | undefined;
                    voteRating?: string | undefined;
                    optionsFilter?: string | undefined;
                    splitPanels?: string | undefined;
                    movePaginationLeft?: string | undefined;
                    movePaginationRight?: string | undefined;
                    resetTime?: string | undefined;
                    closeToast?: string | undefined;
                    selectedOption?: string | undefined;
                    noSelectedOption?: string | undefined;
                    breadcrumbs?: string | undefined;
                    counterValue?: string | undefined;
                    selectedDate?: string | undefined;
                    selectedTime?: string | undefined;
                    progressState?: string | undefined;
                    color?: string | undefined;
                    next?: string | undefined;
                    back?: string | undefined;
                    finish?: string | undefined;
                    step?: string | undefined;
                    progress?: string | undefined;
                    loading?: string | undefined;
                    sliderValue?: string | undefined;
                    switch?: string | undefined;
                } | undefined;
            };
            VaContent: {};
            VaCounter: {
                preset?: string | undefined;
                flat?: boolean | undefined;
                modelValue?: string | number | undefined;
                stateful?: boolean | undefined;
                width?: string | number | undefined;
                color?: string | undefined;
                textColor?: string | undefined;
                outline?: boolean | undefined;
                ariaLabel?: string | undefined;
                max?: number | undefined;
                disabled?: boolean | undefined;
                bordered?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                step?: number | undefined;
                messages?: string | string[] | undefined;
                min?: number | undefined;
                manualInput?: boolean | undefined;
                increaseIcon?: string | undefined;
                decreaseIcon?: string | undefined;
                buttons?: boolean | undefined;
                rounded?: boolean | undefined;
                margins?: string | number | undefined;
                longPressDelay?: number | undefined;
                ariaDecreaseLabel?: string | undefined;
                ariaIncreaseLabel?: string | undefined;
            };
            VaDataTable: {
                preset?: string | undefined;
                filter?: string | undefined;
                readonly modelValue?: any[] | undefined;
                items?: import("../../../components").DataTableItem[] | undefined;
                horizontal?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                table?: boolean | undefined;
                trackBy?: string | number | ((item: any[] | Record<string, any>) => string | number) | undefined;
                readonly height?: string | number | undefined;
                grid?: boolean | undefined;
                selectMode?: import("../../../components").DataTableSelectMode | undefined;
                columns?: import("../../../components").DataTableColumnSource[] | undefined;
                ariaSelectAllRowsLabel?: string | undefined;
                ariaSortColumnByLabel?: string | undefined;
                selectedColor?: string | undefined;
                allowFooterSorting?: boolean | undefined;
                stickyHeader?: boolean | undefined;
                stickyFooter?: boolean | undefined;
                selectable?: boolean | undefined;
                bench?: number | undefined;
                itemSize?: string | number | undefined;
                wrapperSize?: string | number | undefined;
                hoverable?: boolean | undefined;
                clickable?: boolean | undefined;
                loadingColor?: string | undefined;
                noDataHtml?: string | undefined;
                noDataFilteredHtml?: string | undefined;
                hideDefaultHeader?: boolean | undefined;
                footerClone?: boolean | undefined;
                striped?: boolean | undefined;
                virtualScroller?: boolean | undefined;
                virtualTrackBy?: string | number | undefined;
                gridColumns?: number | undefined;
                ariaSelectRowLabel?: string | undefined;
                delay?: number | undefined;
                itemsTrackBy?: string | ((item: import("../../../components").DataTableItem) => any) | undefined;
                readonly perPage?: number | undefined;
                readonly currentPage?: number | undefined;
                readonly filterMethod?: import("../../../components").DataTableFilterMethod | undefined;
                sortingOptions?: import("../../../components").DataTableSortingOptions | undefined;
                readonly sortBy?: string | undefined;
                readonly sortingOrder?: import("../../../components").DataTableSortingOrder | undefined;
                scrollTopMargin?: number | undefined;
                scrollBottomMargin?: number | undefined;
                readonly rowBind?: import("../../../components").DataTableRowBind | undefined;
                readonly cellBind?: import("../../../components").DataTableCellBind | undefined;
                animated?: boolean | undefined;
            };
            VaDateInput: {
                preset?: string | undefined;
                name?: string | undefined;
                readonly modelValue?: import("../../../components/va-date-input/types").DateInputModelValue;
                type?: import("../../../components/va-date-picker/types").DatePickerType | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                color?: string | undefined;
                mode?: import("../../../components/va-date-picker/types").DatePickerMode | undefined;
                readonly textColor?: string | undefined;
                icon?: string | undefined;
                outline?: boolean | undefined;
                background?: string | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                bordered?: boolean | undefined;
                leftIcon?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: import("../../../components/va-dropdown/types").DropdownOffsetProp | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: "none" | "click" | "right-click" | "hover" | "dblclick" | undefined;
                keyboardNavigation?: boolean | undefined;
                readonly view?: import("../../../components/va-date-picker/types").DatePickerView | undefined;
                counterValue?: number | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<import("../../../components/va-date-input/types").DateInputModelValue>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                maxLength?: number | undefined;
                focused?: boolean | undefined;
                requiredMark?: boolean | undefined;
                ariaResetLabel?: string | undefined;
                clearable?: boolean | undefined;
                clearableIcon?: string | undefined;
                clearValue?: import("../../../components/va-date-input/types").DateInputModelValue;
                manualInput?: boolean | undefined;
                highlightWeekend?: boolean | undefined;
                highlightToday?: boolean | undefined;
                monthNames?: string[] | undefined;
                weekdayNames?: string[] | undefined;
                firstWeekday?: "Monday" | "Sunday" | undefined;
                hideWeekDays?: boolean | undefined;
                showOtherMonths?: boolean | undefined;
                readonly allowedDays?: ((date: Date) => boolean) | undefined;
                readonly weekends?: ((date: Date) => boolean) | undefined;
                ariaNextPeriodLabel?: string | undefined;
                ariaPreviousPeriodLabel?: string | undefined;
                ariaSwitchViewLabel?: string | undefined;
                allowedMonths?: ((date: Date) => boolean) | undefined;
                allowedYears?: ((date: Date) => boolean) | undefined;
                startYear?: number | undefined;
                endYear?: number | undefined;
                weekendsColor?: string | undefined;
                resetOnClose?: boolean | undefined;
                isOpen?: boolean | undefined;
                readonly format?: ((date: import("../../../components/va-date-input/types").DateInputModelValue) => string) | undefined;
                formatDate?: ((date: Date) => string) | undefined;
                readonly parse?: ((input: string) => import("../../../components/va-date-input/types").DateInputValue) | undefined;
                readonly parseDate?: ((input: string) => Date) | undefined;
                readonly parseValue?: ((date: import("../../../components/va-date-input/types").DateInputModelValue) => import("../../../components/va-date-picker/types").DatePickerModelValue) | undefined;
                delimiter?: string | undefined;
                rangeDelimiter?: string | undefined;
                ariaToggleDropdownLabel?: string | undefined;
                ariaSelectedDateLabel?: string | undefined;
            };
            VaDatePicker: {
                preset?: string | undefined;
                readonly modelValue?: import("../../../components/va-date-picker/types").DatePickerModelValue;
                type?: import("../../../components/va-date-picker/types").DatePickerType | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                mode?: import("../../../components/va-date-picker/types").DatePickerMode | undefined;
                readonly textColor?: string | undefined;
                disabled?: boolean | undefined;
                readonly?: boolean | undefined;
                readonly view?: import("../../../components/va-date-picker/types").DatePickerView | undefined;
                highlightWeekend?: boolean | undefined;
                highlightToday?: boolean | undefined;
                monthNames?: string[] | undefined;
                weekdayNames?: string[] | undefined;
                firstWeekday?: "Monday" | "Sunday" | undefined;
                hideWeekDays?: boolean | undefined;
                showOtherMonths?: boolean | undefined;
                readonly allowedDays?: ((date: Date) => boolean) | undefined;
                readonly weekends?: ((date: Date) => boolean) | undefined;
                ariaNextPeriodLabel?: string | undefined;
                ariaPreviousPeriodLabel?: string | undefined;
                ariaSwitchViewLabel?: string | undefined;
                allowedMonths?: ((date: Date) => boolean) | undefined;
                allowedYears?: ((date: Date) => boolean) | undefined;
                startYear?: number | undefined;
                endYear?: number | undefined;
                weekendsColor?: string | undefined;
            };
            VaDivider: {
                preset?: string | undefined;
                inset?: boolean | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                dashed?: boolean | undefined;
                orientation?: "left" | "center" | "right" | undefined;
            };
            VaDropdown: {
                preset?: string | undefined;
                readonly modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                ariaLabel?: string | undefined;
                disabled?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: import("../../../components/va-dropdown/types").DropdownOffsetProp | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: "none" | "click" | "right-click" | "hover" | "dblclick" | undefined;
                keyboardNavigation?: boolean | undefined;
            };
            VaDropdownContent: {
                readonly textColor?: string | undefined;
                background?: string | undefined;
                noPadding?: boolean | undefined;
            };
            VaFallback: {
                readonly fallbackSrc?: string | undefined;
                readonly fallbackText?: string | undefined;
                readonly fallbackIcon?: string | undefined;
                readonly fallbackRender?: (() => any) | undefined;
            };
            VaFileUpload: {
                preset?: string | undefined;
                modelValue?: import("../../../components").VaFile | import("../../../components").VaFile[] | undefined;
                type?: "list" | "single" | "gallery" | undefined;
                color?: string | undefined;
                disabled?: boolean | undefined;
                undo?: boolean | undefined;
                dropzone?: boolean | undefined;
                undoDuration?: number | undefined;
                undoButtonText?: string | undefined;
                deletedFileMessage?: string | undefined;
                file?: import("../../../components").ConvertedFile | null | undefined;
                ariaRemoveFileLabel?: string | undefined;
                files?: import("../../../components").VaFile[] | undefined;
                fileTypes?: string | undefined;
                hideFileList?: boolean | undefined;
                dropZoneText?: string | undefined;
                uploadButtonText?: string | undefined;
            };
            VaForm: {
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                tag?: string | undefined;
                trigger?: "change" | "blur" | undefined;
                autofocus?: boolean | undefined;
                immediate?: boolean | undefined;
                hideErrors?: boolean | undefined;
                hideErrorMessages?: boolean | undefined;
                hideLoading?: boolean | undefined;
            };
            VaHover: {
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                disabled?: boolean | undefined;
            };
            VaIcon: {
                preset?: string | undefined;
                name?: string | undefined;
                readonly tag?: string | undefined;
                readonly component?: any;
                readonly color?: string | undefined;
                readonly rotation?: string | number | undefined;
                readonly spin?: string | boolean | undefined;
                flip?: "off" | "horizontal" | "vertical" | "both" | undefined;
                size?: string | number | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
            };
            VaImage: {
                preset?: string | undefined;
                sizes?: string | undefined;
                title?: string | undefined;
                ratio?: number | "auto" | undefined;
                maxWidth?: number | undefined;
                readonly fallbackSrc?: string | undefined;
                readonly fallbackText?: string | undefined;
                readonly fallbackIcon?: string | undefined;
                readonly fallbackRender?: (() => any) | undefined;
                readonly src?: string | undefined;
                alt?: string | undefined;
                readonly loading?: "lazy" | "eager" | undefined;
                lazy?: boolean | undefined;
                contain?: boolean | undefined;
                fit?: "fill" | "none" | "contain" | "cover" | "scale-down" | undefined;
                placeholderSrc?: string | undefined;
                srcset?: string | undefined;
                draggable?: boolean | undefined;
                readonly crossorigin?: "anonymous" | "use-credentials" | undefined;
                readonly decoding?: "auto" | "sync" | "async" | undefined;
                fetchpriority?: "auto" | "high" | "low" | undefined;
                readonly referrerpolicy?: "no-referrer" | "no-referrer-when-downgrade" | "origin" | "origin-when-cross-origin" | "same-origin" | "strict-origin" | "strict-origin-when-cross-origin" | "unsafe-url" | undefined;
            };
            VaInfiniteScroll: {
                preset?: string | undefined;
                reverse?: boolean | undefined;
                tag?: string | undefined;
                disabled?: boolean | undefined;
                offset?: number | undefined;
                readonly load?: Function | undefined;
                scrollTarget?: string | HTMLElement | undefined;
                debounce?: number | undefined;
            };
            VaInnerLoading: {
                preset?: string | undefined;
                readonly color?: string | undefined;
                size?: number | undefined;
                icon?: string | undefined;
                loading?: boolean | undefined;
            };
            VaInput: {
                preset?: string | undefined;
                name?: string | undefined;
                readonly modelValue?: string | number | undefined;
                type?: ("text" | "textarea" | "password" | (string & Record<never, never>)) | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                tabindex?: string | number | undefined;
                outline?: boolean | undefined;
                background?: string | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                mask?: string | Record<string, number[]> | import("cleave.js/options").CleaveOptions | undefined;
                disabled?: boolean | undefined;
                bordered?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                readonly pattern?: string | undefined;
                placeholder?: string | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<string>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                maxLength?: number | undefined;
                requiredMark?: boolean | undefined;
                autosize?: boolean | undefined;
                minRows?: number | undefined;
                readonly maxRows?: number | undefined;
                inputClass?: string | undefined;
                inputmode?: string | undefined;
                counter?: boolean | undefined;
                ariaResetLabel?: string | undefined;
                returnRaw?: boolean | undefined;
                clearable?: boolean | undefined;
                clearableIcon?: string | undefined;
                clearValue?: string | undefined;
            };
            VaList: {
                preset?: string | undefined;
                fit?: boolean | undefined;
            };
            VaListItem: {
                preset?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                replace?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
            };
            VaListItemLabel: {
                preset?: string | undefined;
                caption?: boolean | undefined;
                lines?: number | undefined;
            };
            VaListItemSection: {
                preset?: string | undefined;
                icon?: boolean | undefined;
                avatar?: boolean | undefined;
            };
            VaListLabel: {
                preset?: string | undefined;
                color?: string | undefined;
            };
            VaListSeparator: {
                preset?: string | undefined;
                fit?: boolean | undefined;
                spaced?: boolean | undefined;
            };
            VaMessageList: {
                modelValue?: string | string[] | undefined;
                readonly color?: string | undefined;
                limit?: number | undefined;
                hasError?: boolean | undefined;
            };
            VaModal: {
                modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                size?: "small" | "medium" | "large" | undefined;
                title?: string | undefined;
                maxWidth?: string | undefined;
                backgroundColor?: string | undefined;
                blur?: boolean | undefined;
                noPadding?: boolean | undefined;
                ariaCloseLabel?: string | undefined;
                attachElement?: string | undefined;
                allowBodyScroll?: boolean | undefined;
                disableAttachment?: boolean | undefined;
                message?: string | undefined;
                okText?: string | undefined;
                cancelText?: string | undefined;
                hideDefaultActions?: boolean | undefined;
                fullscreen?: boolean | undefined;
                mobileFullscreen?: boolean | undefined;
                noDismiss?: boolean | undefined;
                noOutsideDismiss?: boolean | undefined;
                noEscDismiss?: boolean | undefined;
                maxHeight?: string | undefined;
                readonly anchorClass?: string | undefined;
                fixedLayout?: boolean | undefined;
                withoutTransitions?: boolean | undefined;
                overlay?: boolean | undefined;
                overlayOpacity?: string | number | undefined;
                zIndex?: string | number | undefined;
                readonly beforeClose?: ((hide: () => void) => any) | undefined;
            };
            VaNavbar: {
                preset?: string | undefined;
                bottom?: boolean | undefined;
                color?: string | undefined;
                readonly textColor?: string | undefined;
                hideOnScroll?: boolean | undefined;
                fixed?: boolean | undefined;
                shape?: boolean | undefined;
            };
            VaNavbarItem: {};
            VaOptionList: {
                preset?: string | undefined;
                name?: string | undefined;
                readonly modelValue?: (import("../../../components").SelectOption | import("../../../components").SelectOption[] | null) | undefined;
                type?: "switch" | "checkbox" | "radio" | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                error?: boolean | undefined;
                options?: import("../../../components").SelectOption[] | undefined;
                disabled?: boolean | undefined;
                readonly?: boolean | undefined;
                textBy?: import("../../../composables").StringOrFunction | undefined;
                valueBy?: import("../../../composables").StringOrFunction | undefined;
                trackBy?: import("../../../composables").StringOrFunction | undefined;
                disabledBy?: import("../../../composables").StringOrFunction | undefined;
                groupBy?: import("../../../composables").StringOrFunction | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<any>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                leftLabel?: boolean | undefined;
                readonly defaultValue?: (import("../../../components").SelectOption | import("../../../components").SelectOption[] | null) | undefined;
            };
            VaPagination: {
                preset?: string | undefined;
                modelValue?: number | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                borderColor?: string | undefined;
                ariaLabel?: string | undefined;
                disabled?: boolean | undefined;
                input?: boolean | undefined;
                rounded?: boolean | undefined;
                visiblePages?: number | undefined;
                pages?: number | undefined;
                boundaryLinks?: boolean | undefined;
                boundaryNumbers?: boolean | undefined;
                directionLinks?: boolean | undefined;
                hideOnSinglePage?: boolean | undefined;
                total?: number | undefined;
                pageSize?: number | undefined;
                boundaryIconLeft?: string | undefined;
                boundaryIconRight?: string | undefined;
                directionIconLeft?: string | undefined;
                directionIconRight?: string | undefined;
                gapped?: boolean | undefined;
                activePageColor?: string | undefined;
                buttonsPreset?: string | undefined;
                ariaGoToTheFirstPageLabel?: string | undefined;
                ariaGoToPreviousPageLabel?: string | undefined;
                ariaGoToSpecificPageLabel?: string | undefined;
                ariaGoToSpecificPageInputLabel?: string | undefined;
                ariaGoToNextPageLabel?: string | undefined;
                ariaGoToLastPageLabel?: string | undefined;
            };
            VaParallax: {
                preset?: string | undefined;
                readonly target?: string | HTMLElement | undefined;
                src?: string | undefined;
                alt?: string | undefined;
                speed?: number | undefined;
                height?: number | undefined;
                reversed?: boolean | undefined;
            };
            VaPopover: {
                preset?: string | undefined;
                readonly modelValue?: boolean | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                color?: string | undefined;
                readonly textColor?: string | undefined;
                title?: string | undefined;
                icon?: string | undefined;
                ariaLabel?: string | undefined;
                disabled?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: number | [number, number] | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: string | undefined;
                keyboardNavigation?: boolean | undefined;
                message?: string | undefined;
                autoHide?: boolean | undefined;
            };
            VaProgressBar: {
                preset?: string | undefined;
                reverse?: boolean | undefined;
                modelValue?: number | undefined;
                color?: string | undefined;
                size?: number | "small" | "medium" | "large" | undefined;
                indeterminate?: boolean | undefined;
                ariaLabel?: string | undefined;
                max?: number | undefined;
                rounded?: boolean | undefined;
                buffer?: number | undefined;
                contentInside?: boolean | undefined;
                showPercent?: boolean | undefined;
            };
            VaProgressCircle: {
                preset?: string | undefined;
                modelValue?: number | undefined;
                color?: string | undefined;
                size?: string | number | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                indeterminate?: boolean | undefined;
                thickness?: number | undefined;
                ariaLabel?: string | undefined;
            };
            VaRadio: {
                preset?: string | undefined;
                name?: string | undefined;
                modelValue?: string | number | boolean | unknown[] | Record<any, unknown> | null | undefined;
                color?: string | undefined;
                tabindex?: string | number | undefined;
                disabled?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                option?: any;
                leftLabel?: boolean | undefined;
            };
            VaRating: {
                preset?: string | undefined;
                readonly modelValue?: number | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                size?: string | number | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                tabindex?: string | number | undefined;
                icon?: string | undefined;
                ariaLabel?: string | undefined;
                max?: number | undefined;
                disabled?: boolean | undefined;
                hover?: boolean | undefined;
                readonly?: boolean | undefined;
                clearable?: boolean | undefined;
                halfIcon?: string | undefined;
                emptyIcon?: string | undefined;
                halves?: boolean | undefined;
                readonly unselectedColor?: string | undefined;
                readonly itemNumber?: number | undefined;
                numbers?: boolean | undefined;
                texts?: string[] | undefined;
                ariaItemLabel?: string | undefined;
            };
            VaSelect: {
                preset?: string | undefined;
                name?: string | undefined;
                modelValue?: import("../../../components").SelectOption | import("../../../components").SelectOption[] | undefined;
                multiple?: boolean | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                width?: string | undefined;
                color?: string | undefined;
                tabindex?: string | number | undefined;
                outline?: boolean | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                options?: import("../../../components").SelectOption[] | undefined;
                disabled?: boolean | undefined;
                bordered?: boolean | undefined;
                placement?: import("../../../components").Placement | undefined;
                offset?: import("../../../components/va-dropdown/types").DropdownOffsetProp | undefined;
                separator?: string | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: "none" | "click" | "right-click" | "hover" | "dblclick" | undefined;
                keyboardNavigation?: boolean | undefined;
                textBy?: import("../../../composables").StringOrFunction | undefined;
                valueBy?: import("../../../composables").StringOrFunction | undefined;
                trackBy?: import("../../../composables").StringOrFunction | undefined;
                disabledBy?: import("../../../composables").StringOrFunction | undefined;
                groupBy?: import("../../../composables").StringOrFunction | undefined;
                placeholder?: string | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<import("../../../components").SelectOption>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                requiredMark?: boolean | undefined;
                clearable?: boolean | undefined;
                clearableIcon?: string | undefined;
                clearValue?: string | undefined;
                autocomplete?: boolean | undefined;
                virtualScroller?: boolean | undefined;
                delay?: number | undefined;
                maxHeight?: string | undefined;
                highlightMatchedText?: boolean | undefined;
                minSearchChars?: number | undefined;
                noOptionsText?: string | undefined;
                autoSelectFirstOption?: boolean | undefined;
                selectedTopShown?: boolean | undefined;
                allowCreate?: boolean | "unique" | undefined;
                searchable?: boolean | undefined;
                hideSelected?: boolean | undefined;
                searchPlaceholderText?: string | undefined;
                ariaSearchLabel?: string | undefined;
                ariaClearLabel?: string | undefined;
                dropdownIcon?: string | import("../../../components").SelectDropdownIcon | undefined;
                maxVisibleOptions?: number | undefined;
                maxSelections?: string | number | undefined;
            };
            VaSeparator: {};
            VaSkeleton: {
                width?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                ariaLabel?: string | undefined;
                height?: string | undefined;
                delay?: number | undefined;
                animation?: "none" | "pulse" | "wave" | undefined;
                lines?: number | undefined;
                lineGap?: string | undefined;
                lastLineWidth?: string | undefined;
                variant?: "text" | "circle" | "rounded" | "squared" | undefined;
            };
            VaSkeletonGroup: {
                color?: string | undefined;
                delay?: number | undefined;
                animation?: "none" | "pulse" | "wave" | undefined;
                lines?: number | undefined;
                lineGap?: string | undefined;
                lastLineWidth?: string | undefined;
            };
            VaSidebar: {
                preset?: string | undefined;
                modelValue?: boolean | undefined;
                width?: string | undefined;
                color?: string | undefined;
                readonly textColor?: string | undefined;
                borderColor?: string | undefined;
                gradient?: boolean | undefined;
                hoverOpacity?: number | undefined;
                position?: "left" | "right" | undefined;
                activeColor?: string | undefined;
                hoverable?: boolean | undefined;
                animated?: boolean | undefined;
                hoverColor?: string | undefined;
                minimized?: boolean | undefined;
                minimizedWidth?: string | undefined;
            };
            VaSidebarItem: {
                preset?: string | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                textColor?: string | undefined;
                borderColor?: string | undefined;
                replace?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                hoverOpacity?: number | undefined;
                activeColor?: string | undefined;
                active?: boolean | undefined;
                hoverColor?: string | undefined;
            };
            VaSidebarItemContent: {};
            VaSidebarItemTitle: {};
            VaSlider: {
                preset?: string | undefined;
                modelValue?: number | number[] | undefined;
                stateful?: boolean | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                ariaLabel?: string | undefined;
                max?: number | undefined;
                disabled?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                step?: number | undefined;
                min?: number | undefined;
                range?: boolean | undefined;
                readonly trackLabel?: string | ((val: number, order?: number | undefined) => string) | undefined;
                trackColor?: string | undefined;
                labelColor?: string | undefined;
                trackLabelVisible?: boolean | undefined;
                invertLabel?: boolean | undefined;
                pins?: boolean | undefined;
                iconPrepend?: string | undefined;
                iconAppend?: string | undefined;
                showTrack?: boolean | undefined;
            };
            VaSpacer: {};
            VaSplit: {
                preset?: string | undefined;
                modelValue?: number | undefined;
                stateful?: boolean | undefined;
                vertical?: boolean | undefined;
                ariaLabel?: string | undefined;
                disabled?: boolean | undefined;
                maximization?: boolean | undefined;
                maximizeStart?: boolean | undefined;
                limits?: [import("../../../components/va-split/types").SplitLimit, import("../../../components/va-split/types").SplitLimit] | undefined;
                snapping?: import("../../../components/va-split/types").SnappingMark[] | undefined;
                snappingRange?: string | number | undefined;
            };
            VaSwitch: {
                preset?: string | undefined;
                name?: string | undefined;
                modelValue?: string | number | boolean | unknown[] | Record<string, unknown> | null | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                indeterminate?: boolean | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<any>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                indeterminateValue?: null | undefined;
                id?: string | undefined;
                arrayValue?: string | number | boolean | Record<string, any> | undefined;
                leftLabel?: boolean | undefined;
                trueValue?: any;
                falseValue?: any;
                trueLabel?: string | undefined;
                falseLabel?: string | undefined;
                trueInnerLabel?: string | undefined;
                falseInnerLabel?: string | undefined;
                offColor?: string | undefined;
            };
            VaTabs: {
                left?: boolean | undefined;
                center?: boolean | undefined;
                right?: boolean | undefined;
                preset?: string | undefined;
                modelValue?: string | number | undefined;
                stateful?: boolean | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                disabled?: boolean | undefined;
                grow?: boolean | undefined;
                hidePagination?: boolean | undefined;
                hideSlider?: boolean | undefined;
                prevIcon?: string | undefined;
                nextIcon?: string | undefined;
                ariaMoveRightLabel?: string | undefined;
                ariaMoveLeftLabel?: string | undefined;
            };
            VaTab: {
                preset?: string | undefined;
                readonly name?: string | number | undefined;
                target?: string | undefined;
                tag?: string | undefined;
                color?: string | undefined;
                icon?: string | undefined;
                replace?: boolean | undefined;
                disabled?: boolean | undefined;
                to?: string | Record<string, any> | undefined;
                append?: boolean | undefined;
                exact?: boolean | undefined;
                activeClass?: string | undefined;
                exactActiveClass?: string | undefined;
                href?: string | undefined;
                label?: string | undefined;
                selected?: boolean | undefined;
            };
            VaStepper: {
                modelValue?: number | undefined;
                stateful?: boolean | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                ariaLabel?: string | undefined;
                steps?: import("../../../components/va-stepper/types").Step[] | undefined;
                nextDisabled?: boolean | undefined;
                finishButtonHidden?: boolean | undefined;
                navigationDisabled?: boolean | undefined;
                controlsHidden?: boolean | undefined;
            };
            VaTimeInput: {
                preset?: string | undefined;
                name?: string | undefined;
                modelValue?: Date | undefined;
                stateful?: boolean | undefined;
                target?: import("../../../composables").MaybeHTMLElementOrSelector;
                color?: string | undefined;
                icon?: string | undefined;
                outline?: boolean | undefined;
                background?: string | undefined;
                ariaLabel?: string | undefined;
                error?: boolean | undefined;
                loading?: boolean | undefined;
                disabled?: boolean | undefined;
                bordered?: boolean | undefined;
                leftIcon?: boolean | undefined;
                placement?: import("../../../composables").PlacementWithAlias | undefined;
                offset?: import("../../../components/va-dropdown/types").DropdownOffsetProp | undefined;
                label?: string | undefined;
                readonly?: boolean | undefined;
                anchorSelector?: string | undefined;
                innerAnchorSelector?: string | undefined;
                teleport?: import("../../../composables").MaybeHTMLElementOrSelector;
                preventOverflow?: boolean | undefined;
                keepAnchorWidth?: boolean | undefined;
                isContentHoverable?: boolean | undefined;
                closeOnContentClick?: boolean | undefined;
                closeOnClickOutside?: boolean | undefined;
                closeOnAnchorClick?: boolean | undefined;
                hoverOverTimeout?: number | undefined;
                hoverOutTimeout?: number | undefined;
                stickToEdges?: boolean | undefined;
                autoPlacement?: boolean | undefined;
                cursor?: boolean | undefined;
                trigger?: "none" | "click" | "right-click" | "hover" | "dblclick" | undefined;
                keyboardNavigation?: boolean | undefined;
                view?: "hours" | "minutes" | "seconds" | undefined;
                counterValue?: number | undefined;
                messages?: string | string[] | undefined;
                errorMessages?: string | string[] | undefined;
                errorCount?: string | number | undefined;
                rules?: import("../../../composables").ValidationRule<Date>[] | undefined;
                success?: boolean | undefined;
                immediateValidation?: boolean | undefined;
                maxLength?: number | undefined;
                focused?: boolean | undefined;
                requiredMark?: boolean | undefined;
                ariaResetLabel?: string | undefined;
                clearable?: boolean | undefined;
                clearableIcon?: string | undefined;
                clearValue?: Date | undefined;
                manualInput?: boolean | undefined;
                isOpen?: boolean | undefined;
                readonly format?: ((date?: Date | undefined) => string) | undefined;
                readonly parse?: ((input: string) => Date) | undefined;
                ariaToggleDropdownLabel?: string | undefined;
                cellHeight?: number | undefined;
                ampm?: boolean | undefined;
                hidePeriodSwitch?: boolean | undefined;
                periodUpdatesModelValue?: boolean | undefined;
                readonly hoursFilter?: ((h: number) => boolean) | undefined;
                readonly minutesFilter?: ((h: number) => boolean) | undefined;
                readonly secondsFilter?: ((h: number) => boolean) | undefined;
                framed?: boolean | undefined;
                visibleCellsCount?: number | undefined;
            };
            VaTimeline: {};
            VaTimelineItem: {
                preset?: string | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                active?: boolean | undefined;
                activePrevious?: boolean | undefined;
                activeNext?: boolean | undefined;
                isFirst?: boolean | undefined;
                isLast?: boolean | undefined;
                inverted?: boolean | undefined;
            };
            VaTimePicker: {
                preset?: string | undefined;
                readonly modelValue?: Date | undefined;
                stateful?: boolean | undefined;
                disabled?: boolean | undefined;
                readonly?: boolean | undefined;
                view?: "hours" | "minutes" | "seconds" | undefined;
                cellHeight?: number | undefined;
                ampm?: boolean | undefined;
                hidePeriodSwitch?: boolean | undefined;
                periodUpdatesModelValue?: boolean | undefined;
                readonly hoursFilter?: ((h: number) => boolean) | undefined;
                readonly minutesFilter?: ((h: number) => boolean) | undefined;
                readonly secondsFilter?: ((h: number) => boolean) | undefined;
                framed?: boolean | undefined;
                visibleCellsCount?: number | undefined;
            };
            VaToast: {
                preset?: string | undefined;
                color?: string | undefined;
                readonly render?: Function | undefined;
                title?: string | undefined;
                icon?: string | undefined;
                closeable?: boolean | undefined;
                multiLine?: boolean | undefined;
                position?: import("../../../components").ToastPosition | undefined;
                ariaCloseLabel?: string | undefined;
                duration?: number | undefined;
                message?: string | Function | undefined;
                offsetY?: number | undefined;
                offsetX?: number | undefined;
                dangerouslyUseHtmlString?: boolean | undefined;
                customClass?: string | undefined;
            };
            VaTreeView: {
                filter?: string | undefined;
                stateful?: boolean | undefined;
                color?: string | undefined;
                textBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                valueBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                trackBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                disabledBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                expanded?: (string | number | import("../../../components").TreeNode)[] | undefined;
                checked?: (string | number | import("../../../components").TreeNode)[] | undefined;
                selectable?: boolean | undefined;
                filterMethod?: import("../../../components/va-tree-view/types").TreeViewFilterMethod | undefined;
                iconBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                expandNodeBy?: "leaf" | "node" | undefined;
                nodes?: import("../../../components").TreeNode[] | undefined;
                selectionType?: string | undefined;
                expandedBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                checkedBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                childrenBy?: import("../../../components/va-tree-view/types").TreeViewPropKey | undefined;
                expandAll?: boolean | undefined;
            };
            VaScrollContainer: {
                horizontal?: boolean | undefined;
                vertical?: boolean | undefined;
                color?: string | undefined;
                size?: "small" | "medium" | "large" | undefined;
                sizesConfig?: Record<string, any> | undefined;
                fontSizesConfig?: Record<string, any> | undefined;
                gradient?: boolean | undefined;
                rtl?: boolean | undefined;
            };
            VaViewer: {};
            VaValue: {
                defaultValue?: any;
            };
            VaVirtualScroller: {
                items?: unknown[] | undefined;
                horizontal?: boolean | undefined;
                disabled?: boolean | undefined;
                table?: boolean | undefined;
                trackBy?: string | number | ((item: any[] | Record<string, any>) => string | number) | undefined;
                bench?: number | undefined;
                itemSize?: string | number | undefined;
                wrapperSize?: string | number | undefined;
            };
        } & {
            all: import("../../component-config").Props;
            presets: import("../../component-config").Presets;
        }> | undefined;
        breakpoint?: {
            enabled?: boolean | undefined;
            bodyClass?: boolean | undefined;
            thresholds?: {
                xs?: number | undefined;
                sm?: number | undefined;
                md?: number | undefined;
                lg?: number | undefined;
                xl?: number | undefined;
            } | undefined;
        } | undefined;
        i18n?: {
            search?: string | undefined;
            noOptions?: string | undefined;
            ok?: string | undefined;
            cancel?: string | undefined;
            uploadFile?: string | undefined;
            undo?: string | undefined;
            dropzone?: string | undefined;
            fileDeleted?: string | undefined;
            closeAlert?: string | undefined;
            backToTop?: string | undefined;
            toggleDropdown?: string | undefined;
            carousel?: string | undefined;
            goPreviousSlide?: string | undefined;
            goNextSlide?: string | undefined;
            goSlide?: string | undefined;
            slideOf?: string | undefined;
            close?: string | undefined;
            openColorPicker?: string | undefined;
            colorSelection?: string | undefined;
            colorName?: string | undefined;
            decreaseCounter?: string | undefined;
            increaseCounter?: string | undefined;
            selectAllRows?: string | undefined;
            sortColumnBy?: string | undefined;
            selectRowByIndex?: string | undefined;
            resetDate?: string | undefined;
            nextPeriod?: string | undefined;
            switchView?: string | undefined;
            previousPeriod?: string | undefined;
            removeFile?: string | undefined;
            reset?: string | undefined;
            pagination?: string | undefined;
            goToTheFirstPage?: string | undefined;
            goToPreviousPage?: string | undefined;
            goToSpecificPage?: string | undefined;
            goToSpecificPageInput?: string | undefined;
            goNextPage?: string | undefined;
            goLastPage?: string | undefined;
            currentRating?: string | undefined;
            voteRating?: string | undefined;
            optionsFilter?: string | undefined;
            splitPanels?: string | undefined;
            movePaginationLeft?: string | undefined;
            movePaginationRight?: string | undefined;
            resetTime?: string | undefined;
            closeToast?: string | undefined;
            selectedOption?: string | undefined;
            noSelectedOption?: string | undefined;
            breadcrumbs?: string | undefined;
            counterValue?: string | undefined;
            selectedDate?: string | undefined;
            selectedTime?: string | undefined;
            progressState?: string | undefined;
            color?: string | undefined;
            next?: string | undefined;
            back?: string | undefined;
            finish?: string | undefined;
            step?: string | undefined;
            progress?: string | undefined;
            loading?: string | undefined;
            sliderValue?: string | undefined;
            switch?: string | undefined;
        } | undefined;
        colorsClasses?: ({
            prefix?: string | undefined;
            postfix?: string | undefined;
            property?: string | (string | undefined)[] | undefined;
            value?: string | undefined;
        } | undefined)[] | undefined;
        routerComponent?: {
            [x: string]: any;
            setup?: {} | undefined;
            name?: string | undefined;
            template?: string | object | undefined;
            render?: {
                apply?: {} | undefined;
                call?: {} | undefined;
                bind?: {} | undefined;
                toString?: {} | undefined;
                prototype?: any;
                readonly length?: number | undefined;
                arguments?: any;
                caller?: any | undefined;
                readonly name?: string | undefined;
                [Symbol.hasInstance]?: {} | undefined;
            } | undefined;
            components?: Record<string, import("vue").Component<any, any, any, import("vue").ComputedOptions, import("vue").MethodOptions>> | undefined;
            directives?: {
                [x: string]: {
                    created?: {} | undefined;
                    beforeMount?: {} | undefined;
                    mounted?: {} | undefined;
                    beforeUpdate?: {} | undefined;
                    updated?: {} | undefined;
                    beforeUnmount?: {} | undefined;
                    unmounted?: {} | undefined;
                    getSSRProps?: {} | undefined;
                    deep?: boolean | undefined;
                } | {} | undefined;
            } | undefined;
            inheritAttrs?: boolean | undefined;
            emits?: any;
            expose?: (string | undefined)[] | undefined;
            serverPrefetch?: {} | undefined;
            compilerOptions?: {
                isCustomElement?: {} | undefined;
                whitespace?: "preserve" | "condense" | undefined;
                comments?: boolean | undefined;
                delimiters?: [(string | undefined)?, (string | undefined)?] | undefined;
            } | undefined;
            call?: {} | undefined;
            __isFragment?: undefined;
            __isTeleport?: undefined;
            __isSuspense?: undefined;
            __defaults?: {} | undefined;
            compatConfig?: {
                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                FILTERS?: boolean | "suppress-warning" | undefined;
                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                MODE?: 2 | 3 | {} | undefined;
            } | undefined;
            data?: {} | undefined;
            computed?: {
                [x: string]: {} | {
                    get?: {} | undefined;
                    set?: {} | undefined;
                } | undefined;
            } | undefined;
            methods?: {
                [x: string]: {
                    apply?: {} | undefined;
                    call?: {} | undefined;
                    bind?: {} | undefined;
                    toString?: {} | undefined;
                    prototype?: any;
                    readonly length?: number | undefined;
                    arguments?: any;
                    caller?: any | undefined;
                    readonly name?: string | undefined;
                    [Symbol.hasInstance]?: {} | undefined;
                } | undefined;
            } | undefined;
            watch?: {
                [x: string]: string | {} | {
                    handler?: string | {} | undefined;
                    immediate?: boolean | undefined;
                    deep?: boolean | undefined;
                    flush?: "pre" | "sync" | "post" | undefined;
                    onTrack?: {} | undefined;
                    onTrigger?: {} | undefined;
                } | (string | {} | {
                    handler?: string | {} | undefined;
                    immediate?: boolean | undefined;
                    deep?: boolean | undefined;
                    flush?: "pre" | "sync" | "post" | undefined;
                    onTrack?: {} | undefined;
                    onTrigger?: {} | undefined;
                } | undefined)[] | undefined;
            } | undefined;
            provide?: {
                apply?: {} | undefined;
                call?: {} | undefined;
                bind?: {} | undefined;
                toString?: {} | undefined;
                prototype?: any;
                readonly length?: number | undefined;
                arguments?: any;
                caller?: any | undefined;
                readonly name?: string | undefined;
                [Symbol.hasInstance]?: {} | undefined;
            } | {
                [x: string]: unknown;
                [x: symbol]: unknown;
            } | undefined;
            inject?: (string | undefined)[] | {} | undefined;
            filters?: {
                [x: string]: {
                    apply?: {} | undefined;
                    call?: {} | undefined;
                    bind?: {} | undefined;
                    toString?: {} | undefined;
                    prototype?: any;
                    readonly length?: number | undefined;
                    arguments?: any;
                    caller?: any | undefined;
                    readonly name?: string | undefined;
                    [Symbol.hasInstance]?: {} | undefined;
                } | undefined;
            } | undefined;
            mixins?: any[] | undefined;
            extends?: any;
            beforeCreate?: {} | undefined;
            created?: {} | undefined;
            beforeMount?: {} | undefined;
            mounted?: {} | undefined;
            beforeUpdate?: {} | undefined;
            updated?: {} | undefined;
            activated?: {} | undefined;
            deactivated?: {} | undefined;
            beforeDestroy?: {} | undefined;
            beforeUnmount?: {} | undefined;
            destroyed?: {} | undefined;
            unmounted?: {} | undefined;
            renderTracked?: {} | undefined;
            renderTriggered?: {} | undefined;
            errorCaptured?: {} | undefined;
            delimiters?: [(string | undefined)?, (string | undefined)?] | undefined;
            __differentiator?: string | number | symbol | undefined;
            __isBuiltIn?: boolean | undefined;
            __file?: string | undefined;
            __name?: string | undefined;
            beforeRouteEnter?: {} | undefined;
            beforeRouteUpdate?: {} | undefined;
            beforeRouteLeave?: {} | undefined;
        } | {
            props?: (string | undefined)[] | {
                [x: string]: {} | {} | {
                    readonly prototype?: any;
                } | ({} | {} | {
                    readonly prototype?: any;
                } | undefined)[] | {
                    type?: true | {} | {} | {
                        readonly prototype?: any;
                    } | ({} | {} | {
                        readonly prototype?: any;
                    } | undefined)[] | null | undefined;
                    required?: boolean | undefined;
                    default?: any;
                    validator?: {} | undefined;
                } | null | undefined;
            } | undefined;
            emits?: any;
            inheritAttrs?: boolean | undefined;
            displayName?: string | undefined;
            compatConfig?: {
                GLOBAL_MOUNT?: boolean | "suppress-warning" | undefined;
                GLOBAL_MOUNT_CONTAINER?: boolean | "suppress-warning" | undefined;
                GLOBAL_EXTEND?: boolean | "suppress-warning" | undefined;
                GLOBAL_PROTOTYPE?: boolean | "suppress-warning" | undefined;
                GLOBAL_SET?: boolean | "suppress-warning" | undefined;
                GLOBAL_DELETE?: boolean | "suppress-warning" | undefined;
                GLOBAL_OBSERVABLE?: boolean | "suppress-warning" | undefined;
                GLOBAL_PRIVATE_UTIL?: boolean | "suppress-warning" | undefined;
                CONFIG_SILENT?: boolean | "suppress-warning" | undefined;
                CONFIG_DEVTOOLS?: boolean | "suppress-warning" | undefined;
                CONFIG_KEY_CODES?: boolean | "suppress-warning" | undefined;
                CONFIG_PRODUCTION_TIP?: boolean | "suppress-warning" | undefined;
                CONFIG_IGNORED_ELEMENTS?: boolean | "suppress-warning" | undefined;
                CONFIG_WHITESPACE?: boolean | "suppress-warning" | undefined;
                CONFIG_OPTION_MERGE_STRATS?: boolean | "suppress-warning" | undefined;
                INSTANCE_SET?: boolean | "suppress-warning" | undefined;
                INSTANCE_DELETE?: boolean | "suppress-warning" | undefined;
                INSTANCE_DESTROY?: boolean | "suppress-warning" | undefined;
                INSTANCE_EVENT_EMITTER?: boolean | "suppress-warning" | undefined;
                INSTANCE_EVENT_HOOKS?: boolean | "suppress-warning" | undefined;
                INSTANCE_CHILDREN?: boolean | "suppress-warning" | undefined;
                INSTANCE_LISTENERS?: boolean | "suppress-warning" | undefined;
                INSTANCE_SCOPED_SLOTS?: boolean | "suppress-warning" | undefined;
                INSTANCE_ATTRS_CLASS_STYLE?: boolean | "suppress-warning" | undefined;
                OPTIONS_DATA_FN?: boolean | "suppress-warning" | undefined;
                OPTIONS_DATA_MERGE?: boolean | "suppress-warning" | undefined;
                OPTIONS_BEFORE_DESTROY?: boolean | "suppress-warning" | undefined;
                OPTIONS_DESTROYED?: boolean | "suppress-warning" | undefined;
                WATCH_ARRAY?: boolean | "suppress-warning" | undefined;
                PROPS_DEFAULT_THIS?: boolean | "suppress-warning" | undefined;
                V_ON_KEYCODE_MODIFIER?: boolean | "suppress-warning" | undefined;
                CUSTOM_DIR?: boolean | "suppress-warning" | undefined;
                ATTR_FALSE_VALUE?: boolean | "suppress-warning" | undefined;
                ATTR_ENUMERATED_COERCION?: boolean | "suppress-warning" | undefined;
                TRANSITION_CLASSES?: boolean | "suppress-warning" | undefined;
                TRANSITION_GROUP_ROOT?: boolean | "suppress-warning" | undefined;
                COMPONENT_ASYNC?: boolean | "suppress-warning" | undefined;
                COMPONENT_FUNCTIONAL?: boolean | "suppress-warning" | undefined;
                COMPONENT_V_MODEL?: boolean | "suppress-warning" | undefined;
                RENDER_FUNCTION?: boolean | "suppress-warning" | undefined;
                FILTERS?: boolean | "suppress-warning" | undefined;
                PRIVATE_APIS?: boolean | "suppress-warning" | undefined;
                MODE?: 2 | 3 | {} | undefined;
            } | undefined;
            __isBuiltIn?: boolean | undefined;
            __file?: string | undefined;
            __name?: string | undefined;
        } | {
            __isFragment?: undefined;
            __isTeleport?: undefined;
            __isSuspense?: undefined;
        } | undefined;
    } | undefined;
    components?: Record<string, VuesticComponent> | undefined;
    plugins?: Record<string, VuesticPlugin | VuesticPluginFabric> | undefined;
} | undefined]>;
