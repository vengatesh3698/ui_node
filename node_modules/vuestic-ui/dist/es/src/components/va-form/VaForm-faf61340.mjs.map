{"version":3,"file":"VaForm-faf61340.mjs","sources":["../../../../../src/components/va-form/VaForm.vue"],"sourcesContent":["<template>\n  <component\n    class=\"va-form\"\n    :is=\"tag\"\n    v-bind=\"$attrs\"\n  >\n    <slot v-bind=\"{ isValid, validate }\" />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, watch, PropType, computed } from 'vue'\n\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\nimport { useFormParent } from '../../composables/useForm'\nimport { useLocalConfigProvider } from '../../composables/useLocalConfig'\n\nconst props = { stateful: true }\n\nconst statefulConfig = {\n  VaInput: props,\n  VaSelect: props,\n  VaCheckbox: props,\n  VaRadio: props,\n  VaDatePicker: props,\n  VaTimePicker: props,\n  VaColorPicker: props,\n  VaSlider: props,\n  VaSwitch: props,\n  VaFileUpload: props,\n  VaRating: props,\n  VaDateInput: props,\n  VaTimeInput: props,\n}\n\nexport default defineComponent({\n  name: 'VaForm',\n\n  props: {\n    ...useComponentPresetProp,\n    autofocus: { type: Boolean, default: false },\n    immediate: { type: Boolean, default: false },\n    tag: { type: String, default: 'div' },\n    trigger: { type: String as PropType<'blur' | 'change'>, default: 'blur' },\n    modelValue: { type: Boolean, default: true },\n    hideErrors: { type: Boolean, default: false },\n    hideErrorMessages: { type: Boolean, default: false },\n    hideLoading: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: false },\n  },\n\n  emits: ['update:modelValue'],\n\n  setup (props, { emit }) {\n    const context = useFormParent(props)\n\n    watch(context.isValid, (value) => {\n      emit('update:modelValue', value)\n    })\n\n    watch(() => props.autofocus, (value) => {\n      if (value) {\n        context.focus()\n      }\n    }, { immediate: true })\n\n    watch(context.fields, (newVal) => {\n      if (newVal.length && props.immediate) {\n        context.validate()\n      }\n    }, { immediate: true })\n\n    useLocalConfigProvider(computed(() => {\n      if (!props.stateful) { return {} }\n\n      return statefulConfig\n    }))\n\n    return {\n      ...context,\n      context: context,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n.va-form {\n  font-family: var(--va-font-family);\n}\n</style>\n"],"names":["_openBlock","_createBlock","_resolveDynamicComponent","_mergeProps","_withCtx"],"mappings":";;;;AAM2C,SAAA,YAAA,MAAA,QAAA,QAAA,QAAA,OAAA,UAAA;SAAvCA,UAAuC,GAAAC,YAAAC,wBAAA,KAAA,GAAA,GAAAC,WAAA,EAAA,OAAvB,UAAS,GAAA,KAAA,MAAA,GAAA;AAAA,IAAA,SAAAC,QAAA,MAAA;AAAA;;;;;;"}