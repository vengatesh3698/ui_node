{"version":3,"file":"VaCounter-f0a7c01d.mjs","sources":["../../../../../src/components/va-counter/VaCounter.vue"],"sourcesContent":["<template>\n  <va-input-wrapper\n    class=\"va-counter\"\n    v-bind=\"{ ...fieldListeners, ...inputWrapperPropsComputed }\"\n    :class=\"classComputed\"\n    :style=\"styleComputed\"\n    :focused=\"isFocused\"\n    @keydown.up.prevent=\"increaseCount\"\n    @keydown.right.prevent=\"increaseCount\"\n    @keydown.down.prevent=\"decreaseCount\"\n    @keydown.left.prevent=\"decreaseCount\"\n  >\n    <template v-if=\"$props.buttons\" #prepend=\"slotScope\">\n      <div\n        class=\"va-counter__prepend-wrapper\"\n        :style=\"{ marginRight: marginComputed }\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"decreaseAction\" v-bind=\"{ ...slotScope, decreaseCount }\">\n          <va-button\n            class=\"va-counter__button-decrease\"\n            :aria-label=\"tp($props.ariaDecreaseLabel)\"\n            v-bind=\"decreaseButtonProps\"\n            ref=\"decreaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-else #prependInner=\"slotScope\">\n      <div\n        class=\"va-counter__prepend-inner\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"decreaseAction\" v-bind=\"{ ...slotScope, decreaseCount }\">\n          <va-button\n            v-bind=\"decreaseIconProps\"\n            ref=\"decreaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-if=\"$props.buttons\" #append=\"slotScope\">\n      <div\n        class=\"va-counter__append-wrapper\"\n        :style=\"{ marginLeft: marginComputed }\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"increaseAction\" v-bind=\"{ ...slotScope, increaseCount }\">\n          <va-button\n            class=\"va-counter__button-increase\"\n            :aria-label=\"tp($props.ariaIncreaseLabel)\"\n            v-bind=\"increaseButtonProps\"\n            ref=\"increaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-else #appendInner=\"slotScope\">\n      <div\n        class=\"va-counter__append-inner\"\n        @mousedown.prevent=\"focus\"\n      >\n        <slot name=\"increaseAction\" v-bind=\"{ ...slotScope, increaseCount }\">\n          <va-button\n            v-bind=\"increaseIconProps\"\n            ref=\"increaseButtonRef\"\n          />\n        </slot>\n      </div>\n    </template>\n\n    <template v-if=\"$slots.content\" #default=\"slotScope\">\n      <div ref=\"input\" tabindex=\"0\" class=\"va-counter__content-wrapper\">\n        <slot\n          name=\"content\"\n          v-bind=\"{ ...slotScope, value: Number(valueComputed) }\"\n        />\n      </div>\n    </template>\n\n    <input\n      v-if=\"!$slots.content\"\n      ref=\"input\"\n      class=\"va-input__content__input\"\n      type=\"number\"\n      inputmode=\"decimal\"\n      v-bind=\"{ ...inputAttributesComputed, ...inputListeners }\"\n      :value=\"valueComputed\"\n      @input=\"setCountInput\"\n      @change=\"setCountChange\"\n    />\n  </va-input-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  computed,\n  shallowRef,\n  defineComponent,\n  InputHTMLAttributes,\n  PropType,\n  ComputedRef,\n  toRef,\n} from 'vue'\nimport omit from 'lodash/omit'\nimport pick from 'lodash/pick'\n\nimport { safeCSSLength } from '../../utils/css'\nimport {\n  useComponentPresetProp,\n  useFormFieldProps,\n  useEmitProxy,\n  useFocus, useFocusEmits,\n  useStateful, useStatefulProps,\n  useColors,\n  useTranslation,\n  useLongPress,\n  useTemplateRef,\n} from '../../composables'\nimport useCounterPropsValidation from './hooks/useCounterPropsValidation'\n\nimport { VaInputWrapper } from '../va-input'\nimport { VaButton } from '../va-button'\n\nconst { createEmits: createInputEmits, createListeners: createInputListeners } = useEmitProxy(\n  ['change'],\n)\n\nconst { createEmits: createFieldEmits, createListeners: createFieldListeners } = useEmitProxy([\n  { listen: 'click-prepend', emit: 'click:decrease-button' },\n  { listen: 'click-append', emit: 'click:increase-button' },\n  { listen: 'click-prepend-inner', emit: 'click:decrease-icon' },\n  { listen: 'click-append-inner', emit: 'click:increase-icon' },\n])\n\nexport default defineComponent({\n  name: 'VaCounter',\n\n  components: { VaInputWrapper, VaButton },\n\n  props: {\n    ...useFormFieldProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    // input\n    modelValue: { type: [String, Number], default: 0 },\n    manualInput: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: false },\n    min: { type: Number, default: undefined },\n    max: { type: Number, default: undefined },\n    step: { type: Number, default: 1 },\n    label: { type: String, default: '' },\n    // hint\n    messages: { type: [Array, String] as PropType<string[] | string>, default: () => [] },\n    // style\n    width: { type: [String, Number], default: '160px' },\n    color: { type: String, default: 'primary' },\n    outline: { type: Boolean },\n    bordered: { type: Boolean },\n    // icons & buttons\n    increaseIcon: { type: String, default: 'add' },\n    decreaseIcon: { type: String, default: 'remove' },\n    buttons: { type: Boolean, default: false },\n    flat: { type: Boolean, default: true },\n    rounded: { type: Boolean, default: false },\n    margins: { type: [String, Number], default: '4px' },\n    textColor: { type: String, default: undefined },\n    longPressDelay: { type: Number, default: 500 },\n\n    ariaLabel: { type: String, default: '$t:counterValue' },\n    ariaDecreaseLabel: { type: String, default: '$t:decreaseCounter' },\n    ariaIncreaseLabel: { type: String, default: '$t:increaseCounter' },\n  },\n\n  emits: [\n    'update:modelValue',\n    ...createInputEmits(),\n    ...createFieldEmits(),\n    ...useFocusEmits,\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, attrs, slots }) {\n    const input = shallowRef<HTMLInputElement | HTMLDivElement>()\n    const { min, max, step } = toRefs(props)\n\n    const {\n      isFocused,\n      focus,\n      blur,\n    } = useFocus(input, emit)\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const setCountInput = ({ target }: Event) => {\n      valueComputed.value = Number((target as HTMLInputElement | null)?.value)\n    }\n\n    const setCountChange = ({ target }: Event) => {\n      calculateCounterValue(Number((target as HTMLInputElement | null)?.value))\n    }\n\n    const getRoundDownWithStep = (value: number) => {\n      if (typeof min.value === 'undefined' || !step.value) { return value }\n\n      // If the user enters a value manually, then we must round it to the nearest valid value,\n      // taking into account the initial value (`props.min`) and the step size (`props.step`)\n      return min.value + step.value * Math.floor((value - min.value) / step.value)\n    }\n\n    const calculateCounterValue = (counterValue: number) => {\n      if (typeof min.value !== 'undefined' && counterValue < min.value) {\n        valueComputed.value = min.value\n        return\n      }\n\n      if (max.value && (counterValue > max.value)) {\n        // since the `props.step` may not be a multiple of `(props.max - props.min)`,\n        // we must round the result taking into account the allowable value\n        valueComputed.value = getRoundDownWithStep(max.value)\n        return\n      }\n\n      valueComputed.value = getRoundDownWithStep(counterValue)\n    }\n\n    const isMinReached = computed(() => {\n      if (typeof min.value === 'undefined') { return false }\n\n      return Number(valueComputed.value) <= min.value\n    })\n\n    const isMaxReached = computed(() => {\n      if (!max.value) { return false }\n\n      return step.value\n        ? Number(valueComputed.value) > (max.value - step.value)\n        : Number(valueComputed.value) >= max.value\n    })\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0)\n\n    const isDecreaseActionDisabled = computed(() => (\n      isMinReached.value || props.readonly || props.disabled\n    ))\n\n    const isIncreaseActionDisabled = computed(() => (\n      isMaxReached.value || props.readonly || props.disabled\n    ))\n\n    const decreaseCount = () => {\n      if (isDecreaseActionDisabled.value) { return }\n      calculateCounterValue(Number(valueComputed.value) - step.value)\n    }\n\n    const increaseCount = () => {\n      if (isIncreaseActionDisabled.value) { return }\n      calculateCounterValue(Number(valueComputed.value) + step.value)\n    }\n\n    useLongPress(useTemplateRef('decreaseButtonRef'), {\n      onUpdate: decreaseCount,\n      delay: toRef(props, 'longPressDelay'),\n    })\n\n    useLongPress(useTemplateRef('increaseButtonRef'), {\n      onUpdate: increaseCount,\n      delay: toRef(props, 'longPressDelay'),\n    })\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const decreaseIconProps = computed(() => ({\n      class: { 'va-counter__icon--inactive': isDecreaseActionDisabled.value },\n      color: colorComputed.value,\n      icon: props.decreaseIcon,\n      plain: true,\n      disabled: isDecreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isDecreaseActionDisabled.value && { onClick: decreaseCount }),\n    }))\n\n    const increaseIconProps = computed(() => ({\n      class: { 'va-counter__icon--inactive': isIncreaseActionDisabled.value },\n      color: colorComputed.value,\n      icon: props.increaseIcon,\n      plain: true,\n      disabled: isIncreaseActionDisabled.value,\n      tabindex: -1,\n      ...(!isIncreaseActionDisabled.value && { onClick: increaseCount }),\n    }))\n\n    const isSquareCorners = computed(() => (\n      (typeof props.margins === 'string' ? parseFloat(props.margins) : props.margins) === 0\n    ))\n\n    const buttonProps = computed(() => ({\n      ...pick(props, ['color', 'textColor']),\n      round: props.rounded,\n      preset: props.flat ? 'secondary' : '',\n      borderColor: (props.outline && props.flat) ? props.color : '',\n    }))\n\n    const decreaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.decreaseIcon,\n      disabled: isDecreaseActionDisabled.value,\n    }))\n\n    const increaseButtonProps = computed(() => ({\n      ...buttonProps.value,\n      icon: props.increaseIcon,\n      disabled: isIncreaseActionDisabled.value,\n    }))\n\n    const { tp } = useTranslation()\n\n    const inputAttributesComputed = computed(() => ({\n      tabindex: tabIndexComputed.value,\n      'aria-label': tp(props.ariaLabel),\n      'aria-valuemin': min.value,\n      'aria-valuemax': max.value,\n      ...omit(attrs, ['class', 'style']),\n      ...pick(props, ['disabled', 'min', 'max', 'step']),\n      readonly: props.readonly || !props.manualInput,\n    }) as InputHTMLAttributes)\n\n    const inputWrapperPropsComputed = computed(() => ({\n      ...pick(props, ['color', 'readonly', 'disabled', 'messages', 'label', 'bordered', 'outline']),\n    }))\n\n    const classComputed = computed(() => ([\n      attrs.class,\n      { 'va-counter--input-square': isSquareCorners.value },\n      { 'va-counter--content-slot': slots.content && props.buttons },\n    ]))\n\n    const styleComputed: ComputedRef<Partial<CSSStyleDeclaration>> = computed(() => ({\n      width: safeCSSLength(props.width),\n      ...((attrs.style as Partial<CSSStyleDeclaration>) || {}),\n    }))\n\n    const marginComputed = computed(() => safeCSSLength(props.margins))\n\n    useCounterPropsValidation(props)\n\n    return {\n      tp,\n      input,\n      valueComputed,\n      isFocused,\n\n      fieldListeners: createFieldListeners(emit),\n      inputListeners: createInputListeners(emit),\n      inputAttributesComputed,\n      inputWrapperPropsComputed,\n      setCountInput,\n      setCountChange,\n\n      decreaseCount,\n      increaseCount,\n\n      decreaseIconProps,\n      increaseIconProps,\n      decreaseButtonProps,\n      increaseButtonProps,\n\n      colorComputed,\n      classComputed,\n      styleComputed,\n      marginComputed,\n\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-counter {\n  &.va-input-wrapper {\n    min-width: unset;\n    flex: none;\n\n    .va-input-wrapper__field {\n      width: unset;\n    }\n  }\n\n  .va-input-wrapper__field > *,\n  .va-input-wrapper__container > * {\n    margin-right: 0;\n  }\n\n  &.va-counter--input-square {\n    .va-input-wrapper__field {\n      border-radius: 0;\n      border-left: none;\n      border-right: none;\n    }\n\n    .va-counter__prepend-wrapper {\n      z-index: 1;\n\n      .va-counter__button-decrease {\n        border-top-right-radius: 0;\n        border-bottom-right-radius: 0;\n      }\n\n      .va-counter__button-decrease:not(.va-button--square) {\n        width: unset;\n\n        .va-button__content {\n          padding-right: var(--va-counter-button-inner-padding);\n          padding-left: var(--va-counter-button-outer-padding);\n        }\n      }\n    }\n\n    .va-counter__append-wrapper {\n      z-index: 1;\n\n      .va-counter__button-increase {\n        border-top-left-radius: 0;\n        border-bottom-left-radius: 0;\n      }\n\n      .va-counter__button-increase:not(.va-button--square) {\n        width: unset;\n\n        .va-button__content {\n          padding-left: var(--va-counter-button-inner-padding);\n          padding-right: var(--va-counter-button-outer-padding);\n        }\n      }\n    }\n  }\n\n  .va-counter__prepend-wrapper,\n  .va-counter__append-wrapper {\n    .va-counter__button-decrease,\n    .va-counter__button-increase {\n      .va-button__content {\n        padding: unset;\n      }\n    }\n  }\n\n  .va-counter__content-wrapper {\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    &:focus-visible {\n      outline: none;\n    }\n  }\n\n  .va-input__content__input {\n    text-align: center;\n\n    // Chrome, Safari, Edge, Opera\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n\n    // Firefox\n    &[type=number] {\n      -moz-appearance: textfield;\n    }\n  }\n\n  .va-input-wrapper__field {\n    align-items: stretch;\n    padding: 0;\n\n    .va-input-wrapper__text,\n    .va-input__container {\n      padding-right: 0;\n    }\n  }\n\n  &__prepend-inner,\n  &__append-inner {\n    display: flex;\n    align-items: stretch;\n    height: 100%;\n    margin: 0 0.5rem;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createBlock","_mergeProps","_withKeys","_withModifiers","_createSlots","_withCtx","_createElementBlock","_createElementVNode","_normalizeStyle","_normalizeProps","_guardReactiveProps","_createVNode"],"mappings":"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"}