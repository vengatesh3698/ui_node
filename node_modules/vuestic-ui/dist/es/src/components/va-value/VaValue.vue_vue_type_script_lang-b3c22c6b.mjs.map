{"version":3,"file":"VaValue.vue_vue_type_script_lang-b3c22c6b.mjs","sources":["../../../../../src/components/va-value/VaValue.vue"],"sourcesContent":["<script lang=\"ts\">\nimport {\n  defineComponent,\n  ref,\n  h,\n  Fragment,\n  type Ref,\n  type PropType,\n} from 'vue'\n\nimport { renderSlotNodes } from '../../utils/headless'\n\nexport default defineComponent({\n  name: 'VaValue',\n\n  props: {\n    defaultValue: { type: null as unknown as PropType<any>, required: false, default: false },\n  },\n\n  setup (props, { slots }) {\n    const value = ref<any>(props.defaultValue)\n\n    // Vue will unwrap Refs passed as slot bind, so we make a fake not-Ref.\n    const slotBind: Ref<any> = new Proxy(value, {\n      get (target, prop) {\n        if (prop === 'value') {\n          return target.value\n        }\n\n        return target[prop]\n      },\n      set (target, prop, value) {\n        if (prop === 'value') {\n          target.value = value\n        }\n\n        return true\n      },\n    })\n\n    return () => {\n      return h(Fragment, [renderSlotNodes(slots.default, slotBind)])\n    }\n  },\n})\n</script>\n"],"names":["value"],"mappings":";;AAYA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,OAAO;AAAA,IACL,cAAc,EAAE,MAAM,MAAkC,UAAU,OAAO,SAAS,MAAM;AAAA,EAC1F;AAAA,EAEA,MAAO,OAAO,EAAE,SAAS;AACjB,UAAA,QAAQ,IAAS,MAAM,YAAY;AAGnC,UAAA,WAAqB,IAAI,MAAM,OAAO;AAAA,MAC1C,IAAK,QAAQ,MAAM;AACjB,YAAI,SAAS,SAAS;AACpB,iBAAO,OAAO;AAAA,QAChB;AAEA,eAAO,OAAO,IAAI;AAAA,MACpB;AAAA,MACA,IAAK,QAAQ,MAAMA,QAAO;AACxB,YAAI,SAAS,SAAS;AACpB,iBAAO,QAAQA;AAAAA,QACjB;AAEO,eAAA;AAAA,MACT;AAAA,IAAA,CACD;AAED,WAAO,MAAM;AACJ,aAAA,EAAE,UAAU,CAAC,gBAAgB,MAAM,SAAS,QAAQ,CAAC,CAAC;AAAA,IAAA;AAAA,EAEjE;AACF,CAAC;"}