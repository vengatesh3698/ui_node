import { computed, watch } from "vue";
import { u as useThrottleProps, a as useThrottleValue } from "../../../composables/useThrottle-cdbdff3a.mjs";
const useFilterableProps = {
  ...useThrottleProps,
  filter: { type: String, default: "" },
  filterMethod: { type: Function }
};
const useFilterable = (rawRows, props, emit) => {
  const filteredRows = computed(() => {
    if (!rawRows.value.length) {
      return rawRows.value;
    }
    if (props.filter === "" && !props.filterMethod) {
      return rawRows.value;
    }
    return rawRows.value.filter((row) => row.cells.some((cell) => {
      return typeof props.filterMethod === "function" ? props.filterMethod(cell.source) : cell.value.toLowerCase().includes(props.filter.toLowerCase());
    }));
  });
  const filteredRowsThrottled = useThrottleValue(filteredRows, props);
  watch(filteredRowsThrottled, () => {
    emit("filtered", {
      items: filteredRowsThrottled.value.map((row) => row.source),
      itemsIndexes: filteredRowsThrottled.value.map((row) => row.initialIndex)
    });
  });
  return {
    filteredRows: filteredRowsThrottled
  };
};
export {
  useFilterable as a,
  useFilterableProps as u
};
//# sourceMappingURL=useFilterable-334f2b56.mjs.map
