import { defineComponent, ref, computed } from "vue";
import { V as VaIcon } from "../va-icon/index-0ebbc0f2.mjs";
import { u as useIsMounted } from "../../composables/useIsMounted-a63f9559.mjs";
import { u as useClickOutside } from "../../composables/useClickOutside-df7e5a91.mjs";
import { u as useDocument } from "../../composables/useDocument-5c9446c6.mjs";
const _sfc_main = defineComponent({
  name: "VaViewer",
  inheritAttrs: false,
  components: { VaIcon },
  setup(_, { slots }) {
    const content = ref();
    const controls = ref();
    const isMounted = useIsMounted();
    const isClosed = ref(true);
    const isOpened = computed(() => isMounted.value && !isClosed.value);
    const openViewer = () => isClosed.value = false;
    const closeViewer = () => isClosed.value = true;
    const handleAnchorClick = () => {
      if (!slots.anchor) {
        openViewer();
      }
    };
    useClickOutside([content, controls], closeViewer);
    const document = useDocument();
    const teleportTarget = computed(() => {
      var _a;
      return (_a = document.value) == null ? void 0 : _a.body;
    });
    return {
      content,
      controls,
      teleportTarget,
      isOpened,
      openViewer,
      closeViewer,
      handleAnchorClick
    };
  }
});
export {
  _sfc_main as _
};

import '../../../VaViewer.css';
//# sourceMappingURL=VaViewer.vue_vue_type_script_lang-f7cbaea5.mjs.map
