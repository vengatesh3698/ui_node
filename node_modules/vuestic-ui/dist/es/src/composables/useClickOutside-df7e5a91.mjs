import { unref } from "vue";
import { u as useCaptureEvent } from "./useCaptureEvent-90d008ac.mjs";
import { e as extractHTMLElement } from "./useHTMLElement-beee793a.mjs";
const checkIfElementChild = (parent, child) => {
  if (!child) {
    return false;
  }
  if (child.parentElement === parent) {
    return true;
  }
  return parent.contains(child);
};
const safeArray = (a) => Array.isArray(a) ? a : [a];
const useClickOutside = (elements, cb) => {
  useCaptureEvent("click", (event) => {
    const clickTarget = event.target;
    if (event.target.shadowRoot) {
      return;
    }
    const isClickInside = safeArray(elements).some((element) => {
      const el = extractHTMLElement(unref(element));
      return el && checkIfElementChild(el, clickTarget);
    });
    if (!isClickInside) {
      cb(clickTarget);
    }
  });
};
export {
  useClickOutside as u
};
//# sourceMappingURL=useClickOutside-df7e5a91.mjs.map
