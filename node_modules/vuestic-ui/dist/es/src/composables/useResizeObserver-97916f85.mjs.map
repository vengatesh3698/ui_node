{"version":3,"file":"useResizeObserver-97916f85.mjs","sources":["../../../../src/composables/useResizeObserver.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, ref, Ref, unref, watch } from 'vue'\n\ntype MaybeRef<T> = T | Ref<T>\n\nexport const useResizeObserver = <T extends HTMLElement | undefined>(elementsList: MaybeRef<T>[], cb: () => void) => {\n  const resizeObserver = ref<ResizeObserver>()\n\n  const observeAll = (elementsList: MaybeRef<T>[]) => {\n    elementsList.forEach((element: MaybeRef<T>) => {\n      const unrefedElement = unref(element)\n\n      unrefedElement && resizeObserver.value?.observe(unrefedElement)\n    })\n  }\n\n  watch(elementsList, (newValue) => {\n    resizeObserver.value?.disconnect()\n    observeAll(newValue)\n  })\n\n  onMounted(() => {\n    resizeObserver.value = new ResizeObserver(cb)\n    observeAll(elementsList)\n  })\n\n  onBeforeUnmount(() => resizeObserver.value?.disconnect())\n\n  return resizeObserver\n}\n"],"names":["elementsList"],"mappings":";AAIa,MAAA,oBAAoB,CAAoC,cAA6B,OAAmB;AACnH,QAAM,iBAAiB;AAEjB,QAAA,aAAa,CAACA,kBAAgC;AAClDA,kBAAa,QAAQ,CAAC,YAAyB;;AACvC,YAAA,iBAAiB,MAAM,OAAO;AAElB,0BAAA,oBAAe,UAAf,mBAAsB,QAAQ;AAAA,IAAc,CAC/D;AAAA,EAAA;AAGG,QAAA,cAAc,CAAC,aAAa;;AAChC,yBAAe,UAAf,mBAAsB;AACtB,eAAW,QAAQ;AAAA,EAAA,CACpB;AAED,YAAU,MAAM;AACC,mBAAA,QAAQ,IAAI,eAAe,EAAE;AAC5C,eAAW,YAAY;AAAA,EAAA,CACxB;AAED,kBAAgB,MAAA;;AAAM,gCAAe,UAAf,mBAAsB;AAAA,GAAY;AAEjD,SAAA;AACT;"}