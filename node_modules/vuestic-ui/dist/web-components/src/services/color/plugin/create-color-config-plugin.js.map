{"version":3,"file":"create-color-config-plugin.js","sources":["../../../../../../src/services/color/plugin/create-color-config-plugin.ts"],"sourcesContent":["import { PartialGlobalConfig } from './../../global-config/types'\nimport { ColorVariables } from './../types'\nimport { App, watch } from 'vue'\nimport { isServer } from '../../../utils/ssr'\nimport { cssVariableName } from '../utils'\nimport { useColors } from '../../../composables'\n\nexport const setCSSVariable = (name: string, value: string, root: HTMLElement) => {\n  root.style.setProperty(cssVariableName(name), value)\n}\n\nexport const createColorConfigPlugin = (app: App, config?: PartialGlobalConfig) => {\n  const { colors: configColors, getTextColor, getColor, currentPresetName, applyPreset } = useColors()\n\n  /** Renders CSS variables string. Use this in SSR mode */\n  const renderCSSVariables = (colors: ColorVariables | undefined = configColors) => {\n    if (!colors) { return }\n\n    const colorNames = Object.keys(colors)\n    const renderedColors = colorNames.map((key) => `${cssVariableName(key)}: ${colors[key]}`).join(';')\n    const renderedOnColors = colorNames.map((key) => `${cssVariableName(`on-${key}`)}: ${getColor(getTextColor(colors[key]))}`).join(';')\n\n    return `${renderedColors};${renderedOnColors}`\n  }\n\n  const updateColors = (newValue: ColorVariables | undefined) => {\n    if (!newValue) { return }\n    if (isServer()) { return }\n\n    const root = document.documentElement\n\n    const colorNames = Object.keys(newValue)\n    colorNames.forEach((key) => {\n      setCSSVariable(key, newValue[key], root)\n    })\n    colorNames.forEach((key) => {\n      setCSSVariable(`on-${key}`, getColor(getTextColor(newValue[key])), root)\n    })\n  }\n\n  watch(configColors, (newValue) => {\n    updateColors(newValue)\n  }, { immediate: true, deep: true })\n\n  return {\n    renderCSSVariables,\n    updateColors,\n  }\n}\n"],"names":[],"mappings":";;;;AAOO,MAAM,iBAAiB,CAAC,MAAc,OAAe,SAAsB;AAChF,OAAK,MAAM,YAAY,gBAAgB,IAAI,GAAG,KAAK;AACrD;AAEa,MAAA,0BAA0B,CAAC,KAAU,WAAiC;AAC3E,QAAA,EAAE,QAAQ,cAAc,cAAc,UAAU,mBAAmB,gBAAgB;AAGnF,QAAA,qBAAqB,CAAC,SAAqC,iBAAiB;AAChF,QAAI,CAAC,QAAQ;AAAE;AAAA,IAAO;AAEhB,UAAA,aAAa,OAAO,KAAK,MAAM;AACrC,UAAM,iBAAiB,WAAW,IAAI,CAAC,QAAQ,GAAG,gBAAgB,GAAG,MAAM,OAAO,GAAG,GAAG,EAAE,KAAK,GAAG;AAClG,UAAM,mBAAmB,WAAW,IAAI,CAAC,QAAQ,GAAG,gBAAgB,MAAM,KAAK,MAAM,SAAS,aAAa,OAAO,GAAG,CAAC,CAAC,GAAG,EAAE,KAAK,GAAG;AAEpI,WAAO,GAAG,kBAAkB;AAAA,EAAA;AAGxB,QAAA,eAAe,CAAC,aAAyC;AAC7D,QAAI,CAAC,UAAU;AAAE;AAAA,IAAO;AACxB,QAAI,YAAY;AAAE;AAAA,IAAO;AAEzB,UAAM,OAAO,SAAS;AAEhB,UAAA,aAAa,OAAO,KAAK,QAAQ;AAC5B,eAAA,QAAQ,CAAC,QAAQ;AAC1B,qBAAe,KAAK,SAAS,GAAG,GAAG,IAAI;AAAA,IAAA,CACxC;AACU,eAAA,QAAQ,CAAC,QAAQ;AACX,qBAAA,MAAM,OAAO,SAAS,aAAa,SAAS,GAAG,CAAC,CAAC,GAAG,IAAI;AAAA,IAAA,CACxE;AAAA,EAAA;AAGG,QAAA,cAAc,CAAC,aAAa;AAChC,iBAAa,QAAQ;AAAA,KACpB,EAAE,WAAW,MAAM,MAAM,KAAM,CAAA;AAE3B,SAAA;AAAA,IACL;AAAA,IACA;AAAA,EAAA;AAEJ;"}