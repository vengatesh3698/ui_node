import { v as vuesticComponents } from "../components.js";
import { s as setCurrentApp } from "../../current-app.js";
import { u as usePlugin } from "../utils/use-plugin.js";
import { G as GlobalConfigPlugin } from "../../global-config/plugin/index.js";
import { C as ColorConfigPlugin } from "../../color/plugin/index.js";
import { C as CachePlugin } from "../../cache/plugin/index.js";
import { C as ColorsClassesPlugin } from "../../colors-classes/plugin/index.js";
import { B as BreakpointConfigPlugin } from "../../breakpoint/plugin/index.js";
import { V as VaDropdownPlugin } from "../../../components/va-dropdown/plugin/index.js";
import { V as VaToastPlugin } from "../../../components/va-toast/plugin/index.js";
import { V as VaModalPlugin } from "../../../components/va-modal/plugin/index.js";
import { d as defineVuesticPlugin } from "../utils/define-vuestic-plugin.js";
const createVuestic = defineVuesticPlugin((options = {}) => ({
  install(app) {
    const { config } = options;
    setCurrentApp(app);
    Object.entries(vuesticComponents).forEach(([name, component]) => {
      app.component(name, component);
    });
    usePlugin(app, GlobalConfigPlugin(config));
    usePlugin(app, CachePlugin);
    usePlugin(app, ColorConfigPlugin(config));
    usePlugin(app, ColorsClassesPlugin);
    usePlugin(app, BreakpointConfigPlugin);
    usePlugin(app, VaDropdownPlugin);
    usePlugin(app, VaToastPlugin);
    usePlugin(app, VaModalPlugin);
    setCurrentApp(null);
  }
}));
export {
  createVuestic as c
};
//# sourceMappingURL=create-vuestic.js.map
