{"version":3,"file":"useElementBackground.js","sources":["../../../../../src/composables/useElementBackground/useElementBackground.ts"],"sourcesContent":["import { useDomChangesObserver } from './useDomChangesObserver'\nimport { getElementBackground } from './utils'\nimport { ref, Ref, onMounted } from 'vue'\nimport { applyColors, useColors } from '../useColors'\nimport { useEl } from '../useEl'\nimport { useCache } from '../useCache'\n\ntype Maybe<T> = T | null | undefined\ntype Cache = Map<HTMLElement, string>\n\nconst isTransparent = (color: string) => color === 'rgba(0, 0, 0, 0)'\n\nconst withCache = (cb: (element: HTMLElement, cache: Cache) => string) => {\n  return (element: Maybe<HTMLElement>, cache: Cache) => {\n    if (!element) { return '#fff' }\n    if (cache.has(element)) { return cache.get(element)! }\n    cache.set(element, cb(element, cache))\n    return cache.get(element)!\n  }\n}\n\n/** Can be null before component is mounted */\nexport const useElementBackground = (element?: Ref<HTMLElement | undefined>) => {\n  const el = element || useEl()\n  const { getColor } = useColors()\n  const background = ref(getColor('background-primary'))\n\n  const { bgTempCache: tempCache } = useCache()\n\n  const recursiveGetBackground = withCache((element, cache): string => {\n    if (!element) { return '#fff' } // Likely doesn't have a color, so let's just return white\n    if (element.nodeType !== Node.ELEMENT_NODE) { return recursiveGetBackground(element.parentElement, cache) }\n\n    const bg = getElementBackground(element)\n\n    if (!bg) { return recursiveGetBackground(element.parentElement, cache) }\n\n    if (isTransparent(bg)) {\n      return recursiveGetBackground(element.parentElement, cache)\n    }\n\n    return applyColors(recursiveGetBackground(element.parentElement, cache), bg)\n  })\n\n  const updateBackground = (cache: Cache = tempCache) => {\n    background.value = recursiveGetBackground(el.value, cache)\n  }\n\n  useDomChangesObserver(updateBackground, el)\n\n  onMounted(updateBackground)\n\n  return {\n    background,\n  }\n}\n"],"names":["element"],"mappings":";;;;;;;AAUA,MAAM,gBAAgB,CAAC,UAAkB,UAAU;AAEnD,MAAM,YAAY,CAAC,OAAuD;AACjE,SAAA,CAAC,SAA6B,UAAiB;AACpD,QAAI,CAAC,SAAS;AAAS,aAAA;AAAA,IAAO;AAC1B,QAAA,MAAM,IAAI,OAAO,GAAG;AAAS,aAAA,MAAM,IAAI,OAAO;AAAA,IAAG;AACrD,UAAM,IAAI,SAAS,GAAG,SAAS,KAAK,CAAC;AAC9B,WAAA,MAAM,IAAI,OAAO;AAAA,EAAA;AAE5B;AAGa,MAAA,uBAAuB,CAAC,YAA2C;AACxE,QAAA,KAAK,WAAW;AAChB,QAAA,EAAE,aAAa;AACrB,QAAM,aAAa,IAAI,SAAS,oBAAoB,CAAC;AAErD,QAAM,EAAE,aAAa,UAAU,IAAI,SAAS;AAE5C,QAAM,yBAAyB,UAAU,CAACA,UAAS,UAAkB;AACnE,QAAI,CAACA,UAAS;AAAS,aAAA;AAAA,IAAO;AAC1BA,QAAAA,SAAQ,aAAa,KAAK,cAAc;AAAS,aAAA,uBAAuBA,SAAQ,eAAe,KAAK;AAAA,IAAE;AAEpG,UAAA,KAAK,qBAAqBA,QAAO;AAEvC,QAAI,CAAC,IAAI;AAAS,aAAA,uBAAuBA,SAAQ,eAAe,KAAK;AAAA,IAAE;AAEnE,QAAA,cAAc,EAAE,GAAG;AACd,aAAA,uBAAuBA,SAAQ,eAAe,KAAK;AAAA,IAC5D;AAEA,WAAO,YAAY,uBAAuBA,SAAQ,eAAe,KAAK,GAAG,EAAE;AAAA,EAAA,CAC5E;AAEK,QAAA,mBAAmB,CAAC,QAAe,cAAc;AACrD,eAAW,QAAQ,uBAAuB,GAAG,OAAO,KAAK;AAAA,EAAA;AAG3D,wBAAsB,kBAAkB,EAAE;AAE1C,YAAU,gBAAgB;AAEnB,SAAA;AAAA,IACL;AAAA,EAAA;AAEJ;"}