import { defineComponent, h } from "vue";
import { V as VaTimelineSeparator } from "../VaTimelineSeparator/index.js";
import { e as extractComponentProps } from "../../../utils/component-options/extract-component-options.js";
import { u as useComponentPresetProp } from "../../../composables/useComponentPreset.js";
import { f as filterComponentProps } from "../../../utils/component-options/filter-props.js";
const COMPONENT_NAME = "va-timeline-item";
const VaTimelineSeparatorProps = extractComponentProps(VaTimelineSeparator);
const _sfc_main = defineComponent({
  name: COMPONENT_NAME,
  props: {
    ...useComponentPresetProp,
    ...VaTimelineSeparatorProps,
    color: { type: String, default: "primary" },
    isFirst: { type: Boolean },
    isLast: { type: Boolean },
    inverted: { type: Boolean }
  },
  setup(props, { slots }) {
    const children = [
      h(
        VaTimelineSeparator,
        { ...filterComponentProps(VaTimelineSeparatorProps).value }
      )
    ];
    const before = props.inverted ? slots.after : slots.before;
    if (before) {
      children.unshift(
        h(
          "div",
          { class: `${COMPONENT_NAME}__before` },
          before()
        )
      );
    }
    const after = props.inverted ? slots.before : slots.after;
    if (after) {
      children.push(
        h(
          "div",
          { class: `${COMPONENT_NAME}__after` },
          after()
        )
      );
    }
    return () => h(
      "div",
      {
        class: [
          { [COMPONENT_NAME]: true },
          { [`${COMPONENT_NAME}--vertical`]: props.vertical },
          { [`${COMPONENT_NAME}--is-first`]: props.isFirst },
          { [`${COMPONENT_NAME}--is-last`]: props.isLast }
        ]
      },
      children
    );
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaTimelineItem.vue_vue_type_script_lang.js.map
