import { _ as _sfc_main } from "./VaPopover.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementVNode, normalizeStyle, createElementBlock, renderSlot, createVNode, createCommentVNode, createTextVNode, toDisplayString } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-popover-display: inline-block;\n  --va-popover-content-opacity: 1;\n  --va-popover-content-display: flex;\n  --va-popover-content-align-items: center;\n  --va-popover-content-padding: 0.65rem 1rem;\n  --va-popover-content-border-radius: 0.5rem;\n  --va-popover-content-font-size: 1rem;\n  --va-popover-content-box-shadow: 0 2px 3px 0;\n  --va-popover-content-background-color: var(--va-background-primary);\n  --va-popover-title-font-weight: 700;\n  --va-popover-title-margin-bottom: 0.125rem;\n  --va-popover-body-line-height: 1.5;\n}\n.va-popover {\n  display: var(--va-popover-display);\n}\n.va-popover__content {\n  background-color: var(--va-popover-content-background-color);\n  opacity: var(--va-popover-content-opacity);\n  display: var(--va-popover-content-display);\n  align-items: var(--va-popover-content-align-items);\n  padding: var(--va-popover-content-padding);\n  border-radius: var(--va-popover-content-border-radius, var(--va-block-border-radius));\n  font-size: var(--va-popover-content-font-size);\n}\n.va-popover__icon + div {\n  padding-left: 0.75rem;\n  overflow: hidden;\n  width: 100%;\n}\n.va-popover__title {\n  font-weight: var(--va-popover-title-font-weight);\n  margin-bottom: var(--va-popover-title-margin-bottom);\n}\n.va-popover__body {\n  line-height: var(--va-popover-body-line-height);\n}";
const _hoisted_1 = {
  key: 0,
  "aria-hidden": "true",
  class: "va-popover__icon"
};
const _hoisted_2 = { key: 1 };
const _hoisted_3 = {
  key: 0,
  class: "va-popover__title"
};
const _hoisted_4 = {
  key: 1,
  class: "va-popover__body"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  const _component_va_dropdown = resolveComponent("va-dropdown");
  return openBlock(), createBlock(_component_va_dropdown, mergeProps(_ctx.VaDropdownPropValues, {
    "model-value": _ctx.modelValue,
    "close-on-click-outside": _ctx.autoHide,
    offset: _ctx.$props.offset,
    class: "va-popover"
  }), {
    default: withCtx(() => [
      createElementVNode("div", {
        style: normalizeStyle(_ctx.computedPopoverStyle),
        class: "va-popover__content",
        role: "tooltip"
      }, [
        _ctx.showIconComputed ? (openBlock(), createElementBlock("div", _hoisted_1, [
          renderSlot(_ctx.$slots, "icon", {}, () => [
            createVNode(_component_va_icon, {
              name: _ctx.$props.icon,
              color: _ctx.textColorComputed
            }, null, 8, ["name", "color"])
          ])
        ])) : createCommentVNode("", true),
        _ctx.showPopoverContentComputed ? (openBlock(), createElementBlock("div", _hoisted_2, [
          _ctx.showTitleComputed ? (openBlock(), createElementBlock("div", _hoisted_3, [
            renderSlot(_ctx.$slots, "title", {}, () => [
              createTextVNode(toDisplayString(_ctx.$props.title), 1)
            ])
          ])) : createCommentVNode("", true),
          _ctx.showBodyComputed ? (openBlock(), createElementBlock("div", _hoisted_4, [
            renderSlot(_ctx.$slots, "body", {}, () => [
              createTextVNode(toDisplayString(_ctx.$props.message), 1)
            ])
          ])) : createCommentVNode("", true)
        ])) : createCommentVNode("", true)
      ], 4)
    ]),
    anchor: withCtx(() => [
      renderSlot(_ctx.$slots, "default")
    ]),
    _: 3
  }, 16, ["model-value", "close-on-click-outside", "offset"]);
}
const _VaPopover = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaPopover as _
};
//# sourceMappingURL=VaPopover.js.map
