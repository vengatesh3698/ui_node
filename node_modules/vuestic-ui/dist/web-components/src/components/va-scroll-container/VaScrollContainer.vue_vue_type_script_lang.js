import { defineComponent, computed, useCssVars } from "vue";
import { u as useSizeProps, a as useSize } from "../../composables/useSize.js";
import { u as useColors } from "../../composables/useColors.js";
const __default__ = defineComponent({
  name: "VaScrollContainer",
  props: {
    ...useSizeProps,
    vertical: { type: Boolean, default: false },
    horizontal: { type: Boolean, default: false },
    color: { type: String, default: "secondary" },
    rtl: { type: Boolean, default: false },
    gradient: { type: Boolean, default: false },
    sizesConfig: {
      type: Object,
      default: () => ({
        defaultSize: 4,
        sizes: { small: 4, medium: 6, large: 8 }
      })
    },
    size: {
      type: String,
      default: "small",
      validator: (v) => ["small", "medium", "large"].includes(v)
    }
  },
  setup(props) {
    const { getColor } = useColors();
    const { sizeComputed } = useSize(props);
    return {
      overflowX: computed(() => props.horizontal ? "auto" : "hidden"),
      overflowY: computed(() => props.vertical ? "auto" : "hidden"),
      scrollColor: computed(() => {
        const color = getColor(props.color);
        return props.gradient ? `linear-gradient(0deg, var(--va-scroll-container-scrollbar-gradient-to) 0%, ${color} 100%)` : color;
      }),
      scrollbarSize: computed(() => sizeComputed.value),
      scrollbarPosition: computed(() => props.rtl ? "rtl" : "ltr")
    };
  }
});
const __injectCSSVars__ = () => {
  useCssVars((_ctx) => ({
    "2e9eef1a": _ctx.scrollColor,
    "52e4a4cb": _ctx.scrollbarSize,
    "0b7c07cc": _ctx.overflowX,
    "0b7c07ca": _ctx.overflowY,
    "4d5de8f3": _ctx.scrollbarPosition
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
export {
  __default__ as _
};
//# sourceMappingURL=VaScrollContainer.vue_vue_type_script_lang.js.map
