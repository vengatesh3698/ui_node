import { _ as _sfc_main } from "./VaButtonToggle.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createBlock, mergeProps, withCtx, createElementBlock, Fragment, renderList, createTextVNode, toDisplayString } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = '.va-button-toggle .va-button {\n  height: auto;\n}\n.va-button-toggle .va-button:focus-visible {\n  outline: 2px solid var(--va-focus) !important;\n  border-radius: "inherit";\n  outline-offset: -2px;\n}';
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  const _component_va_button_group = resolveComponent("va-button-group");
  return openBlock(), createBlock(_component_va_button_group, mergeProps({ class: "va-button-toggle" }, _ctx.buttonGroupPropsComputed), {
    default: withCtx(() => [
      (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.options, (option) => {
        return openBlock(), createBlock(_component_va_button, mergeProps({
          key: _ctx.getTrackBy(option),
          "aria-pressed": _ctx.isToggled(option)
        }, _ctx.getButtonProps(option), {
          onClick: ($event) => _ctx.changeValue(option)
        }), {
          default: withCtx(() => [
            createTextVNode(toDisplayString(_ctx.getText(option)), 1)
          ]),
          _: 2
        }, 1040, ["aria-pressed", "onClick"]);
      }), 128))
    ]),
    _: 1
  }, 16);
}
const _VaButtonToggle = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaButtonToggle as _
};
//# sourceMappingURL=VaButtonToggle.js.map
