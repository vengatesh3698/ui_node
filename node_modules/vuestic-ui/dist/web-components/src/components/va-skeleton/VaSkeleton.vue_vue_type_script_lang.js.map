{"version":3,"file":"VaSkeleton.vue_vue_type_script_lang.js","sources":["../../../../../src/components/va-skeleton/VaSkeleton.vue"],"sourcesContent":["<template>\n  <component\n    class=\"va-skeleton\"\n    role=\"status\"\n    aria-live=\"polite\"\n    :aria-label=\"tp($props.ariaLabel)\"\n    aria-atomic=\"true\"\n    :class=\"classes\"\n    :is=\"tag\"\n  >\n    <slot />\n    <div class=\"va-skeleton__wave\" v-if=\"animation === 'wave'\" />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, onMounted, ref, computed, PropType, onBeforeUnmount } from 'vue'\nimport { useBem, useColors, useTranslation } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaSkeleton',\n\n  props: {\n    color: { type: String, default: 'backgroundElement' },\n    delay: { type: Number, default: 100 },\n\n    tag: { type: String, default: 'div' },\n\n    animation: { type: String as PropType<'pulse' | 'wave' | 'none'>, default: 'pulse' },\n\n    lines: { type: Number, default: 1 },\n    height: { type: [String], default: '5em' },\n    width: { type: [String], default: '100%' },\n    lineGap: { type: String, default: '8px' },\n    lastLineWidth: { type: [String], default: '75%' },\n\n    variant: { type: String as PropType<'text' | 'circle' | 'rounded' | 'squared'>, default: 'squared' },\n    ariaLabel: { type: String, default: '$t:loading' },\n  },\n\n  setup (props, { attrs }) {\n    const doShow = ref(false)\n\n    let timeoutId: ReturnType<typeof setTimeout>\n    onMounted(() => {\n      clearTimeout(timeoutId)\n      setTimeout(() => {\n        doShow.value = true\n      }, props.delay)\n    })\n    onBeforeUnmount(() => {\n      clearTimeout(timeoutId)\n    })\n\n    const heightComputed = computed(() => {\n      if (props.variant === 'text') {\n        return `${props.lines}em`\n      }\n\n      return props.height\n    })\n    const widthComputed = computed(() => {\n      if (props.variant === 'circle') {\n        return heightComputed.value\n      }\n\n      return props.width\n    })\n\n    const { getColor } = useColors()\n\n    const colorComputed = computed(() => getColor(props.color))\n    const negativeLineGap = computed(() => `-${props.lineGap}`)\n\n    const bem = useBem('va-skeleton', () => ({\n      lines: props.lines > 1,\n      text: props.variant === 'text',\n      circle: props.variant === 'circle',\n      hidden: !doShow.value,\n      pulse: props.animation === 'pulse',\n      wave: props.animation === 'wave',\n    }))\n\n    const borderRadius = computed(() => {\n      if (props.variant === 'circle') { return '50%' }\n      if (props.variant === 'rounded') { return `var(--va-skeleton-border-radius, calc(${heightComputed.value} / 5))` }\n\n      return '0px'\n    })\n\n    return {\n      ...useTranslation(),\n      classes: computed(() => [\n        ...Object.keys(bem),\n        (attrs as { class: string }).class,\n      ]),\n\n      colorComputed,\n      negativeLineGap,\n      doShow,\n      heightComputed,\n      widthComputed,\n      borderRadius,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables.scss';\n\n@keyframes pulse {\n  0% {\n    filter: brightness(1);\n  }\n\n  50% {\n    filter: brightness(1);\n  }\n\n  75% {\n    filter: brightness(0.9);\n  }\n\n  100% {\n    filter: brightness(1);\n  }\n}\n\n@keyframes wave {\n  0% {\n    left: -100%;\n  }\n\n  100% {\n    left: 100%;\n  }\n}\n\n.va-skeleton {\n  $line-height: 1em;\n\n  background: v-bind(colorComputed);\n  height: v-bind(heightComputed);\n  width: v-bind(widthComputed);\n  border-radius: v-bind(borderRadius);\n  cursor: wait;\n\n  &--pulse {\n    animation: var(--va-skeleton-animation-duration) ease-in-out 0s infinite normal none running pulse;\n  }\n\n  &--wave {\n    mask-image: -webkit-radial-gradient(white, black);\n\n    .va-skeleton__wave {\n      position: absolute;\n      overflow: hidden;\n      left: 0;\n      height: 100%;\n      width: 100%;\n\n      &::after {\n        display: block;\n        position: relative;\n        content: '';\n        left: 0;\n        top: 0;\n        width: 100%;\n        height: 100%;\n        opacity: var(--va-skeleton-wave-opacity, 0.5);\n        background: linear-gradient(90deg, transparent, var(--va-skeleton-wave-color), transparent);\n        animation: var(--va-skeleton-animation-duration) linear 0s infinite normal none running wave;\n      }\n    }\n  }\n\n  &--hidden {\n    // Hide visually and from screen readers\n    position: absolute;\n    overflow: hidden;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    width: 1px;\n    margin: -1px;\n    padding: 0;\n    border: 0;\n  }\n\n  &--lines {\n    background:\n      repeating-linear-gradient(\n        180deg,\n        v-bind(colorComputed),\n        v-bind(colorComputed) calc($line-height - v-bind(lineGap) / 2),\n        transparent calc($line-height - v-bind(lineGap) / 2),\n        transparent $line-height,\n      );\n\n    .va-skeleton__wave::after {\n      mask-image:\n        repeating-linear-gradient(\n          180deg,\n          black,\n          black calc($line-height - v-bind(lineGap) / 2),\n          transparent calc($line-height - v-bind(lineGap) / 2),\n          transparent $line-height,\n        );\n    }\n  }\n\n  &--text {\n    width: 100%;\n    clip-path:\n      polygon(\n        0% 0%,\n        0% 100%,\n        v-bind(lastLineWidth) 100%,\n        v-bind(lastLineWidth) calc(100% - $line-height),\n        100% calc(100% - $line-height),\n        100% 100%,\n        $line-height 100%,\n        v-bind(lastLineWidth) 100%,\n        100% 100%,\n        100% 0%\n      );\n  }\n\n  &--circle {\n    min-width: v-bind(widthComputed);\n    min-height: v-bind(heightComputed);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;AAmBA,MAAK,cAAe,gBAAW;AAAA,EAC7B,MAAM;AAAA,EAEN,OAAO;AAAA,IACL,OAAO,EAAE,MAAM,QAAQ,SAAS,oBAAoB;AAAA,IACpD,OAAO,EAAE,MAAM,QAAQ,SAAS,IAAI;AAAA,IAEpC,KAAK,EAAE,MAAM,QAAQ,SAAS,MAAM;AAAA,IAEpC,WAAW,EAAE,MAAM,QAA+C,SAAS,QAAQ;AAAA,IAEnF,OAAO,EAAE,MAAM,QAAQ,SAAS,EAAE;AAAA,IAClC,QAAQ,EAAE,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM;AAAA,IACzC,OAAO,EAAE,MAAM,CAAC,MAAM,GAAG,SAAS,OAAO;AAAA,IACzC,SAAS,EAAE,MAAM,QAAQ,SAAS,MAAM;AAAA,IACxC,eAAe,EAAE,MAAM,CAAC,MAAM,GAAG,SAAS,MAAM;AAAA,IAEhD,SAAS,EAAE,MAAM,QAA+D,SAAS,UAAU;AAAA,IACnG,WAAW,EAAE,MAAM,QAAQ,SAAS,aAAa;AAAA,EACnD;AAAA,EAEA,MAAO,OAAO,EAAE,SAAS;AACjB,UAAA,SAAS,IAAI,KAAK;AAEpB,QAAA;AACJ,cAAU,MAAM;AACd,mBAAa,SAAS;AACtB,iBAAW,MAAM;AACf,eAAO,QAAQ;AAAA,MAAA,GACd,MAAM,KAAK;AAAA,IAAA,CACf;AACD,oBAAgB,MAAM;AACpB,mBAAa,SAAS;AAAA,IAAA,CACvB;AAEK,UAAA,iBAAiB,SAAS,MAAM;AAChC,UAAA,MAAM,YAAY,QAAQ;AAC5B,eAAO,GAAG,MAAM;AAAA,MAClB;AAEA,aAAO,MAAM;AAAA,IAAA,CACd;AACK,UAAA,gBAAgB,SAAS,MAAM;AAC/B,UAAA,MAAM,YAAY,UAAU;AAC9B,eAAO,eAAe;AAAA,MACxB;AAEA,aAAO,MAAM;AAAA,IAAA,CACd;AAEK,UAAA,EAAE,aAAa;AAErB,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AAC1D,UAAM,kBAAkB,SAAS,MAAM,IAAI,MAAM,SAAS;AAEpD,UAAA,MAAM,OAAO,eAAe,OAAO;AAAA,MACvC,OAAO,MAAM,QAAQ;AAAA,MACrB,MAAM,MAAM,YAAY;AAAA,MACxB,QAAQ,MAAM,YAAY;AAAA,MAC1B,QAAQ,CAAC,OAAO;AAAA,MAChB,OAAO,MAAM,cAAc;AAAA,MAC3B,MAAM,MAAM,cAAc;AAAA,IAC1B,EAAA;AAEI,UAAA,eAAe,SAAS,MAAM;AAC9B,UAAA,MAAM,YAAY,UAAU;AAAS,eAAA;AAAA,MAAM;AAC3C,UAAA,MAAM,YAAY,WAAW;AAAE,eAAO,yCAAyC,eAAe;AAAA,MAAc;AAEzG,aAAA;AAAA,IAAA,CACR;AAEM,WAAA;AAAA,MACL,GAAG,eAAe;AAAA,MAClB,SAAS,SAAS,MAAM;AAAA,QACtB,GAAG,OAAO,KAAK,GAAG;AAAA,QACjB,MAA4B;AAAA,MAAA,CAC9B;AAAA,MAED;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;;;;;;;;;;;;;;;;"}