import { _ as _sfc_main } from "./VaSelectOption.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createBlock, createCommentVNode, createTextVNode, toDisplayString, withDirectives, createVNode, vShow } from "vue";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-select-option-list-option-cursor: pointer;\n  --va-select-option-list-option-display: flex;\n  --va-select-option-list-option-align-items: center;\n  --va-select-option-list-option-padding: 0.375rem 0.75rem;\n  --va-select-option-list-option-min-height: 2.25rem;\n  --va-select-option-list-option-word-break: break-word;\n  /* Empty options list */\n  --va-select-option-list-empty-block-padding: 0.375rem 0.75rem;\n  /* Icon */\n  --va-select-option-list-option-icon-margin-right: 0.5rem;\n  /* Selected Icon */\n  --va-select-option-list-option-selected-icon-margin-left: auto;\n  --va-select-option-list-option-selected-icon-font-size: 0.8rem;\n  /* Disabled Option */\n  --va-select-option-list-option-disabled-opacity: 0.7;\n  /* Highlighted Chars */\n  --va-select-option-list-option-highlighted-color: var(--va-text-inverted);\n  --va-select-option-list-option-highlighted-background-color: var(--va-primary);\n  --va-select-option-list-option-highlighted-border-radius: 0.1rem;\n  --va-select-option-list-option-highlighted-margin: 0 1px;\n  --va-select-option-list-option-highlighted-padding: 0 1px;\n  /* Autocomplete */\n  --va-select-content-autocomplete-gap: 0.25rem;\n  --va-select-content-autocomplete-color: var(--va-text-primary);\n  --va-select-content-autocomplete-line-height: calc(var(--va-input-font-size) + 2px);\n}\n.va-select-option {\n  min-height: var(--va-select-option-list-option-min-height);\n  padding: var(--va-select-option-list-option-padding);\n  display: var(--va-select-option-list-option-display);\n  align-items: var(--va-select-option-list-option-align-items);\n  word-break: var(--va-select-option-list-option-word-break);\n  cursor: var(--va-select-option-list-option-cursor);\n}\n.va-select-option__icon {\n  margin-right: var(--va-select-option-list-option-icon-margin-right);\n}\n.va-select-option__selected-icon {\n  margin-left: var(--va-select-option-list-option-selected-icon-margin-left);\n  font-size: var(--va-select-option-list-option-selected-icon-font-size);\n}\n.va-select-option__highlighted {\n  color: var(--va-select-option-list-option-highlighted-color);\n  background-color: var(--va-select-option-list-option-highlighted-background-color);\n  border-radius: var(--va-select-option-list-option-highlighted-border-radius);\n  margin: var(--va-select-option-list-option-highlighted-margin);\n  padding: var(--va-select-option-list-option-highlighted-padding);\n}";
const _hoisted_1 = ["aria-selected"];
const _hoisted_2 = {
  key: 1,
  class: "va-select-option__highlighted"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  return openBlock(), createElementBlock("div", {
    role: "option",
    class: normalizeClass(["va-select-option", _ctx.optionClass]),
    style: normalizeStyle(_ctx.optionStyle),
    "aria-selected": _ctx.isSelected
  }, [
    _ctx.optionIcon ? (openBlock(), createBlock(_component_va_icon, {
      key: 0,
      size: "small",
      class: "va-select-option__icon",
      name: _ctx.optionIcon
    }, null, 8, ["name"])) : createCommentVNode("", true),
    createTextVNode(" " + toDisplayString(_ctx.optionTextSplitted.start) + " ", 1),
    _ctx.optionTextSplitted.searchedSubString ? (openBlock(), createElementBlock("span", _hoisted_2, toDisplayString(_ctx.optionTextSplitted.searchedSubString), 1)) : createCommentVNode("", true),
    createTextVNode(" " + toDisplayString(_ctx.optionTextSplitted.end) + " ", 1),
    withDirectives(createVNode(_component_va_icon, {
      class: "va-select-option__selected-icon",
      size: "small",
      name: "va-check",
      color: _ctx.optionIconColor
    }, null, 8, ["color"]), [
      [vShow, _ctx.isSelected]
    ])
  ], 14, _hoisted_1);
}
const _VaSelectOption = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaSelectOption as _
};
//# sourceMappingURL=VaSelectOption.js.map
