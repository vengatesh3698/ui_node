{"version":3,"file":"VaDateInput.vue_vue_type_script_lang.js","sources":["../../../../../src/components/va-date-input/VaDateInput.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    v-model=\"isOpenSync\"\n    class=\"va-date-input\"\n    :class=\"$attrs.class\"\n    :style=\"$attrs.style\"\n    v-bind=\"dropdownPropsComputed\"\n    @open=\"focusDatePicker\"\n    @close=\"focus\"\n  >\n    <template #anchor>\n      <slot name=\"input\" v-bind=\"{ valueText, inputAttributes: inputAttributesComputed, inputWrapperProps, inputListeners }\">\n        <va-input-wrapper\n          class=\"va-date-input__anchor\"\n          :style=\"cursorStyleComputed\"\n          v-bind=\"inputWrapperProps\"\n          @click.stop=\"toggleDropdown\"\n        >\n          <template #default>\n            <input\n              ref=\"input\"\n              class=\"va-date-input__input\"\n              v-bind=\"inputAttributesComputed\"\n              v-on=\"inputListeners\"\n              @change=\"onInputTextChanged\"\n            />\n          </template>\n\n          <template\n            v-for=\"name in filterSlots\"\n            :key=\"name\"\n            v-slot:[name]=\"slotScope\"\n          >\n            <slot :name=\"name\" v-bind=\"slotScope\" />\n          </template>\n\n          <template #prependInner=\"slotScope\" v-if=\"$slots.prependInner || $props.leftIcon\">\n            <slot name=\"prependInner\" v-bind=\"slotScope\" />\n            <va-icon\n              v-if=\"$props.leftIcon\"\n              :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n              v-bind=\"iconProps\"\n              @click.stop=\"showDropdown\"\n              @keydown.enter.stop=\"showDropdown\"\n              @keydown.space.stop=\"showDropdown\"\n            />\n          </template>\n\n          <template #icon>\n            <va-icon\n              v-if=\"canBeCleared\"\n              :aria-label=\"tp($props.ariaResetLabel)\"\n              v-bind=\"{ ...iconProps, ...clearIconProps }\"\n              @click.stop=\"reset\"\n              @keydown.enter.stop=\"reset\"\n              @keydown.space.stop=\"reset\"\n            />\n            <va-icon\n              v-else-if=\"!$props.leftIcon && $props.icon\"\n              :aria-label=\"tp($props.ariaToggleDropdownLabel)\"\n              v-bind=\"iconProps\"\n              @click.stop=\"showDropdown\"\n              @keydown.enter.stop=\"showDropdown\"\n              @keydown.space.stop=\"showDropdown\"\n            />\n          </template>\n        </va-input-wrapper>\n      </slot>\n    </template>\n\n    <va-dropdown-content class=\"va-date-input__dropdown-content\">\n      <va-date-picker\n        ref=\"datePicker\"\n        v-bind=\"datePickerProps\"\n        v-model=\"valueWithoutText\"\n        @click:day=\"$emit('click:day', $event)\"\n        @click:month=\"$emit('click:month', $event)\"\n        @click:year=\"$emit('click:year', $event)\"\n        @hover:day=\"$emit('hover:day', $event)\"\n        @hover:month=\"$emit('hover:month', $event)\"\n        @hover:year=\"$emit('hover:year', $event)\"\n        @update:view=\"$emit('update:view', $event)\"\n      >\n        <template\n          v-for=\"(_, name) in $slots\"\n          :key=\"name\"\n          v-slot:[name]=\"bind\"\n        >\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-date-picker>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  PropType,\n  toRefs,\n  watch,\n  ref,\n  shallowRef,\n  nextTick,\n  WritableComputedRef,\n} from 'vue'\nimport omit from 'lodash/omit'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport {\n  useComponentPresetProp,\n  useClearable, useClearableEmits, useClearableProps,\n  useValidation, useValidationEmits, useValidationProps, ValidationProps,\n  useStateful, useStatefulEmits,\n  useParsable,\n  useFocus, useFocusEmits, useTranslation,\n} from '../../composables'\nimport { useSyncProp } from '../va-date-picker/hooks/sync-prop'\nimport { useRangeModelValueGuard } from './hooks/range-model-value-guard'\nimport { useDateParser } from './hooks/input-text-parser'\nimport { parseModelValue } from './hooks/model-value-parser'\n\nimport { isRange, isSingleDate, isDates } from '../va-date-picker/utils/date-utils'\n\nimport type { DateInputModelValue, DateInputValue } from './types'\n\nimport VaDatePicker from '../va-date-picker/VaDatePicker.vue'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\nimport { VaInputWrapper } from '../va-input'\nimport { VaIcon } from '../va-icon'\n\nconst VaInputWrapperProps = extractComponentProps(VaInputWrapper, ['focused', 'maxLength', 'counterValue'])\nconst VaDatePickerProps = extractComponentProps(VaDatePicker)\nconst VaDropdownProps = extractComponentProps(VaDropdown,\n  ['innerAnchorSelector', 'stateful', 'keyboardNavigation', 'modelValue'],\n)\n\nexport default defineComponent({\n  name: 'VaDateInput',\n\n  components: {\n    VaDropdown,\n    VaDropdownContent,\n    VaDatePicker,\n    VaInputWrapper,\n    VaIcon,\n  },\n\n  props: {\n    ...VaDropdownProps,\n    ...useClearableProps,\n    ...VaInputWrapperProps,\n    ...VaDatePickerProps,\n    ...useValidationProps as ValidationProps<DateInputModelValue>,\n    ...useComponentPresetProp,\n\n    clearValue: { type: Date as PropType<DateInputModelValue>, default: undefined },\n    modelValue: { type: [Date, Array, Object, String, Number] as PropType<DateInputModelValue> },\n\n    resetOnClose: { type: Boolean, default: true },\n    closeOnContentClick: { type: Boolean, default: false },\n    offset: { ...VaDropdownProps.offset, default: () => [2, 0] },\n    isOpen: { type: Boolean, default: undefined },\n\n    format: { type: Function as PropType<(date: DateInputModelValue) => string> },\n    formatDate: { type: Function as PropType<(date: Date) => string>, default: (d: Date) => d.toLocaleDateString() },\n    parse: { type: Function as PropType<(input: string) => DateInputValue> },\n    parseDate: { type: Function as PropType<(input: string) => Date> },\n    parseValue: { type: Function as PropType<typeof parseModelValue> },\n\n    delimiter: { type: String, default: ', ' },\n    rangeDelimiter: { type: String, default: ' ~ ' },\n    manualInput: { type: Boolean, default: false },\n\n    color: { type: String, default: 'primary' },\n    leftIcon: { type: Boolean, default: false },\n    icon: { type: String, default: 'va-calendar' },\n\n    ariaToggleDropdownLabel: { type: String, default: '$t:toggleDropdown' },\n    ariaResetLabel: { type: String, default: '$t:resetDate' },\n    ariaSelectedDateLabel: { type: String, default: '$t:selectedDate' },\n  },\n\n  emits: [\n    ...useFocusEmits,\n    ...extractComponentEmits(VaDatePicker),\n    ...useClearableEmits,\n    ...useValidationEmits,\n    ...useStatefulEmits,\n    'update:is-open',\n    'update:text',\n  ],\n\n  inheritAttrs: false,\n\n  setup (props, { emit, slots, attrs }) {\n    const input = shallowRef<HTMLInputElement>()\n    const datePicker = ref<typeof VaDatePicker>()\n\n    const { isOpen, resetOnClose } = toRefs(props)\n    const { valueComputed: statefulValue }: { valueComputed: WritableComputedRef<DateInputModelValue> } = useStateful(props, emit)\n    const { syncProp: isOpenSync } = useSyncProp(isOpen, 'is-open', emit, false)\n\n    const { isFocused, focus, blur, onFocus: focusListener, onBlur: blurListener } = useFocus(input)\n\n    const isRangeModelValueGuardDisabled = computed(() => !resetOnClose.value)\n\n    const {\n      valueComputed,\n      reset: resetInvalidRange,\n    } = useRangeModelValueGuard(statefulValue, isRangeModelValueGuardDisabled, props.parseValue)\n\n    watch(isOpenSync, (isOpened) => {\n      if (!isOpened && !isRangeModelValueGuardDisabled.value) { resetInvalidRange() }\n    })\n\n    const dateOrNothing = (date: Date | undefined | null) => date ? props.formatDate(date) : '...'\n\n    const { parseDateInputValue, isValid } = useDateParser(props)\n\n    watch(valueComputed, () => {\n      isValid.value = true\n    })\n\n    const modelValueToString = (value: DateInputModelValue): string => {\n      if (props.format) {\n        return props.format(valueComputed.value)\n      }\n\n      if (isDates(value)) {\n        return value.map((d) => props.formatDate(d)).join(props.delimiter)\n      }\n      if (isSingleDate(value)) {\n        return props.formatDate(value)\n      }\n      if (isRange(value)) {\n        return dateOrNothing(value.start) + props.rangeDelimiter + dateOrNothing(value.end)\n      }\n\n      throw new Error('VaDatePicker: Invalid model value. Value should be Date, Date[] or { start: Date, end: Date | null }')\n    }\n\n    const {\n      text,\n      value: valueWithoutText,\n    } = useParsable(valueComputed, parseDateInputValue, modelValueToString)\n\n    const valueText = computed(() => {\n      if (!isValid.value) {\n        return ''\n      }\n\n      if (!valueComputed.value) {\n        if (!props.clearValue) { return '' }\n        return modelValueToString(props.clearValue)\n      }\n\n      return text.value\n    })\n\n    const onInputTextChanged = ({ target }: Event) => {\n      if (props.disabled) { return }\n\n      const parsedValue = parseDateInputValue((target as HTMLInputElement).value)\n\n      if (isValid.value) {\n        valueComputed.value = parsedValue\n      }\n    }\n\n    const reset = () => withoutValidation(() => {\n      statefulValue.value = props.clearValue\n      emit('clear')\n      resetValidation()\n    })\n\n    const hideAndFocus = (): void => {\n      isOpenSync.value = false\n      focus()\n    }\n\n    const focusDatePicker = (): void => {\n      nextTick(() => datePicker.value?.focusCurrentPicker())\n    }\n\n    const focusInputOrPicker = () => {\n      isOpenSync.value ? focusDatePicker() : focus()\n    }\n\n    const checkProhibitedDropdownOpening = (e?: KeyboardEvent) => {\n      if (isOpenSync.value) { return false }\n      if (props.disabled || props.readonly) { return true }\n      return props.manualInput && e?.code !== 'Space'\n    }\n\n    const toggleDropdown = (event: Event | KeyboardEvent) => {\n      if (checkProhibitedDropdownOpening(event instanceof KeyboardEvent ? event : undefined)) { return }\n\n      isOpenSync.value = !isOpenSync.value\n      nextTick(focusInputOrPicker)\n    }\n\n    // icon interaction\n    const showDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      isOpenSync.value = true\n      nextTick(focusDatePicker)\n    }\n\n    const {\n      computedError,\n      computedErrorMessages,\n      listeners,\n      validationAriaAttributes,\n      withoutValidation,\n      resetValidation,\n    } = useValidation(props, emit, { reset, focus, value: valueComputed })\n\n    const hasError = computed(() => (!isValid.value && valueComputed.value !== props.clearValue) || computedError.value)\n\n    const filterSlots = computed(() => {\n      const slotsWithIcons = [\n        props.leftIcon && 'prependInner',\n        (!props.leftIcon || props.clearable) && 'icon',\n      ]\n      return Object.keys(slots).filter(slot => !slotsWithIcons.includes(slot))\n    })\n\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const cursorStyleComputed = computed(() => {\n      if (props.disabled) { return {} }\n      if (props.manualInput) { return { cursor: 'text' } }\n      return { cursor: 'pointer' }\n    })\n\n    const iconTabindexComputed = computed(() => props.disabled || props.readonly ? -1 : 0)\n\n    const iconProps = computed(() => ({\n      role: 'button',\n      ariaHidden: false,\n      size: 'small',\n      name: props.icon,\n      color: props.color,\n      tabindex: iconTabindexComputed.value,\n    }))\n\n    const filteredWrapperProps = filterComponentProps(VaInputWrapperProps)\n    const computedInputWrapperProps = computed(() => ({\n      ...filteredWrapperProps.value,\n      focused: isFocused.value,\n      error: hasError.value,\n      errorMessages: computedErrorMessages.value,\n      readonly: props.readonly || !props.manualInput,\n    }))\n\n    const computedInputListeners = computed(() => ({\n      focus: () => {\n        if (props.disabled) { return }\n\n        focusListener()\n\n        if (props.readonly) { return }\n        onFocus()\n        listeners.onFocus()\n      },\n      blur: () => {\n        if (props.disabled) { return }\n\n        blurListener()\n\n        if (props.readonly) { return }\n        onBlur()\n        listeners.onBlur()\n      },\n    }))\n\n    const { tp } = useTranslation()\n\n    const inputAttributesComputed = computed(() => ({\n      readonly: props.readonly || !props.manualInput,\n      disabled: props.disabled,\n      tabindex: props.disabled ? -1 : 0,\n      value: valueText.value,\n      ariaLabel: props.label || tp(props.ariaSelectedDateLabel),\n      ariaRequired: props.requiredMark,\n      ariaDisabled: props.disabled,\n      ariaReadOnly: props.readonly,\n      ...validationAriaAttributes.value,\n      ...omit(attrs, ['class', 'style']),\n    }))\n\n    const filteredProps = filterComponentProps(VaDropdownProps)\n    const dropdownPropsComputed = computed(() => ({\n      ...filteredProps.value,\n      stateful: false,\n      closeOnAnchorClick: false,\n      keyboardNavigation: true,\n      innerAnchorSelector: '.va-input-wrapper__field',\n    }))\n\n    return {\n      tp,\n      datePicker,\n      valueText,\n      valueWithoutText,\n      valueComputed,\n      isOpenSync,\n      onInputTextChanged,\n\n      isFocused,\n\n      input,\n      inputWrapperProps: computedInputWrapperProps,\n      inputListeners: computedInputListeners,\n      inputAttributesComputed,\n      datePickerProps: filterComponentProps(VaDatePickerProps),\n      dropdownPropsComputed,\n\n      filterSlots,\n      canBeCleared,\n      clearIconProps,\n      iconProps,\n      cursorStyleComputed,\n\n      hideAndFocus,\n      toggleDropdown,\n      showDropdown,\n      focusInputOrPicker,\n      focusDatePicker,\n      reset,\n      focus,\n      blur,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-date-input {\n  --va-date-picker-cell-size: 28px;\n\n  min-width: var(--va-date-input-min-width);\n  font-family: var(--va-font-family);\n\n  &__anchor {\n    flex: 1;\n  }\n\n  &__input {\n    &:read-only {\n      cursor: pointer;\n    }\n  }\n\n  &__dropdown-content {\n    display: flex;\n    justify-content: center;\n  }\n}\n</style>\n"],"names":["VaDatePicker"],"mappings":"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"}