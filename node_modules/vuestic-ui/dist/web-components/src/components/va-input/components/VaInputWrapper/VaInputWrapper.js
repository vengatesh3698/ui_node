import { _ as _sfc_main } from "./VaInputWrapper.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, createElementVNode, renderSlot, createCommentVNode, createTextVNode, toDisplayString, createBlock, normalizeProps, guardReactiveProps } from "vue";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.js";
const _style_0 = ':root,\n:host {\n  --va-input-color: var(--va-background-element);\n  --va-input-scroll-color: var(--va-background-secondary, #e1e9f8);\n  --va-input-bordered-color: var(--va-background-border, #e1e9f8);\n  --va-input-border-width: 1px;\n  --va-input-border-radius: 4px;\n  --va-input-min-height: 36px;\n  --va-input-cursor: text;\n  --va-input-opacity: 0.1;\n  /* MessageList */\n  --va-message-list-margin-top: 4px;\n  --va-message-list-vertical-align: middle;\n  --va-message-list-color: var(--va-secondary);\n  --va-message-list-font-size: 13px;\n  --va-message-list-line-height: 16px;\n  --va-message-list-icon-font-size: 16px;\n  --va-message-list-icon-margin-right: 4px;\n  /* Success */\n  --va-input-success-color: var(--va-success);\n  /* Error */\n  --va-input-error-color: var(--va-danger);\n  /* Content Wrapper */\n  --va-input-content-horizontal-padding: 12px;\n  --va-input-content-items-gap: 6px;\n  /* Input&Textarea */\n  --va-input-line-height: 20px;\n  --va-input-font-size: 1rem;\n  --va-input-font-weight: normal;\n  --va-input-font-style: normal;\n  --va-input-font-stretch: normal;\n  --va-input-letter-spacing: normal;\n  --va-input-disabled-opacity: 0.4;\n  /* Label */\n  --va-input-container-label-max-width: calc(100% - 0.75rem);\n  --va-input-container-label-font-size: 0.6rem;\n  --va-input-container-label-letter-spacing: 0.0375rem;\n  --va-input-container-label-line-height: 1.2;\n  --va-input-container-label-font-weight: 700;\n  --va-input-container-label-text-transform: uppercase;\n  --va-input-container-label-transform-origin: top left;\n}\n:root,\n:host {\n  --va-input-wrapper-color: var(--va-primary);\n  --va-input-wrapper-background: var(--va-background-element, #f5f9fb);\n  --va-input-wrapper-background-opacity: 1;\n  --va-input-wrapper-border-color: var(--va-input-bordered-color, --va-background-border);\n  --va-input-wrapper-min-width: var(--va-form-element-min-width);\n  --va-input-wrapper-display: inline-block;\n  --va-input-wrapper-vertical-align: middle;\n  /* Counter container */\n  --va-input-wrapper-bottom-display: flex;\n  --va-input-wrapper-bottom-align-items: center;\n  --va-input-wrapper-bottom-line-height: 1.5;\n  --va-input-wrapper-bottom-font-size: 0.8rem;\n  --va-input-wrapper-bottom-color: var(--va-secondary);\n  /* Counter */\n  --va-input-wrapper-counter-flex: 0 0 auto;\n  --va-input-wrapper-counter-margin-left: auto;\n  --va-input-wrapper-counter-color: var(--va-secondary);\n}\n.va-input-wrapper {\n  --va-input-wrapper-background: var(--6af990eb);\n  position: relative;\n  cursor: var(--va-input-cursor);\n  font-family: var(--va-font-family);\n  display: var(--va-input-wrapper-display);\n  vertical-align: var(--va-input-wrapper-vertical-align);\n  min-width: var(--va-input-wrapper-min-width);\n  max-width: 100%;\n  flex: 1;\n}\n.va-input-wrapper__field {\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex: 1;\n  min-height: var(--va-input-min-height);\n  width: var(--va-form-element-default-width);\n  border-color: var(--va-input-wrapper-border-color);\n  border-style: solid;\n  border-width: var(--va-input-border-width);\n  padding: 0 var(--va-input-content-horizontal-padding);\n  z-index: 0;\n  overflow: hidden;\n}\n.va-input-wrapper__field input,\n.va-input-wrapper__field textarea {\n  color: var(--1a5b02d3);\n}\n.va-input-wrapper--solid .va-input-wrapper__field, .va-input-wrapper--bordered .va-input-wrapper__field {\n  z-index: 0;\n}\n.va-input-wrapper--solid .va-input-wrapper__field::after, .va-input-wrapper--bordered .va-input-wrapper__field::after {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  content: "";\n  background: var(--va-input-wrapper-background);\n  opacity: var(--va-input-wrapper-background-opacity);\n  z-index: -1;\n  transition: all 0.3s ease-in-out;\n}\n.va-input-wrapper__container {\n  display: flex;\n  align-items: center;\n}\n.va-input-wrapper__field > *, .va-input-wrapper__container > * {\n  margin-right: var(--va-input-content-items-gap);\n}\n.va-input-wrapper__field > *:last-child, .va-input-wrapper__container > *:last-child {\n  margin-right: 0;\n}\n.va-input-wrapper > .va-message-list {\n  margin-top: 2px;\n}\n.va-input-wrapper__prepend-inner, .va-input-wrapper__append-inner {\n  display: flex;\n  justify-content: center;\n  align-content: center;\n  align-items: center;\n}\n.va-input-wrapper__text {\n  width: 100%;\n  position: relative;\n  min-height: var(--va-input-line-height);\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n.va-input-wrapper__text input,\n.va-input-wrapper__text textarea {\n  scrollbar-color: var(--va-input-scroll-color) transparent;\n  scrollbar-width: thin;\n  width: 100%;\n  min-height: var(--va-input-line-height);\n  background-color: transparent;\n  border-style: none;\n  outline: none;\n  line-height: var(--va-input-line-height);\n  font-size: var(--va-input-font-size);\n  font-family: inherit;\n  font-weight: var(--va-input-font-weight);\n  font-style: var(--va-input-font-style);\n  font-stretch: var(--va-input-font-stretch);\n  letter-spacing: var(--va-input-letter-spacing);\n  transform: translateY(-1px);\n  cursor: inherit;\n}\n.va-input-wrapper__text input::-webkit-scrollbar,\n.va-input-wrapper__text textarea::-webkit-scrollbar {\n  width: 4px;\n  height: 4px;\n}\n.va-input-wrapper__text input::-webkit-scrollbar-track,\n.va-input-wrapper__text textarea::-webkit-scrollbar-track {\n  box-shadow: none;\n  border-radius: 10px;\n}\n.va-input-wrapper__text input::-webkit-scrollbar-thumb,\n.va-input-wrapper__text textarea::-webkit-scrollbar-thumb {\n  background: var(--va-input-scroll-color);\n  opacity: 0.3;\n  border-radius: 2px;\n}\n.va-input-wrapper__text input::-webkit-scrollbar,\n.va-input-wrapper__text textarea::-webkit-scrollbar {\n  width: 10px;\n}\n.va-input-wrapper__text input::-moz-placeholder, .va-input-wrapper__text textarea::-moz-placeholder {\n  color: inherit;\n  opacity: 0.5;\n}\n.va-input-wrapper__text input::placeholder,\n.va-input-wrapper__text textarea::placeholder {\n  color: inherit;\n  opacity: 0.5;\n}\n.va-input-wrapper__icons {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.va-input-wrapper__icons__reset:focus {\n  outline: 2px solid var(--va-focus) !important;\n  border-radius: 2px;\n}\n.va-input-wrapper__required-mark {\n  transform: translate(0, -2px);\n  color: var(--va-danger);\n  font-size: 18px;\n  font-weight: var(--va-input-container-label-font-weight);\n}\n.va-input-wrapper__bottom {\n  display: var(--va-input-wrapper-bottom-display);\n  align-items: var(--va-input-wrapper-bottom-align-items);\n  color: var(--va-input-wrapper-bottom-color);\n  font-size: var(--va-input-wrapper-bottom-font-size);\n  line-height: var(--va-input-wrapper-bottom-line-height);\n}\n.va-input-wrapper__bottom-counter {\n  color: var(--va-input-wrapper-counter-color);\n  flex: var(--va-input-wrapper-counter-flex);\n  margin-left: var(--va-input-wrapper-counter-margin-left);\n}\n.va-input-wrapper textarea {\n  margin: 12px 0;\n  resize: vertical;\n}\n.va-input-wrapper--labeled .va-input-wrapper__text {\n  height: 100%;\n  padding-top: 12px;\n  box-sizing: content-box;\n}\n.va-input-wrapper--labeled .va-input-wrapper__label {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  height: 12px;\n  position: absolute;\n  left: 0;\n  top: 0;\n  display: flex;\n  padding-top: 1px;\n  max-width: var(--va-input-container-label-max-width);\n  font-size: var(--va-input-container-label-font-size);\n  letter-spacing: var(--va-input-container-label-letter-spacing, var(--va-letter-spacing));\n  line-height: var(--va-input-container-label-line-height);\n  font-weight: var(--va-input-container-label-font-weight);\n  text-transform: var(--va-input-container-label-text-transform);\n  transform-origin: top left;\n}\n.va-input-wrapper--labeled textarea {\n  margin-top: 0;\n}\n.va-input-wrapper--solid {\n  --va-input-wrapper-border-color: var(--va-input-color);\n}\n.va-input-wrapper--solid .va-input-wrapper__field {\n  border-radius: var(--va-input-border-radius);\n}\n.va-input-wrapper--outline .va-input-wrapper__field {\n  border-radius: 0;\n}\n.va-input-wrapper--bordered .va-input-wrapper__field {\n  border-top-left-radius: var(--va-input-border-radius);\n  border-top-right-radius: var(--va-input-border-radius);\n  border-left-width: 0;\n  border-right-width: 0;\n  border-top-width: 0;\n}\n.va-input-wrapper--bordered .va-input-wrapper__field::after {\n  bottom: 0;\n  border-color: var(--va-input-wrapper-border-color);\n  border-bottom-style: solid;\n}\n.va-input-wrapper--error {\n  --va-input-wrapper-border-color: var(--va-input-error-color, --va-danger);\n  --va-input-wrapper-background: var(--va-input-error-color, --va-danger);\n  --va-input-wrapper-background-opacity: var(--va-input-opacity);\n}\n.va-input-wrapper--success {\n  --va-input-wrapper-border-color: var(--va-input-success-color, --va-success);\n  --va-input-wrapper-background: var(--va-input-success-color, --va-success);\n  --va-input-wrapper-background-opacity: var(--va-input-opacity);\n}\n.va-input-wrapper--focused {\n  --va-input-wrapper-border-color: var(--va-input-wrapper-color);\n}\n.va-input-wrapper--readonly {\n  cursor: default;\n}\n.va-input-wrapper--disabled {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}';
const _hoisted_1 = { class: "va-input-wrapper__container" };
const _hoisted_2 = { class: "va-input-wrapper__field" };
const _hoisted_3 = { class: "va-input-wrapper__text" };
const _hoisted_4 = {
  key: 0,
  class: "va-input-wrapper__required-mark"
};
const _hoisted_5 = {
  key: 0,
  class: "va-input-wrapper__bottom"
};
const _hoisted_6 = { class: "va-input-wrapper__bottom-counter" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  const _component_va_message_list = resolveComponent("va-message-list");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-input-wrapper", _ctx.wrapperClass]),
    style: normalizeStyle(_ctx.wrapperStyle),
    onClick: _cache[4] || (_cache[4] = ($event) => _ctx.$emit("click", $event))
  }, [
    createElementVNode("div", _hoisted_1, [
      _ctx.$slots.prepend ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: "va-input-wrapper__prepend-inner",
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("click-prepend"))
      }, [
        renderSlot(_ctx.$slots, "prepend")
      ])) : createCommentVNode("", true),
      createElementVNode("div", _hoisted_2, [
        _ctx.$slots.prependInner ? (openBlock(), createElementBlock("div", {
          key: 0,
          class: "va-input-wrapper__prepend-inner",
          ref: "container",
          style: normalizeStyle(_ctx.containerStyle),
          onClick: _cache[1] || (_cache[1] = ($event) => _ctx.$emit("click-prepend-inner", $event))
        }, [
          renderSlot(_ctx.$slots, "prependInner")
        ], 4)) : createCommentVNode("", true),
        createElementVNode("div", _hoisted_3, [
          _ctx.label ? (openBlock(), createElementBlock("label", {
            key: 0,
            "aria-hidden": "true",
            class: "va-input-wrapper__label",
            style: normalizeStyle({ color: _ctx.colorComputed })
          }, [
            createTextVNode(toDisplayString(_ctx.label) + " ", 1),
            _ctx.requiredMark ? (openBlock(), createElementBlock("span", _hoisted_4, " * ")) : createCommentVNode("", true)
          ], 4)) : createCommentVNode("", true),
          renderSlot(_ctx.$slots, "default")
        ]),
        _ctx.success ? (openBlock(), createBlock(_component_va_icon, {
          key: 1,
          color: "success",
          name: "va-check-circle",
          size: "small",
          class: "va-input-wrapper__icon va-input-wrapper__icon--success"
        })) : createCommentVNode("", true),
        _ctx.error ? (openBlock(), createBlock(_component_va_icon, {
          key: 2,
          color: "danger",
          name: "va-warning",
          size: "small",
          class: "va-input-wrapper__icon va-input-wrapper__icon--error"
        })) : createCommentVNode("", true),
        _ctx.$props.loading ? (openBlock(), createBlock(_component_va_icon, {
          key: 3,
          color: _ctx.$props.color,
          size: "small",
          name: "va-loading",
          spin: "counter-clockwise",
          class: "va-input-wrapper__icon va-input-wrapper__icon--loading"
        }, null, 8, ["color"])) : createCommentVNode("", true),
        renderSlot(_ctx.$slots, "icon"),
        _ctx.$slots.appendInner ? (openBlock(), createElementBlock("div", {
          key: 4,
          class: "va-input-wrapper__append-inner",
          onClick: _cache[2] || (_cache[2] = ($event) => _ctx.$emit("click-append-inner", $event))
        }, [
          renderSlot(_ctx.$slots, "appendInner")
        ])) : createCommentVNode("", true)
      ]),
      _ctx.$slots.append ? (openBlock(), createElementBlock("div", {
        key: 1,
        class: "va-input-wrapper__append-inner",
        onClick: _cache[3] || (_cache[3] = ($event) => _ctx.$emit("click-append"))
      }, [
        renderSlot(_ctx.$slots, "append")
      ])) : createCommentVNode("", true)
    ]),
    _ctx.isCounterVisible ? (openBlock(), createElementBlock("div", _hoisted_5, [
      renderSlot(_ctx.$slots, "counter", normalizeProps(guardReactiveProps({ valueLength: _ctx.$props.counterValue, maxLength: _ctx.$props.maxLength })), () => [
        createElementVNode("div", _hoisted_6, toDisplayString(_ctx.counterComputed), 1)
      ])
    ])) : createCommentVNode("", true),
    renderSlot(_ctx.$slots, "messages", normalizeProps(guardReactiveProps({ messages: _ctx.messagesComputed, errorLimit: _ctx.errorLimit, color: _ctx.messagesColor })), () => [
      _ctx.hasMessages ? (openBlock(), createBlock(_component_va_message_list, {
        key: 0,
        color: _ctx.messagesColor,
        "model-value": _ctx.messagesComputed,
        limit: _ctx.errorLimit
      }, null, 8, ["color", "model-value", "limit"])) : createCommentVNode("", true)
    ])
  ], 6);
}
const VaInputWrapper = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  VaInputWrapper as V
};
//# sourceMappingURL=VaInputWrapper.js.map
