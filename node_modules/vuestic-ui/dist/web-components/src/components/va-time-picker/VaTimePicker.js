import { _ as _sfc_main } from "./VaTimePicker.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, Fragment, renderList, createBlock, withKeys, withModifiers } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = '.va-time-picker {\n  --va-time-picker-display: inline-flex;\n  --va-time-picker-disabled-opacity: 0.4;\n}\n.va-time-picker {\n  display: var(--va-time-picker-display);\n  justify-content: center;\n  overflow: hidden;\n  height: var(--va-time-picker-height);\n  font-family: var(--va-font-family);\n}\n.va-time-picker--readonly {\n  position: relative;\n}\n.va-time-picker--readonly::after {\n  content: "";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n}\n.va-time-picker--disabled {\n  position: relative;\n  opacity: var(--va-time-picker-disabled-opacity);\n}\n.va-time-picker--disabled::after {\n  content: "";\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n}\n.va-time-picker--framed {\n  position: relative;\n}\n.va-time-picker--framed::before {\n  content: "";\n  height: var(--va-time-picker-cell-height);\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  left: 0;\n  transform: translateY(-50%);\n  border-top: 1px solid var(--va-divider);\n  border-bottom: 1px solid var(--va-divider);\n  z-index: 0;\n}';
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_VaTimePickerColumn = resolveComponent("VaTimePickerColumn");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-time-picker", _ctx.computedClasses]),
    style: normalizeStyle(_ctx.computedStyles)
  }, [
    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.columns, (column, idx) => {
      return openBlock(), createBlock(_component_VaTimePickerColumn, {
        key: idx,
        ref_for: true,
        ref: _ctx.setItemRef,
        items: column.items,
        tabindex: _ctx.disabled ? -1 : 0,
        "cell-height": _ctx.$props.cellHeight,
        activeItemIndex: column.activeItem.value,
        "onUpdate:activeItemIndex": ($event) => column.activeItem.value = $event,
        onKeydown: [
          _cache[0] || (_cache[0] = withKeys(withModifiers(($event) => _ctx.focusNext(), ["stop", "prevent"]), ["right"])),
          _cache[1] || (_cache[1] = withKeys(withModifiers(($event) => _ctx.focusNext(), ["exact", "stop", "prevent"]), ["tab"])),
          _cache[2] || (_cache[2] = withKeys(withModifiers(($event) => _ctx.focusPrev(), ["stop", "prevent"]), ["left"])),
          _cache[3] || (_cache[3] = withKeys(withModifiers(($event) => _ctx.focusPrev(), ["shift", "stop", "prevent"]), ["tab"]))
        ],
        onFocus: ($event) => _ctx.activeColumnIndex = idx
      }, null, 8, ["items", "tabindex", "cell-height", "activeItemIndex", "onUpdate:activeItemIndex", "onFocus"]);
    }), 128))
  ], 6);
}
const _VaTimePicker = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaTimePicker as _
};
//# sourceMappingURL=VaTimePicker.js.map
