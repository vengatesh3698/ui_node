import { defineComponent, ref, h, Fragment } from "vue";
import { r as renderSlotNodes } from "../../utils/headless.js";
const _sfc_main = defineComponent({
  name: "VaValue",
  props: {
    defaultValue: { type: null, required: false, default: false }
  },
  setup(props, { slots }) {
    const value = ref(props.defaultValue);
    const slotBind = new Proxy(value, {
      get(target, prop) {
        if (prop === "value") {
          return target.value;
        }
        return target[prop];
      },
      set(target, prop, value2) {
        if (prop === "value") {
          target.value = value2;
        }
        return true;
      }
    });
    return () => {
      return h(Fragment, [renderSlotNodes(slots.default, slotBind)]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaValue.vue_vue_type_script_lang.js.map
