import { _ as _sfc_main } from "./VaChip.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, createElementVNode, mergeProps, toHandlers, createCommentVNode, renderSlot, withModifiers, withKeys } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-chip-display: inline-flex;\n  --va-chip-border: 0.125rem solid transparent;\n  --va-chip-position: relative;\n  --va-chip-border-radius: 2rem;\n  --va-chip-width: auto;\n  --va-chip-height: auto;\n  --va-chip-min-width: initial;\n  --va-chip-min-height: initial;\n  --va-chip-padding: 0 0.3rem;\n  --va-chip-color: #ffffff;\n  --va-chip-cursor: default;\n  --va-chip-font-size: 1rem;\n  --va-chip-vertical-align: middle;\n  --va-chip-inner-display: inline-flex;\n  --va-chip-inner-align-items: center;\n  --va-chip-inner-width: 100%;\n  --va-chip-hover-opacity: 0.85;\n  --va-chip-content-display: flex;\n  --va-chip-content-width: var(--va-chip-inner-width, 100%);\n  --va-chip-content-align-items: center;\n  --va-chip-content-justify-content: center;\n  --va-chip-content-padding: 0 0.3rem;\n  --va-chip-content-line-height: 1.6;\n  /* Square */\n  --va-chip-square-border-radius: 0.2rem;\n  /* Small */\n  --va-chip-sm-height: 1.5rem;\n  --va-chip-sm-font-size: 0.875rem;\n  /* Large */\n  --va-chip-lg-height: 2.5rem;\n  --va-chip-lg-font-size: 1.25rem;\n}\n.va-chip {\n  display: var(--va-chip-display);\n  border: var(--va-chip-border, var(--va-control-border));\n  position: var(--va-chip-position);\n  border-radius: var(--va-chip-border-radius);\n  width: var(--va-chip-width);\n  height: var(--va-chip-height);\n  min-width: var(--va-chip-min-width);\n  min-height: var(--va-chip-min-height);\n  padding: var(--va-chip-padding);\n  color: var(--va-chip-color);\n  cursor: var(--va-chip-cursor);\n  font-size: var(--va-chip-font-size);\n  font-family: var(--va-font-family);\n  vertical-align: var(--va-chip-vertical-align);\n}\n.va-chip__inner {\n  display: var(--va-chip-inner-display);\n  align-items: var(--va-chip-inner-align-items);\n  width: var(--va-chip-inner-width);\n  vertical-align: inherit;\n}\n.va-chip:hover:not(.va-chip--readonly) {\n  opacity: var(--va-chip-hover-opacity);\n}\n.va-chip__content {\n  display: var(--va-chip-content-display);\n  justify-content: var(--va-chip-content-justify-content);\n  align-items: var(--va-chip-content-align-items);\n  padding: var(--va-chip-content-padding);\n  line-height: var(--va-chip-content-line-height);\n  width: var(--va-chip-content-width);\n}\n.va-chip__close-icon {\n  cursor: pointer;\n}\n.va-chip--disabled .va-chip__close-icon {\n  cursor: default !important;\n}\n.va-chip--square {\n  border-radius: var(--va-chip-square-border-radius, var(--va-square-border-radius));\n}\n.va-chip--small {\n  height: var(--va-chip-sm-height);\n  font-size: var(--va-chip-sm-font-size);\n}\n.va-chip--large {\n  height: var(--va-chip-lg-height);\n  font-size: var(--va-chip-lg-font-size);\n}\n.va-chip.va-chip--disabled {\n  cursor: default;\n  opacity: 0.4;\n  pointer-events: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n}";
const _hoisted_1 = { class: "va-chip__content" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_icon = resolveComponent("va-icon");
  return _ctx.valueComputed ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.tagComputed), {
    key: 0,
    class: normalizeClass(["va-chip", _ctx.computedClass]),
    href: _ctx.hrefComputed,
    target: _ctx.target,
    to: _ctx.to,
    replace: _ctx.replace,
    exact: _ctx.exact,
    "active-class": _ctx.activeClass,
    "exact-active-class": _ctx.exactActiveClass,
    style: normalizeStyle(_ctx.computedStyle)
  }, {
    default: withCtx(() => [
      createElementVNode("span", mergeProps({
        class: "va-chip__inner",
        onFocus: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("focus")),
        onMouseenter: _cache[1] || (_cache[1] = (...args) => _ctx.onMouseEnter && _ctx.onMouseEnter(...args)),
        onMouseleave: _cache[2] || (_cache[2] = (...args) => _ctx.onMouseLeave && _ctx.onMouseLeave(...args))
      }, toHandlers(_ctx.keyboardFocusListeners, true)), [
        _ctx.icon ? (openBlock(), createBlock(_component_va_icon, {
          key: 0,
          class: "va-chip__icon",
          name: _ctx.icon,
          size: _ctx.iconSize
        }, null, 8, ["name", "size"])) : createCommentVNode("", true),
        createElementVNode("span", _hoisted_1, [
          renderSlot(_ctx.$slots, "default")
        ]),
        _ctx.closeable ? (openBlock(), createBlock(_component_va_icon, {
          key: 1,
          role: "button",
          name: "va-close",
          class: "va-chip__close-icon",
          "aria-label": _ctx.tp(_ctx.$props.ariaCloseLabel),
          tabindex: _ctx.tabIndexComputed,
          size: _ctx.iconSize,
          onClick: withModifiers(_ctx.close, ["stop"]),
          onKeydown: [
            withKeys(withModifiers(_ctx.close, ["stop"]), ["enter"]),
            withKeys(withModifiers(_ctx.close, ["stop"]), ["space"])
          ]
        }, null, 8, ["aria-label", "tabindex", "size", "onClick", "onKeydown"])) : createCommentVNode("", true)
      ], 16)
    ]),
    _: 3
  }, 8, ["href", "target", "to", "replace", "exact", "active-class", "exact-active-class", "class", "style"])) : createCommentVNode("", true);
}
const _VaChip = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaChip as _
};
//# sourceMappingURL=VaChip.js.map
