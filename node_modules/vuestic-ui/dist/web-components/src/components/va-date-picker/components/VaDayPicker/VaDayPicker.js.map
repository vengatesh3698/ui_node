{"version":3,"file":"VaDayPicker.js","sources":["../../../../../../../src/components/va-date-picker/components/VaDayPicker/VaDayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-day-picker\" v-bind=\"containerAttributes\">\n    <template v-if=\"!hideWeekDays\">\n      <div\n        v-for=\"weekday in weekdayNamesComputed\" :key=\"weekday\"\n        class=\"va-day-picker__weekday\"\n      >\n        <slot name=\"weekday\">\n          {{ weekday }}\n        </slot>\n      </div>\n    </template>\n\n    <div\n      class=\"va-day-picker__calendar__day-wrapper\"\n      v-for=\"(date, index) in calendarDates\"\n      :key=\"index\"\n      @mouseenter=\"hoveredIndex = index\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :hidden=\"isOtherMonth(date) && !showOtherMonths\"\n        :today=\"isToday(date)\"\n        :selected=\"isSelected(date)\"\n        :in-range=\"isInRange(date)\"\n        :other-month=\"isOtherMonth(date)\"\n        :weekend=\"isDateWeekend(date)\"\n        :disabled=\"isDateDisabled(date)\"\n        :focused=\"hoveredIndex === index\"\n        :highlight-today=\"highlightToday\"\n        :highlight-weekend=\"highlightWeekend\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(date); focusedCellIndex = index\"\n      >\n        <span class=\"va-date-picker-cell__day\">\n          <slot name=\"day\" v-bind=\"{ date }\">\n            {{ date.getDate() }}\n          </slot>\n        </span>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, toRefs, PropType, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\nimport { useVaDatePickerCalendar } from './va-date-picker-calendar-hook'\n\nimport { DatePickerMode, DatePickerModelValue, DatePickerView } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaDayPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    weekdayNames: { type: Array as PropType<string[]>, required: true },\n    firstWeekday: { type: String as PropType<'Monday' | 'Sunday'>, default: 'Sunday' },\n    hideWeekDays: { type: Boolean, default: false },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'day' }) },\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    showOtherMonths: { type: Boolean, default: false },\n    allowedDays: { type: Function as PropType<(date: Date) => boolean> },\n    weekends: { type: Function as PropType<(date: Date) => boolean> },\n    highlightWeekend: { type: Boolean, default: false },\n    highlightToday: { type: Boolean, default: false },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'hover:day', 'click:day'],\n\n  setup (props, { emit }) {\n    const { firstWeekday, weekdayNames, view } = toRefs(props)\n\n    const { calendarDates, currentMonthStartIndex, currentMonthEndIndex } = useVaDatePickerCalendar(view, { firstWeekday })\n\n    const weekdayNamesComputed = computed(() => {\n      return firstWeekday.value === 'Sunday'\n        ? weekdayNames.value\n        : [...weekdayNames.value.slice(1), weekdayNames.value[0]]\n    })\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('day', calendarDates, props, emit)\n\n    const gridStartIndex = computed(() => props.showOtherMonths ? 0 : currentMonthStartIndex.value)\n    const gridEndIndex = computed(() => props.showOtherMonths ? calendarDates.value.length : currentMonthEndIndex.value)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 7,\n      start: gridStartIndex,\n      end: gridEndIndex,\n      onSelected: (selectedValue) => onClick(calendarDates.value[selectedValue]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    const isOtherMonth = (date: Date) => props.view.month !== date.getMonth()\n    const isDateDisabled = (date: Date) => props.allowedDays === undefined ? false : !props.allowedDays(date)\n    const isDateWeekend = (date: Date) => {\n      if (props.weekends === undefined) {\n        return date.getDay() === 6 || date.getDay() === 0 // 0 - Sunday, 6 - Saturday\n      }\n\n      return props.weekends(date)\n    }\n\n    return {\n      hoveredIndex,\n      calendarDates,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isOtherMonth,\n      isDateDisabled,\n      isDateWeekend,\n      containerAttributes,\n      weekdayNamesComputed,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr); // 7 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n\n  &__weekday {\n    height: var(--va-date-picker-cell-size);\n    color: var(--va-secondary);\n    text-align: center;\n    font-size: var(--va-date-picker-weekday-font-size);\n    font-weight: bold;\n    line-height: var(--va-date-picker-cell-size);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_mergeProps","_openBlock","_createElementBlock","_Fragment","_renderList","_createCommentVNode","_withCtx","_createElementVNode","_renderSlot","_normalizeProps","_guardReactiveProps"],"mappings":";;;;;;;yCACEA,iBAAW,qBAAA;yCAEP,OAOMC,WAAA,EAAA,OAAA,2CANG,GAAO;AAAA,IAAA,CAAA,KAAA,gBAAAC,UAAgC,IAAO,GAAAC,mBAAAC,UAAA,EAAA,KAAA,EAAA,GAAAC,WAAA,KAAA,sBAAA,CAAA,YAAA;AAChD,aAAAH,UAAA,GAAyBC,mBAAA,OAAA;AAAA,QAAA,KAAA;AAAA,QAE9B,OAAA;AAAA,MAAA,GAAA;AAAA;;;;IAMJ,CAAA,GAAA,GAAA,KAAAG,mBAAA,IAAA,IAAA;AAAA,KAAAJ,UACQ,IAAsC,GAAAC,mBAAAC,UAAA,MAAAC,WAAA,KAAA,eAAA,CAAA,MAAA,UAAA;aAEtCH,UAAK,GAAAC,mBAAA,OAAA;AAAA,QACV,OAAA;AAAA,QACA,KAAA;AAAA,QAAA,cAAA,CAAA,WAAA,KAAA,eAAA;AAAA,QAED,cAoBsB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,eAAA;AAAA,MAAA,GAAA;AAAA,oBAlBZ,gCAAY;AAAA,UACnB,QAAQ,KAAE,aAAW,IAAI,KAAA,CAAA,KAAA;AAAA,UACzB,OAAU,KAAA,QAAA,IAAA;AAAA,UACV,UAAa,KAAA,WAAA,IAAA;AAAA,UACb,YAAS,eAAa,IAAC;AAAA,UACvB,eAAU,kBAAe,IAAI;AAAA,UAC7B,SAAS,mBAAY,IAAK;AAAA,UAC1B,UAAiB,KAAA,eAAA,IAAA;AAAA,UACjB,SAAmB,KAAA,iBAAA;AAAA,UACnB,mBAAU,KAAO;AAAA,UACjB,qBAAY,KAAA;AAAA,UACZ,UAAK,KAAE,OAAA;AAAA,UAAA,OAAA,KAAA;AAAA,UAMD,SAAA,CAAA,WAAA;AAAA,iBAAA,QAAA,IAAA;AAAA,iBAAA,mBAAA;AAAA,UAAA;AAAA,QAAA,GAAA;AAAA,mBAHLI,QAEO,MAAA;AAAA,YADFC,mBAAA,QAAA,YAAA;AAAA,cAAAC,WAAA,KAAA,QAAA,OAAAC,eAAAC,mBAAA,EAAA,MAAA,CAAA,GAAA,MAAA;AAAA;;;;;;;;;;;"}