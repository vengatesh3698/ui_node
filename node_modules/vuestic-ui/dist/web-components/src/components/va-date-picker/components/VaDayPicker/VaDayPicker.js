import { _ as _sfc_main } from "./VaDayPicker.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createTextVNode, toDisplayString, createCommentVNode, createVNode, withCtx, createElementVNode, normalizeProps, guardReactiveProps } from "vue";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.js";
const _style_0 = ".va-day-picker {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: var(--va-date-picker-cell-gap);\n}\n.va-day-picker__weekday {\n  height: var(--va-date-picker-cell-size);\n  color: var(--va-secondary);\n  text-align: center;\n  font-size: var(--va-date-picker-weekday-font-size);\n  font-weight: bold;\n  line-height: var(--va-date-picker-cell-size);\n}";
const _hoisted_1 = ["onMouseenter"];
const _hoisted_2 = { class: "va-date-picker-cell__day" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_date_picker_cell = resolveComponent("va-date-picker-cell");
  return openBlock(), createElementBlock("div", mergeProps({ class: "va-day-picker" }, _ctx.containerAttributes), [
    !_ctx.hideWeekDays ? (openBlock(true), createElementBlock(Fragment, { key: 0 }, renderList(_ctx.weekdayNamesComputed, (weekday) => {
      return openBlock(), createElementBlock("div", {
        key: weekday,
        class: "va-day-picker__weekday"
      }, [
        renderSlot(_ctx.$slots, "weekday", {}, () => [
          createTextVNode(toDisplayString(weekday), 1)
        ])
      ]);
    }), 128)) : createCommentVNode("", true),
    (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.calendarDates, (date, index) => {
      return openBlock(), createElementBlock("div", {
        class: "va-day-picker__calendar__day-wrapper",
        key: index,
        onMouseenter: ($event) => _ctx.hoveredIndex = index,
        onMouseleave: _cache[0] || (_cache[0] = ($event) => _ctx.hoveredIndex = -1)
      }, [
        createVNode(_component_va_date_picker_cell, {
          hidden: _ctx.isOtherMonth(date) && !_ctx.showOtherMonths,
          today: _ctx.isToday(date),
          selected: _ctx.isSelected(date),
          "in-range": _ctx.isInRange(date),
          "other-month": _ctx.isOtherMonth(date),
          weekend: _ctx.isDateWeekend(date),
          disabled: _ctx.isDateDisabled(date),
          focused: _ctx.hoveredIndex === index,
          "highlight-today": _ctx.highlightToday,
          "highlight-weekend": _ctx.highlightWeekend,
          readonly: _ctx.$props.readonly,
          color: _ctx.color,
          onClick: ($event) => {
            _ctx.onClick(date);
            _ctx.focusedCellIndex = index;
          }
        }, {
          default: withCtx(() => [
            createElementVNode("span", _hoisted_2, [
              renderSlot(_ctx.$slots, "day", normalizeProps(guardReactiveProps({ date })), () => [
                createTextVNode(toDisplayString(date.getDate()), 1)
              ])
            ])
          ]),
          _: 2
        }, 1032, ["hidden", "today", "selected", "in-range", "other-month", "weekend", "disabled", "focused", "highlight-today", "highlight-weekend", "readonly", "color", "onClick"])
      ], 40, _hoisted_1);
    }), 128))
  ], 16);
}
const VaDayPicker = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  VaDayPicker as V
};
//# sourceMappingURL=VaDayPicker.js.map
