{"version":3,"file":"VaDatePicker.vue_vue_type_script_lang.js","sources":["../../../../../src/components/va-date-picker/VaDatePicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"styleComputed\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n      :textColor=\"textColorComputed\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useElementBackground } from '../../composables/useElementBackground'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n    const { background } = useElementBackground()\n    const { textColorComputed } = useTextColor(background)\n\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n      ...colorsToCSSVariable({\n        color: props.color,\n        'weekends-color': props.weekendsColor,\n      }, 'va-date-picker'),\n    }))\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      styleComputed,\n      currentPicker,\n      textColorComputed,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"names":[],"mappings":"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"}