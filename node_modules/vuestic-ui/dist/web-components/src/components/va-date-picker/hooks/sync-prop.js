import { computed, ref } from "vue";
function useSyncProp(propRef, propName, emit, defaultValue) {
  if (defaultValue === void 0) {
    return {
      syncProp: computed({
        set(value) {
          emit(`update:${propName}`, value);
        },
        get() {
          return propRef.value;
        }
      })
    };
  }
  const statefulValue = ref(defaultValue);
  return {
    syncProp: computed({
      set(value) {
        statefulValue.value = value;
        emit(`update:${propName}`, value);
      },
      get() {
        return (propRef == null ? void 0 : propRef.value) === void 0 ? statefulValue.value : propRef.value;
      }
    })
  };
}
export {
  useSyncProp as u
};
//# sourceMappingURL=sync-prop.js.map
