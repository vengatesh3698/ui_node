{"version":3,"file":"useFloatingPositionStyles.js","sources":["../../../../../../src/components/va-badge/hooks/useFloatingPositionStyles.ts"],"sourcesContent":["import { PropType, Ref, computed, ExtractPropTypes, toRef } from 'vue'\n\nimport { usePlacementAliases, placementsPositionsWithAliases, useParsableMeasure } from '../../../composables'\n\nimport type { PlacementAlignment, PlacementPosition, PlacementWithAlias } from '../../../composables'\ntype AlignComplianceTable = Record<PlacementPosition, Record<PlacementAlignment, string> & { multiplier: number }>\n\nconst { isParsableMeasure, parseSizeValue } = useParsableMeasure()\n\nexport const useFloatingPositionProps = {\n  overlap: { type: Boolean, default: false },\n  placement: {\n    type: String as PropType<PlacementWithAlias>,\n    default: 'top-end',\n    validator: (position: PlacementWithAlias) => placementsPositionsWithAliases.includes(position),\n  },\n  offset: {\n    type: [Number, String] as PropType<string | number>,\n    default: 0,\n    validator: (value: string | number) => {\n      if (typeof value === 'string') {\n        return isParsableMeasure(value)\n      }\n\n      return !isNaN(value)\n    },\n  },\n}\n\nexport const useFloatingPosition = (\n  props: ExtractPropTypes<typeof useFloatingPositionProps>,\n  floating: Ref<boolean>,\n) => {\n  if (!floating.value) { return {} }\n\n  const { position, align } = usePlacementAliases(props)\n  const centerAlignment = computed(() => align.value === 'center' ? '-50%' : '0%')\n  const transformComputed = computed(() => {\n    const options = {\n      top: { transform: `translateX(${centerAlignment.value}) translateY(-100%)` },\n      bottom: { transform: 'translateX(0) translateY(100%)' },\n      left: { transform: 'translateX(-100%) translateY(-50%)' },\n      right: { transform: `translateX(100%) translateY(${centerAlignment.value})` },\n    }\n\n    return options[position.value]\n  })\n\n  const getOverlapMargin = computed(() => {\n    if (!props.overlap) { return {} }\n\n    const result = { [`margin-${position.value}`]: 'var(--va-badge-overlap)' }\n\n    const alignComplianceTable = {\n      top: { end: 'left', multiplier: -1 },\n      bottom: { start: 'left', multiplier: 1 },\n    } as AlignComplianceTable\n\n    const alignComplianceValue = alignComplianceTable[position.value]?.[align.value]\n    if (alignComplianceValue) {\n      Object.assign(result, {\n        [`margin-${alignComplianceValue}`]: `calc(${alignComplianceTable[position.value].multiplier} * var(--va-badge-overlap))`,\n      })\n    }\n\n    return result\n  })\n\n  const getAlignment = computed(() => {\n    const baseSide = ['left', 'right'].includes(position.value) ? 'top' : 'left'\n    const alignmentOptions = { start: { [baseSide]: 0 }, center: { [baseSide]: '50%' }, end: { [baseSide]: '100%' } }\n    return alignmentOptions[align.value]\n  })\n\n  const offset = toRef(props, 'offset')\n\n  return computed(() => ({\n    [position.value]: `${parseSizeValue(offset)}px`,\n    ...transformComputed.value,\n    ...getAlignment.value,\n    ...getOverlapMargin.value,\n  }))\n}\n"],"names":[],"mappings":";;;AAOA,MAAM,EAAE,mBAAmB,mBAAmB;AAEvC,MAAM,2BAA2B;AAAA,EACtC,SAAS,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,EACzC,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS;AAAA,IACT,WAAW,CAAC,aAAiC,+BAA+B,SAAS,QAAQ;AAAA,EAC/F;AAAA,EACA,QAAQ;AAAA,IACN,MAAM,CAAC,QAAQ,MAAM;AAAA,IACrB,SAAS;AAAA,IACT,WAAW,CAAC,UAA2B;AACjC,UAAA,OAAO,UAAU,UAAU;AAC7B,eAAO,kBAAkB,KAAK;AAAA,MAChC;AAEO,aAAA,CAAC,MAAM,KAAK;AAAA,IACrB;AAAA,EACF;AACF;AAEa,MAAA,sBAAsB,CACjC,OACA,aACG;AACC,MAAA,CAAC,SAAS,OAAO;AAAE,WAAO;EAAG;AAEjC,QAAM,EAAE,UAAU,MAAM,IAAI,oBAAoB,KAAK;AACrD,QAAM,kBAAkB,SAAS,MAAM,MAAM,UAAU,WAAW,SAAS,IAAI;AACzE,QAAA,oBAAoB,SAAS,MAAM;AACvC,UAAM,UAAU;AAAA,MACd,KAAK,EAAE,WAAW,cAAc,gBAAgB,2BAA2B;AAAA,MAC3E,QAAQ,EAAE,WAAW,iCAAiC;AAAA,MACtD,MAAM,EAAE,WAAW,qCAAqC;AAAA,MACxD,OAAO,EAAE,WAAW,+BAA+B,gBAAgB,SAAS;AAAA,IAAA;AAGvE,WAAA,QAAQ,SAAS,KAAK;AAAA,EAAA,CAC9B;AAEK,QAAA,mBAAmB,SAAS,MAAM;;AAClC,QAAA,CAAC,MAAM,SAAS;AAAE,aAAO;IAAG;AAEhC,UAAM,SAAS,EAAE,CAAC,UAAU,SAAS,OAAO,GAAG;AAE/C,UAAM,uBAAuB;AAAA,MAC3B,KAAK,EAAE,KAAK,QAAQ,YAAY,GAAG;AAAA,MACnC,QAAQ,EAAE,OAAO,QAAQ,YAAY,EAAE;AAAA,IAAA;AAGzC,UAAM,wBAAuB,0BAAqB,SAAS,KAAK,MAAnC,mBAAuC,MAAM;AAC1E,QAAI,sBAAsB;AACxB,aAAO,OAAO,QAAQ;AAAA,QACpB,CAAC,UAAU,sBAAsB,GAAG,QAAQ,qBAAqB,SAAS,KAAK,EAAE;AAAA,MAAA,CAClF;AAAA,IACH;AAEO,WAAA;AAAA,EAAA,CACR;AAEK,QAAA,eAAe,SAAS,MAAM;AAC5B,UAAA,WAAW,CAAC,QAAQ,OAAO,EAAE,SAAS,SAAS,KAAK,IAAI,QAAQ;AAChE,UAAA,mBAAmB,EAAE,OAAO,EAAE,CAAC,QAAQ,GAAG,EAAE,GAAG,QAAQ,EAAE,CAAC,QAAQ,GAAG,SAAS,KAAK,EAAE,CAAC,QAAQ,GAAG,OAAA;AAChG,WAAA,iBAAiB,MAAM,KAAK;AAAA,EAAA,CACpC;AAEK,QAAA,SAAS,MAAM,OAAO,QAAQ;AAEpC,SAAO,SAAS,OAAO;AAAA,IACrB,CAAC,SAAS,KAAK,GAAG,GAAG,eAAe,MAAM;AAAA,IAC1C,GAAG,kBAAkB;AAAA,IACrB,GAAG,aAAa;AAAA,IAChB,GAAG,iBAAiB;AAAA,EACpB,EAAA;AACJ;"}