import { _ as _sfc_main } from "./VaSplit.vue_vue_type_script_lang.js";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, createElementVNode, normalizeStyle, renderSlot, normalizeProps, guardReactiveProps, withModifiers, createVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ":root,\n:host {\n  --va-split-panel-overflow: auto;\n  --va-split-dragger-display: flex;\n  --va-split-dragger-justify-content: center;\n  --va-split-dragger-align-items: center;\n  --va-split-dragger-overlay-size: 1rem;\n  --va-split-dragging-cursor: grabbing;\n  --va-split-horizontal-dragger-cursor: col-resize;\n  --va-split-vertical-dragger-cursor: row-resize;\n}\n.va-split {\n  position: relative;\n  display: flex;\n}\n.va-split__dragger {\n  position: relative;\n}\n.va-split__dragger__overlay {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  display: var(--va-split-dragger-display);\n  z-index: 1;\n}\n.va-split__panel {\n  overflow: var(--va-split-panel-overflow);\n  scrollbar-color: var(--va-background-element) transparent;\n  scrollbar-width: thin;\n}\n.va-split__panel::-webkit-scrollbar {\n  width: 4px;\n  height: 4px;\n}\n.va-split__panel::-webkit-scrollbar-track {\n  box-shadow: none;\n  border-radius: 10px;\n}\n.va-split__panel::-webkit-scrollbar-thumb {\n  background: var(--va-background-element);\n  opacity: 0.3;\n  border-radius: 2px;\n}\n.va-split--dragging .va-split__panel {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n          user-select: none;\n  cursor: var(--va-split-dragging-cursor);\n}\n.va-split__dragger__default {\n  opacity: 0.7;\n}\n.va-split:focus .va-split__dragger__default, .va-split:hover .va-split__dragger__default {\n  opacity: 1;\n}\n.va-split--vertical {\n  flex-direction: column;\n}\n.va-split--vertical > .va-split__dragger {\n  height: 0;\n}\n.va-split--vertical > .va-split__dragger .va-split__dragger__overlay {\n  top: calc(var(--va-split-dragger-overlay-size) / -2);\n  height: var(--va-split-dragger-overlay-size);\n  align-items: var(--va-split-dragger-align-items);\n}\n.va-split--vertical > .va-split__dragger .va-split__dragger__default {\n  width: 100%;\n}\n.va-split--horizontal {\n  flex-direction: row;\n}\n.va-split--horizontal > .va-split__dragger {\n  width: 0;\n}\n.va-split--horizontal > .va-split__dragger .va-split__dragger__overlay {\n  left: calc(var(--va-split-dragger-overlay-size) / -2);\n  width: var(--va-split-dragger-overlay-size);\n  justify-content: var(--va-split-dragger-justify-content);\n}\n.va-split--horizontal > .va-split__dragger .va-split__dragger__default {\n  height: 100%;\n}";
const _hoisted_1 = ["aria-label"];
const _hoisted_2 = { class: "va-split__dragger" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_divider = resolveComponent("va-divider");
  return openBlock(), createElementBlock("section", {
    ref: "splitPanelsContainer",
    class: normalizeClass(["va-split", _ctx.classComputed]),
    "aria-label": _ctx.tp(_ctx.$props.ariaLabel)
  }, [
    createElementVNode("div", {
      class: "va-split__panel",
      style: normalizeStyle(_ctx.getPanelStyle("start"))
    }, [
      renderSlot(_ctx.$slots, "start", normalizeProps(guardReactiveProps({ containerSize: _ctx.containerSize })))
    ], 4),
    createElementVNode("div", _hoisted_2, [
      createElementVNode("div", {
        class: "va-split__dragger__overlay",
        style: normalizeStyle(_ctx.draggerStyleComputed),
        onMousedown: _cache[0] || (_cache[0] = withModifiers((...args) => _ctx.startDragging && _ctx.startDragging(...args), ["prevent"])),
        onTouchstart: _cache[1] || (_cache[1] = withModifiers((...args) => _ctx.startDragging && _ctx.startDragging(...args), ["prevent"])),
        onDblclick: _cache[2] || (_cache[2] = withModifiers((...args) => _ctx.maximizePanel && _ctx.maximizePanel(...args), ["prevent"])),
        onContextmenu: _cache[3] || (_cache[3] = withModifiers(() => {
        }, ["prevent"])),
        onDragstart: _cache[4] || (_cache[4] = withModifiers(() => {
        }, ["prevent"]))
      }, [
        renderSlot(_ctx.$slots, "grabber", {}, () => [
          createVNode(_component_va_divider, {
            class: "va-split__dragger__default",
            vertical: !_ctx.$props.vertical
          }, null, 8, ["vertical"])
        ])
      ], 36)
    ]),
    createElementVNode("div", {
      class: "va-split__panel",
      style: normalizeStyle(_ctx.getPanelStyle("end"))
    }, [
      renderSlot(_ctx.$slots, "end", normalizeProps(guardReactiveProps({ containerSize: _ctx.containerSize })))
    ], 4)
  ], 10, _hoisted_1);
}
const _VaSplit = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaSplit as _
};
//# sourceMappingURL=VaSplit.js.map
