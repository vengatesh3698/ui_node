{"version":3,"file":"VaColorInput.vue_vue_type_script_lang.js","sources":["../../../../../src/components/va-color-input/VaColorInput.vue"],"sourcesContent":["<template>\n  <div class=\"va-color-input\">\n    <va-input\n      class=\"va-color-input__input\"\n      placeholder=\"input color\"\n      v-model=\"valueComputed\"\n      :tabindex=\"tabIndexComputed\"\n      :disabled=\"$props.disabled\"\n    >\n      <template #appendInner>\n        <va-color-indicator\n          class=\"va-color-input__dot\"\n          role=\"button\"\n          :aria-label=\"tp($props.ariaOpenColorPickerLabel)\"\n          :aria-disabled=\"$props.disabled\"\n          :tabindex=\"tabIndexComputed\"\n          :color=\"valueComputed\"\n          :indicator=\"$props.indicator\"\n          @click=\"callPickerDialog\"\n          @keydown.space=\"callPickerDialog\"\n          @keydown.enter=\"callPickerDialog\"\n        />\n      </template>\n    </va-input>\n    <input\n      ref=\"colorPicker\"\n      type=\"color\"\n      class=\"va-color-input__hidden-input\"\n      aria-hidden=\"true\"\n      tabindex=\"-1\"\n      v-model=\"valueComputed\" />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, shallowRef, computed } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\nimport { VaInput } from '../va-input'\n\nexport default defineComponent({\n  name: 'VaColorInput',\n  components: {\n    VaInput,\n    VaColorIndicator,\n  },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    disabled: { type: Boolean, default: false },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n    ariaOpenColorPickerLabel: { type: String, default: '$t:openColorPicker' },\n  },\n  setup: (props, { emit }) => {\n    const colorPicker = shallowRef<HTMLInputElement>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const callPickerDialog = () => !props.disabled && colorPicker.value?.click()\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : 0)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      callPickerDialog,\n      colorPicker,\n      tabIndexComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-input {\n  display: flex;\n  align-items: center !important;\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  &__input {\n    margin-bottom: 0;\n    min-width: 5.6rem;\n\n    &__pointer {\n      cursor: pointer;\n    }\n  }\n\n  &__hidden-input {\n    visibility: hidden;\n    width: 0;\n    height: 0;\n    overflow: hidden;\n    position: absolute;\n    pointer-events: none;\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;;AA0CA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,YAAY;AAAA,IACV;AAAA,IACA;AAAA,EACF;AAAA,EACA,OAAO,CAAC,GAAG,gBAAgB;AAAA,EAC3B,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,YAAY,EAAE,MAAM,QAAQ,SAAS,KAAK;AAAA,IAC1C,UAAU,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IAC1C,WAAW;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,MACT,WAAW,CAAC,UAAkB,CAAC,OAAO,QAAQ,EAAE,SAAS,KAAK;AAAA,IAChE;AAAA,IACA,0BAA0B,EAAE,MAAM,QAAQ,SAAS,qBAAqB;AAAA,EAC1E;AAAA,EACA,OAAO,CAAC,OAAO,EAAE,WAAW;AAC1B,UAAM,cAAc;AAEpB,UAAM,EAAE,cAAkB,IAAA,YAAY,OAAO,IAAI;AAEjD,UAAM,mBAAmB,MAAA;;AAAM,cAAC,MAAM,cAAY,iBAAY,UAAZ,mBAAmB;AAAA;AAErE,UAAM,mBAAmB,SAAS,MAAM,MAAM,WAAW,KAAK,CAAC;AAExD,WAAA;AAAA,MACL,GAAG,eAAe;AAAA,MAClB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;"}