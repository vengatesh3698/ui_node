{"version":3,"file":"VaColorPalette.js","sources":["../../../../../src/components/va-color-palette/VaColorPalette.vue"],"sourcesContent":["<template>\n  <ul\n    class=\"va-color-palette\"\n    role=\"listbox\"\n    :aria-label=\"tp($props.ariaLabel)\"\n  >\n    <va-color-indicator\n      v-for=\"(color, index) in palette\"\n      :key=\"index\"\n      role=\"option\"\n      :aria-label=\"tp($props.ariaIndicatorLabel, { color })\"\n      :aria-selected=\"isSelected(color)\"\n      tabindex=\"0\"\n      :modelValue=\"isSelected(color)\"\n      :color=\"color\"\n      :square=\"indicator === 'square'\"\n      @update:modelValue=\"valueComputed = color\"\n    />\n  </ul>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType } from 'vue'\n\nimport { useComponentPresetProp, useStateful, useStatefulProps, useStatefulEmits, useTranslation } from '../../composables'\n\nimport { VaColorIndicator } from '../va-color-indicator'\n\nexport default defineComponent({\n  name: 'VaColorPalette',\n  components: { VaColorIndicator },\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: String, default: null },\n    palette: { type: Array as PropType<string[]>, default: () => [] },\n    indicator: {\n      type: String as PropType<'dot' | 'square'>,\n      default: 'dot',\n      validator: (value: string) => ['dot', 'square'].includes(value),\n    },\n    ariaLabel: { type: String, default: '$t:colorSelection' },\n    ariaIndicatorLabel: { type: String, default: '$t:color' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    return {\n      ...useTranslation(),\n      valueComputed,\n      isSelected: (color: string) => valueComputed.value === color,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-color-palette {\n  display: flex;\n  padding-left: 0;\n  margin: 0;\n\n  & > * {\n    margin-right: 0.25rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_Fragment","_renderList","_createBlock"],"mappings":";;;;;;wCACEA,iBAiBK,oBAAA;SAfEC,UAAS,GAAAC,mBAAA,MAAA;AAAA,IACb,OAAA;AAAA,IAAA,MAAA;AAAA,uBAED,GAWE,KAAA,OAAA,SAAA;AAAA,EAAA,GAAA;AAAA,eATM,IAAK,GAAAA,mBAAAC,UAAA,MAAAC,WAAA,KAAA,SAAA,CAAA,OAAA,UAAA;aACNH,UAAQ,GAAAI,YAAA,+BAAA;AAAA,QACZ,KAAA;AAAA,QACA,MAAA;AAAA,QACD,cAAY,KAAA,GAAA,KAAA,OAAA,oBAAA,EAAA,OAAA;AAAA,QACX,iBAAY,KAAgB,WAAA,KAAA;AAAA,QAC5B,UAAO;AAAA,QACP,YAAQ,KAAS,WAAA,KAAA;AAAA,QACjB;AAAA,QAAA,QAAA,KAAA,cAAA;AAAA;;;;;;"}