{"version":3,"file":"useToast.js","sources":["../../../../../../src/components/va-toast/hooks/useToast.ts"],"sourcesContent":["import { getCurrentInstance } from 'vue'\n\nimport { createToastInstance, closeById, closeAllNotifications, NotificationOptions } from '../toast'\n\n/** This hook can be used without plugin used */\nexport const useToast = () => {\n  const appContext = getCurrentInstance()?.appContext\n\n  const createdInThisSetupContext: string[] = []\n\n  /**\n   * @param options can be options object or message string\n   */\n  const init = (options: string | NotificationOptions) => {\n    const id = createToastInstance(options, appContext)\n\n    if (id) { createdInThisSetupContext.push(id) }\n\n    return id\n  }\n\n  const close = (id: string) => closeById(id)\n\n  /**\n   * Closes all VaToast instances in current App instance.\n   * @param allApps if you have multiple vue apps on page, set allApps to true to close it for all apps.\n   */\n  const closeAll = (allApps = false) => closeAllNotifications(allApps ? undefined : appContext)\n\n  /** Use this method if you need to close only toasts that created with this hook */\n  const closeAllCreatedInThisHook = () => {\n    createdInThisSetupContext.forEach((id) => closeById(id))\n  }\n\n  return {\n    init, close, closeAll, closeAllCreatedInThisHook,\n  }\n}\n"],"names":[],"mappings":";;AAKO,MAAM,WAAW,MAAM;;AACtB,QAAA,cAAa,wBAAsB,MAAtB,mBAAsB;AAEzC,QAAM,4BAAsC,CAAA;AAKtC,QAAA,OAAO,CAAC,YAA0C;AAChD,UAAA,KAAK,oBAAoB,SAAS,UAAU;AAElD,QAAI,IAAI;AAAE,gCAA0B,KAAK,EAAE;AAAA,IAAE;AAEtC,WAAA;AAAA,EAAA;AAGT,QAAM,QAAQ,CAAC,OAAe,UAAU,EAAE;AAM1C,QAAM,WAAW,CAAC,UAAU,UAAU,sBAAsB,UAAU,SAAY,UAAU;AAG5F,QAAM,4BAA4B,MAAM;AACtC,8BAA0B,QAAQ,CAAC,OAAO,UAAU,EAAE,CAAC;AAAA,EAAA;AAGlD,SAAA;AAAA,IACL;AAAA,IAAM;AAAA,IAAO;AAAA,IAAU;AAAA,EAAA;AAE3B;"}