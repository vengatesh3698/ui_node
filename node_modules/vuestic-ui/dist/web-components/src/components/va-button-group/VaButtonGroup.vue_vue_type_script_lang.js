import { defineComponent, computed, useCssVars } from "vue";
import { o as omit } from "../../../vendor.js";
import { V as VaButton } from "../va-button/index.js";
import { V as VaConfig } from "../va-config/VaConfig.js";
import { e as extractComponentProps } from "../../utils/component-options/extract-component-options.js";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
import { u as useColors } from "../../composables/useColors.js";
import { u as useTextColor } from "../../composables/useTextColor.js";
import { f as filterComponentProps } from "../../utils/component-options/filter-props.js";
import { u as useBem } from "../../composables/useBem.js";
const VaButtonProps = omit(extractComponentProps(VaButton), ["block", "gradient"]);
const __default__ = defineComponent({
  name: "VaButtonGroup",
  components: { VaConfig },
  props: {
    ...VaButtonProps,
    ...useComponentPresetProp,
    grow: { type: Boolean, default: false },
    gradient: { type: Boolean, default: false }
  },
  setup: (props) => {
    const { getColor, getGradientBackground } = useColors();
    const colorComputed = computed(() => getColor(props.color));
    const { textColorComputed } = useTextColor(colorComputed);
    const filteredProps = filterComponentProps(VaButtonProps);
    const buttonConfig = computed(() => ({
      VaButton: {
        ...filteredProps.value,
        ...props.gradient && {
          color: "#00000000",
          textColor: textColorComputed.value
        }
      }
    }));
    const computedClass = useBem("va-button-group", () => ({
      square: !props.round,
      grow: props.grow,
      small: props.size === "small",
      large: props.size === "large"
    }));
    const backgroundColor = computed(
      () => props.gradient ? getGradientBackground(colorComputed.value) : "transparent"
    );
    return { buttonConfig, computedClass, backgroundColor };
  }
});
const __injectCSSVars__ = () => {
  useCssVars((_ctx) => ({
    "0678d9c8": _ctx.backgroundColor
  }));
};
const __setup__ = __default__.setup;
__default__.setup = __setup__ ? (props, ctx) => {
  __injectCSSVars__();
  return __setup__(props, ctx);
} : __injectCSSVars__;
export {
  __default__ as _
};
//# sourceMappingURL=VaButtonGroup.vue_vue_type_script_lang.js.map
