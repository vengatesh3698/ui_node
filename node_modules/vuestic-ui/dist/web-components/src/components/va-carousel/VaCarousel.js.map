{"version":3,"file":"VaCarousel.js","sources":["../../../../../src/components/va-carousel/VaCarousel.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-carousel\"\n    :class=\"{\n      'va-carousel--vertical': $props.vertical,\n      [`va-carousel--${$props.effect}`]: true\n    }\"\n    :style=\"{ height: ratio ? 'auto' : height }\"\n    role=\"region\"\n    :aria-label=\"tp($props.ariaLabel)\"\n  >\n    <template v-if=\"$props.arrows\">\n      <div\n        v-if=\"doShowPrevButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--left\"\n        @click=\"prev\"\n        @keydown.enter.stop=\"prev\"\n      >\n        <slot name=\"prev-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'va-arrow-up' : 'va-arrow-left'\"\n              :aria-label=\"tp($props.ariaPreviousLabel)\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n      <div\n        v-if=\"doShowNextButton\"\n        class=\"va-carousel__arrow va-carousel__arrow--right\"\n        @click=\"next\"\n        @keydown.enter.stop=\"next\"\n      >\n        <slot name=\"next-arrow\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :color=\"hover ? computedHoverColor : computedColor\"\n              :icon=\"vertical ? 'va-arrow-down' : 'va-arrow-right'\"\n              :aria-label=\"tp($props.ariaNextLabel)\"\n            />\n          </va-hover>\n        </slot>\n      </div>\n    </template>\n\n    <div class=\"va-carousel__indicators\" v-if=\"$props.indicators\">\n      <div\n        class=\"va-carousel__indicator\"\n        v-for=\"(item, index) in $props.items\" :key=\"index\"\n        :class=\"{ 'va-carousel__indicator--active': index === modelValue }\"\n        v-bind=\"indicatorTrigger === 'hover' ? { onmouseover: () => goTo(index) } : { onclick: () => goTo(index) }\"\n      >\n        <slot name=\"indicator\" v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n          <va-hover #default=\"{ hover }\" stateful>\n            <va-button\n              :aria-label=\"tp($props.ariaGoToSlideLabel, { index: index + 1 })\"\n              round\n              :color=\"isCurrentSlide(index) ? computedActiveColor : (hover ? computedHoverColor : computedColor)\"\n            >\n              {{ index + 1 }}\n            </va-button>\n          </va-hover>\n        </slot>\n      </div>\n    </div>\n\n    <div class=\"va-carousel__content\">\n      <div\n        ref=\"slidesContainer\"\n        class=\"va-carousel__slides\"\n        :style=\"computedSlidesStyle\"\n        role=\"list\"\n      >\n        <div\n          v-for=\"(item, index) in slides\" :key=\"item\"\n          role=\"listitem\"\n          class=\"va-carousel__slide\"\n          :style=\"slideStyleComputed\"\n          :aria-hidden=\"!isCurrentSlide(index)\"\n          :aria-current=\"isCurrentSlide(index)\"\n          :aria-label=\"tp($props.ariaSlideOfLabel, { index: index + 1, length: slides.length })\"\n        >\n          <slot v-bind=\"{ item, index, goTo, isActive: isCurrentSlide(index) }\">\n            <va-image\n              v-bind=\"vaImageProps\"\n              :src=\"isObjectSlides ? item.src : item\"\n              :alt=\"isObjectSlides ? item.alt : ''\"\n              :draggable=\"false\"\n            />\n          </slot>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, shallowRef, PropType, computed } from 'vue'\nimport { useCarousel } from './hooks/useCarousel'\nimport { useCarouselAnimation } from './hooks/useCarouselAnimation'\nimport { useCarouselColor } from './hooks/useCarouselColors'\nimport {\n  useStateful, useStatefulProps, useStatefulEmits,\n  useSwipe, useSwipeProps, useComponentPresetProp,\n  useTranslation,\n} from '../../composables'\n\nimport { VaImage } from '../va-image'\nimport { VaButton } from '../va-button'\nimport { VaHover } from '../va-hover'\n\nimport type { SwipeState } from '../../composables'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nconst VaImageProps = extractComponentProps(VaImage, ['src', 'alt'])\n\nexport default defineComponent({\n  name: 'VaCarousel',\n\n  components: { VaImage, VaButton, VaHover },\n\n  props: {\n    ...useSwipeProps,\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...VaImageProps,\n\n    modelValue: { type: Number, default: 0 },\n    items: { type: Array as PropType<any[]>, required: true },\n\n    // Animations\n    autoscroll: { type: Boolean, default: false },\n    autoscrollInterval: { type: Number, default: 1000 },\n    autoscrollPauseDuration: { type: Number, default: 2000 },\n    infinite: { type: Boolean, default: false },\n    fadeKeyframe: { type: String, default: 'va-carousel-fade-appear 1s' },\n\n    // Visual\n    arrows: { type: Boolean, default: true },\n    indicators: { type: Boolean, default: true },\n    indicatorTrigger: {\n      type: String as PropType<'click' | 'hover'>,\n      default: 'click',\n      validator: (value: string) => ['click', 'hover'].includes(value),\n    },\n    vertical: { type: Boolean, default: false },\n    height: { type: String, default: '300px' },\n    effect: {\n      type: String as PropType<'fade' | 'transition'>,\n      default: 'transition',\n      validator: (value: string) => ['fade', 'transition'].includes(value),\n    },\n    color: { type: String, default: 'primary' },\n    ratio: { type: Number },\n\n    ariaLabel: { type: String, default: '$t:carousel' },\n    ariaPreviousLabel: { type: String, default: '$t:goPreviousSlide' },\n    ariaNextLabel: { type: String, default: '$t:goNextSlide' },\n    ariaGoToSlideLabel: { type: String, default: '$t:goSlide' },\n    ariaSlideOfLabel: { type: String, default: '$t:slideOf' },\n  },\n\n  emits: [...useStatefulEmits],\n\n  setup (props, { emit }) {\n    const { valueComputed: currentSlide } = useStateful(props, emit, 'modelValue', { defaultValue: 0 })\n\n    const {\n      goTo, next, prev,\n      doShowNextButton, doShowPrevButton,\n    } = useCarousel(props, currentSlide)\n\n    const { withPause, computedSlidesStyle, slides } = useCarouselAnimation(props, currentSlide)\n    const isObjectSlides = computed(() => {\n      return props.items.length && props.items.every((el) => !!el && typeof el === 'object' && !!el?.src)\n    })\n    const isCurrentSlide = (index: number) => index === currentSlide.value\n\n    const slideStyleComputed = computed(() => ({\n      animation: props.effect === 'fade' ? 'fadeKeyframe' : undefined,\n    }))\n\n    // swiping\n    const slidesContainer = shallowRef<HTMLElement>()\n    const onSwipe = (state: SwipeState) => {\n      switch (state.direction) {\n        case 'right':\n        case 'up':\n          doShowPrevButton.value && prev()\n          break\n        case 'left':\n        case 'down':\n          doShowNextButton.value && next()\n      }\n    }\n    useSwipe(props, slidesContainer, onSwipe)\n\n    return {\n      vaImageProps: filterComponentProps(VaImageProps),\n      doShowNextButton,\n      doShowPrevButton,\n      computedSlidesStyle,\n      slideStyleComputed,\n      goTo: withPause(goTo),\n      prev: withPause(prev),\n      next: withPause(next),\n      slides,\n      isObjectSlides,\n      isCurrentSlide,\n      ...useCarouselColor(),\n      ...useTranslation(),\n      slidesContainer,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"./_variables.scss\";\n\n@keyframes va-carousel-fade-appear {\n  0% {\n    opacity: 0;\n  }\n\n  100% {\n    opacity: 1;\n  }\n}\n\n.va-carousel {\n  display: flex;\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  min-height: var(--va-carousel-min-height);\n  background: var(--va-carousel-background);\n  box-shadow: var(--va-carousel-box-shadow);\n  border-radius: var(--va-carousel-border-radius);\n  position: relative;\n  overflow: hidden;\n\n  &__content {\n    flex: 1;\n    width: 100%;\n    white-space: nowrap;\n  }\n\n  &__slides {\n    width: 100%;\n    height: 100%;\n    transition: var(--va-carousel-slides-transition);\n  }\n\n  &__slide {\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  &__indicators {\n    width: 100%;\n    position: absolute;\n    bottom: var(--va-carousel-padding);\n    display: flex;\n    justify-content: center;\n    z-index: 2;\n    overflow-x: auto;\n    left: 50%;\n    transform: translateX(-50%);\n\n    @include va-scroll();\n\n    & > * {\n      margin: 0 var(--va-carousel-indicators-gap);\n    }\n  }\n\n  &__arrow {\n    z-index: 1;\n    width: max-content;\n    height: max-content;\n\n    &--right {\n      right: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    &--left {\n      left: var(--va-carousel-padding);\n      position: absolute;\n      top: 50%;\n      transform: translateY(-50%);\n    }\n  }\n\n  &--vertical {\n    .va-carousel {\n      &__slide {\n        display: flex;\n      }\n\n      &__arrow {\n        z-index: 1;\n\n        &--right {\n          bottom: var(--va-carousel-padding);\n          top: auto;\n          left: 50%;\n          transform: translateX(-50%);\n        }\n\n        &--left {\n          top: var(--va-carousel-padding);\n          left: 50%;\n          transform: translateX(-50%);\n        }\n      }\n\n      &__indicators {\n        left: var(--va-carousel-padding);\n        flex-direction: column;\n        width: auto;\n        height: 100%;\n        top: 50%;\n        transform: translateY(-50%);\n        overflow-x: hidden;\n        overflow-y: auto;\n\n        & > * {\n          margin: var(--va-carousel-indicators-gap) 0;\n        }\n      }\n    }\n  }\n\n  .va-image {\n    height: 100%;\n    width: 100%;\n  }\n\n  .va-button {\n    @include keyboard-focus-outline($offset: -2px);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_normalizeClass","_normalizeStyle","_openBlock","_createElementBlock","_Fragment","_withKeys","_withModifiers","_renderSlot","_createVNode","_withCtx","_createCommentVNode","_renderList","_mergeProps","_normalizeProps","_guardReactiveProps","_createElementVNode"],"mappings":"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"}