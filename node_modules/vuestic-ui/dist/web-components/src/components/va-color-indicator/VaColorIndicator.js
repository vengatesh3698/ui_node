import { _ as __default__ } from "./VaColorIndicator.vue_vue_type_script_lang.js";
import { openBlock, createElementBlock, mergeProps, withKeys, toHandlers, createElementVNode, normalizeStyle } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.js";
const _style_0 = ".va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: var(--5006ce16);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: content-box;\n}\n.va-color-indicator__core {\n  border-radius: var(--5006ce16);\n  height: 1rem;\n  width: 1rem;\n}\n.va-color-indicator--selected {\n  background-color: var(--va-primary);\n  border-color: var(--va-primary);\n}\n.va-color-indicator--on-keyboard-focus {\n  outline: 2px solid var(--va-focus) !important;\n  border-radius: var(--5006ce16);\n}";
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", mergeProps({
    class: ["va-color-indicator", _ctx.computedClass],
    style: _ctx.computedStyle,
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args)),
    onKeydown: [
      _cache[1] || (_cache[1] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), ["enter"])),
      _cache[2] || (_cache[2] = withKeys((...args) => _ctx.toggleModelValue && _ctx.toggleModelValue(...args), ["space"]))
    ]
  }, toHandlers(_ctx.keyboardFocusListeners, true)), [
    createElementVNode("div", {
      class: "va-color-indicator__core",
      style: normalizeStyle(_ctx.computedStyle)
    }, null, 4)
  ], 16);
}
const _VaColorIndicatort = /* @__PURE__ */ _export_sfc(__default__, [["render", _sfc_render], ["styles", [_style_0]]]);
export {
  _VaColorIndicatort as _
};
//# sourceMappingURL=VaColorIndicator.js.map
