{"version":3,"file":"VaColorIndicator.js","sources":["../../../../../src/components/va-color-indicator/VaColorIndicator.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @click=\"toggleModelValue\"\n    @keydown.enter=\"toggleModelValue\"\n    @keydown.space=\"toggleModelValue\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  useColors,\n  useStateful,\n  useStatefulProps,\n  useStatefulEmits,\n  useKeyboardOnlyFocus,\n  useComponentPresetProp,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n    size: { type: String, default: '1rem' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const colorComputed = computed(() => getColor(props.color))\n    const borderRadiusComputed = computed(() => props.square ? '0px' : '50%')\n\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: v-bind(borderRadiusComputed);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: content-box;\n\n  &__core {\n    border-radius: v-bind(borderRadiusComputed);\n    height: 1rem;\n    width: 1rem;\n  }\n\n  &--selected {\n    background-color: var(--va-primary);\n    border-color: var(--va-primary);\n  }\n\n  &--on-keyboard-focus {\n    @include focus-outline(v-bind(borderRadiusComputed));\n  }\n}\n</style>\n"],"names":["_openBlock","_createElementBlock","_mergeProps","_withKeys","_toHandlers","_createElementVNode"],"mappings":";;;;AAES,SAAA,YAAC,cACE,QAAa,QAAA,OAAA,UAAA;AACf,SAAAA,UAAe,GAAAC,mBAAA,OAAAC,WAAA;AAAA,IACpB,OAAK,CAAA,sBAAA,KAAA,aAAA;AAAA,IACL,OAAO,KAAA;AAAA,IAAQ,SAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,IAAA,SAAA,KAAA,oBAAA,KAAA,iBAAA,GAAA,IAAA;AAAA,IAAA,WAAA;AAAA;MAEhB,OAAA,CAAA,MAA6B,OAAD,CAAA,IAAAC,SAAA,IAAA,SAAA,KAAA,oBAAA,KAAA,iBAAA,GAAA,IAAA,GAAA,CAAA,OAAA,CAAA;AAAA,IAE5B;AAAA,EAAA,GAAAC,WACQ,KAA0B,wBAAA,IAAA,CAAA,GAAA;AAAA,IAAAC,mBAC1B,OAAE;AAAA,MAAA,OAAA;AAAA;;;;;"}