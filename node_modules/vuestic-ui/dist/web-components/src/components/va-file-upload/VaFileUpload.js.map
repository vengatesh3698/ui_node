{"version":3,"file":"VaFileUpload.js","sources":["../../../../../src/components/va-file-upload/VaFileUpload.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-file-upload\"\n    :class=\"computedClasses\"\n    :style=\"computedStyle\"\n  >\n    <slot>\n      <div class=\"va-file-upload__field\">\n        <div\n          v-if=\"dropzone\"\n          class=\"va-file-upload__field__text\"\n        >\n          {{ tp(dropZoneText) }}\n        </div>\n        <va-button\n          class=\"va-file-upload__field__button\"\n          :disabled=\"disabled\"\n          :aria-disabled=\"disabled\"\n          :color=\"colorComputed\"\n          :style=\"{ 'pointer-events': dropzoneHighlight ? 'none' : undefined }\"\n          @change=\"changeFieldValue\"\n          @click=\"callFileDialogue\"\n        >\n          {{ tp(uploadButtonText) }}\n        </va-button>\n      </div>\n    </slot>\n\n    <input\n      ref=\"fileInputRef\"\n      type=\"file\"\n      class=\"va-file-upload__field__input\"\n      :tabindex=\"-1\"\n      aria-hidden=\"true\"\n      :accept=\"fileTypes\"\n      :multiple=\"type !== 'single'\"\n      :disabled=\"disabled\"\n      @change=\"changeFieldValue\"\n      @dragenter=\"dropzoneHighlight = true\"\n      @dragleave=\"dropzoneHighlight = false\"\n    >\n    <va-file-upload-list\n      v-if=\"files.length && !$props.hideFileList\"\n      v-bind=\"fileUploadListProps\"\n      :type=\"type\"\n      :files=\"files\"\n      :color=\"colorComputed\"\n      @remove=\"removeFile\"\n      @removeSingle=\"removeSingleFile\"\n    />\n    <va-modal\n      v-model=\"modal\"\n      hide-default-actions\n      title=\"File validation\"\n      message=\"File type is incorrect!\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, onMounted, ref, toRef, shallowRef, provide, PropType } from 'vue'\n\nimport { useColors, useComponentPresetProp, useBem, useTranslation } from '../../composables'\n\nimport { VaFileUploadKey, VaFile } from './types'\n\nimport { VaButton, VaModal } from '../index'\nimport { VaFileUploadList } from './VaFileUploadList'\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nconst VaFileUploadListProps = extractComponentProps(VaFileUploadList)\n\nexport default defineComponent({\n  name: 'VaFileUpload',\n\n  components: {\n    VaModal,\n    VaButton,\n    VaFileUploadList,\n  },\n\n  props: {\n    ...useComponentPresetProp,\n    ...VaFileUploadListProps,\n    fileTypes: { type: String, default: '' },\n    dropzone: { type: Boolean, default: false },\n    hideFileList: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    disabled: { type: Boolean, default: false },\n    undo: { type: Boolean, default: false },\n    undoDuration: { type: Number, default: 3000 },\n    undoButtonText: { type: String, default: '$t:undo' },\n    dropZoneText: { type: String, default: '$t:dropzone' },\n    uploadButtonText: { type: String, default: '$t:uploadFile' },\n    deletedFileMessage: { type: String, default: '$t:fileDeleted' },\n    modelValue: {\n      type: [Object, Array] as PropType<VaFile | VaFile[]>,\n      default: () => [],\n    },\n    type: {\n      type: String as PropType<'list' | 'gallery' | 'single'>,\n      default: 'list',\n      validator: (value: string) => ['list', 'gallery', 'single'].includes(value),\n    },\n  },\n\n  emits: ['update:modelValue', 'file-removed', 'file-added'],\n\n  setup (props, { emit }) {\n    const fileInputRef = shallowRef<HTMLInputElement>()\n\n    const modal = ref(false)\n    const dropzoneHighlight = ref(false)\n\n    const { getColor, shiftHSLAColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({\n      backgroundColor: props.dropzone\n        ? shiftHSLAColor(colorComputed.value, { a: dropzoneHighlight.value ? -0.82 : -0.92 })\n        : 'transparent',\n    }))\n\n    const computedClasses = useBem('va-file-upload', () => ({\n      dropzone: props.dropzone,\n      disabled: props.disabled,\n    }))\n\n    const files = computed<VaFile[]>({\n      get () { return Array.isArray(props.modelValue) ? props.modelValue : [props.modelValue] },\n      set (files) {\n        if (props.type === 'single') {\n          emit('update:modelValue', files[0])\n        } else {\n          emit('update:modelValue', files)\n        }\n      },\n    })\n\n    const validateFiles = (files: VaFile[]) => files.filter((file) => {\n      const fileName = file.name || file.url\n      if (!fileName) { return false }\n      if (file.url) { return true }\n\n      const MIMETypes = ['audio/*', 'video/*', 'image/*']\n      const isContainedMIMEType = MIMETypes.find((t) => props.fileTypes.includes(t))\n\n      if (isContainedMIMEType) {\n        // Do not validate MIMEType because there is too much to validate.\n        return true\n      }\n\n      const extension = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase()\n\n      const isCorrectExt = props.fileTypes.includes(extension)\n      if (!isCorrectExt) { modal.value = true }\n\n      return isCorrectExt\n    })\n\n    const uploadFile = (e: Event | DragEvent) => {\n      const f = (e.target as HTMLInputElement)?.files || (e as DragEvent).dataTransfer?.files\n\n      if (!f) { return }\n\n      const validatedFiles = props.fileTypes ? validateFiles(Array.from(f)) : f\n\n      files.value = props.type === 'single' ? (validatedFiles as VaFile[]) : [...files.value, ...validatedFiles]\n\n      emit('file-added', validatedFiles)\n    }\n\n    const changeFieldValue = (e: Event | DragEvent) => {\n      uploadFile(e)\n\n      if (fileInputRef.value) {\n        fileInputRef.value.value = ''\n      }\n    }\n\n    const removeFile = (index: number) => {\n      if (index in files.value) {\n        const removedFile = files.value[index]\n        files.value = files.value.filter((item, idx) => idx !== index)\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const removeSingleFile = () => {\n      if (files.value.length > 0) {\n        const removedFile = files.value[0]\n        files.value = []\n        emit('file-removed', removedFile)\n      }\n    }\n\n    const callFileDialogue = () => {\n      if (fileInputRef.value) {\n        fileInputRef.value.click()\n      }\n    }\n\n    onMounted(() => {\n      if (Array.isArray(files.value)) {\n        files.value = validateFiles(files.value)\n      }\n    })\n\n    const { tp } = useTranslation()\n\n    provide(VaFileUploadKey, {\n      undo: toRef(props, 'undo'),\n      disabled: toRef(props, 'disabled'),\n      undoDuration: toRef(props, 'undoDuration'),\n      undoButtonText: computed(() => tp(props.undoButtonText)),\n      deletedFileMessage: computed(() => tp(props.deletedFileMessage)),\n    })\n\n    return {\n      fileUploadListProps: filterComponentProps(VaFileUploadListProps),\n      modal,\n      dropzoneHighlight,\n      fileInputRef,\n      colorComputed,\n      computedStyle,\n      computedClasses,\n      files,\n      tp,\n      uploadFile,\n      changeFieldValue,\n      removeFile,\n      removeSingleFile,\n      callFileDialogue,\n    }\n  },\n})\n</script>\n\n<style lang='scss'>\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-file-upload {\n  position: var(--va-file-upload-position);\n  font-family: var(--va-font-family);\n  margin: var(--va-file-upload-margin);\n\n  .va-file-upload-list {\n    margin-top: var(--va-file-upload-list-margin-top);\n  }\n\n  &__field {\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    position: relative;\n\n    &__button {\n      margin: var(--va-file-upload-dropzone-field-button-margin);\n      z-index: 10;\n    }\n\n    &__text {\n      padding-right: var(--va-file-upload-dropzone-field-text-pr);\n    }\n\n    &__input {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      width: 100%;\n      color: transparent;\n      opacity: 0;\n      cursor: pointer;\n\n      &::-webkit-file-upload-button {\n        cursor: pointer;\n      }\n    }\n  }\n\n  &--dropzone {\n    background-color: var(--va-file-upload-dropzone-background-color);\n    overflow: hidden;\n    border-radius: var(--va-file-upload-dropzone-border-radius);\n    cursor: var(--va-file-upload-dropzone-cursor);\n\n    .va-file-upload__field {\n      justify-content: center;\n      display: flex;\n      align-items: center;\n      padding: var(--va-file-upload-dropzone-field-padding);\n      transition: height 0.2s;\n      overflow: visible;\n      flex-wrap: wrap;\n\n      @include media-breakpoint-down(sm) {\n        flex-direction: column;\n        padding: var(--va-file-upload-dropzone-field-padding-sm);\n\n        &__text {\n          padding: var(--va-file-upload-dropzone-text-padding-sm);\n          text-align: center;\n        }\n      }\n    }\n\n    .va-file-upload-list {\n      padding: var(--va-file-upload-dropzone-list-padding);\n      margin-top: 0;\n    }\n  }\n\n  &--disabled {\n    .va-file-upload__field__input {\n      cursor: default;\n\n      &::-webkit-file-upload-button {\n        cursor: inherit;\n      }\n    }\n  }\n\n  .va-button {\n    @include keyboard-focus-outline($offset: -2px);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_normalizeClass","_normalizeStyle","_createElementVNode","_createCommentVNode","_createVNode","_createBlock","_mergeProps"],"mappings":";;;;;MAUU,aAAM;AAAA,EAAA,KAAA;AAAA;;;;;;8BATdA,iBAuDM,UAAA;AApDE,SAAAC,UAAA,GAAAC,mBAAE,OAAa;AAAA,IAAA,OAAAC,eAAA,CAAA,kBAAA,KAAA,eAAA,CAAA;AAAA,IAErB,OAoBOC,eAAA,KAAA,aAAA;AAAA,EAAA,GAAA;AAAA,eAjBK,KAAQ,QAAA,WAAA,CAAA,GAAA,MAAA;AAAA,MADhBC,mBAAA,OAAA,YAAA;AAAA,QAMA,KAAA,YAAAJ,sGACEK,mBAAM,IAAA,IAAA;AAAA,QAAAC,YACK,sBAAQ;AAAA,UAClB,OAAA;AAAA,UACA,UAAO,KAAA;AAAA,UACP,iBAAK,KAAA;AAAA,UACL,OAAQ,KAAA;AAAA,UACR,OAAKH,eAAE,EAAgB,kBAAA,KAAA,oBAAA,SAAA,QAAA;AAAA,UAAA,UAAA,KAAA;AAAA;;;;;;;MAO9B,CAAA;AAAA,IAAA,CAAA;AAAA,IAEaC,mBAAA,SAAA;AAAA,MACX,KAAK;AAAA,MACJ,MAAA;AAAA,MACD,OAAA;AAAA,MACC,UAAQ;AAAA,MACR,eAAU;AAAA,MACV,QAAQ,KAAE;AAAA,MACV,UAAM,KAAA,SAAA;AAAA,MACN,UAAS,KAAA;AAAA,MACT,UAAA,OAAS,gCAAE,KAAiB,oBAAA,KAAA,iBAAA,GAAA,IAAA;AAAA,MAAA,aAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,oBAAA;AAAA,MAGvB,aAAM,OAAM,CAAK,MAAA,OAAO,CAAY,IAAA,CAAA,WAAA,KAAA,oBAAA;AAAA,IAAA,GAD5C,MAAA,IAAA,UAAA;AAAA,IAGG,KAAA,MAAM,UAAI,CAAA,KAAA,OAAA,gBAAAJ,UAAA,GACEO,YAAA,gCAAAC,WAAA,EAAA,KAAA,EAAA,GAAA,KAAA,qBAAA;AAAA,MACZ,MAAK,KAAE;AAAA,MACP,OAAQ,KAAA;AAAA,MACR,OAAA,KAAA;AAAA,MAAA,UAAA,KAAA;AAAA;IAEH,CAAA,GAAA,MAKE,IAJc,CAAA,QAAA,SAAA,SAAA,YAAA,gBAAA,CAAA,KAAAH,mBAAA,IAAA,IAAA;AAAA,IAAAC,YAAA,qBAAA;AAAA,MACd,YAAA,KAAA;AAAA,MACA,uBAAM,OAAiB,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,QAAA;AAAA,MACvB,wBAAQ;AAAA,MAAA,OAAA;AAAA;;;;;"}