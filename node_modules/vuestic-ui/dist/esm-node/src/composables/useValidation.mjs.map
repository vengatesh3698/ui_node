{"version":3,"file":"useValidation.mjs","sources":["../../../../src/composables/useValidation.ts"],"sourcesContent":["import {\n  watch,\n  computed,\n  PropType,\n  ExtractPropTypes,\n  nextTick,\n  type WritableComputedRef,\n  ref,\n  toRef,\n} from 'vue'\nimport flatten from 'lodash/flatten.js'\nimport isFunction from 'lodash/isFunction.js'\nimport isString from 'lodash/isString.js'\n\nimport { useSyncProp } from './useSyncProp'\nimport { useFocus } from './useFocus'\nimport { useFormChild } from './useForm'\n\nexport type ValidationRule<V extends any = any> = ((v: V) => any | string) | Promise<((v: V) => any | string)>\n\ntype UseValidationOptions = {\n  reset: () => void\n  focus: () => void\n  value: WritableComputedRef<any>\n}\n\nconst normalizeValidationRules = (rules: string | ValidationRule[] = [], callArguments: unknown = null) => {\n  if (isString(rules)) { rules = [rules] as any }\n\n  return (rules as ValidationRule[])\n    .map((rule) => isFunction(rule) ? rule(callArguments) : rule)\n}\n\nexport const useValidationProps = {\n  name: { type: String, default: undefined },\n  modelValue: { required: false },\n  error: { type: Boolean, default: undefined },\n  errorMessages: { type: [Array, String] as PropType<string[] | string>, default: undefined },\n  errorCount: { type: [String, Number], default: 1 },\n  rules: { type: Array as PropType<ValidationRule<any>[]>, default: () => [] as any },\n  success: { type: Boolean, default: false },\n  messages: { type: [Array, String] as PropType<string[] | string>, default: () => [] },\n  immediateValidation: { type: Boolean, default: false },\n}\n\nexport type ValidationProps<V extends any> = typeof useValidationProps & {\n  modelValue: { type: PropType<V> }\n  rules: { type: PropType<ValidationRule<V>[]> }\n}\n\nexport const useValidationEmits = ['update:error', 'update:errorMessages'] as const\n\nconst isPromise = (value: any): value is Promise<any> => {\n  return typeof value === 'object' && typeof value.then === 'function'\n}\n\nexport const useValidation = <V, P extends ExtractPropTypes<typeof useValidationProps>>(\n  props: P,\n  emit: (event: any, ...args: any[]) => void,\n  options: UseValidationOptions,\n) => {\n  const { reset, focus } = options\n  const { isFocused, onFocus, onBlur } = useFocus()\n\n  const [computedError] = useSyncProp('error', props, emit, false as boolean)\n  const [computedErrorMessages] = useSyncProp('errorMessages', props, emit, [] as string[])\n  const isLoading = ref(false)\n\n  const validationAriaAttributes = computed(() => ({\n    'aria-invalid': !!computedErrorMessages.value.length,\n    'aria-errormessage': typeof computedErrorMessages.value === 'string'\n      ? computedErrorMessages.value\n      : computedErrorMessages.value.join(', '),\n  }))\n\n  const resetValidation = () => {\n    computedError.value = false\n    computedErrorMessages.value = []\n  }\n\n  const processResults = (results: any[]) => {\n    let error = false\n    let errorMessages: string[] = []\n\n    results.forEach((result: any) => {\n      if (isString(result)) {\n        errorMessages = [...errorMessages, result]\n        error = true\n      } else if (result === false) {\n        error = true\n      } // Ignore if result is Promise\n    })\n\n    computedErrorMessages.value = errorMessages\n    computedError.value = error\n\n    return !error\n  }\n\n  const validateAsync = async (): Promise<boolean> => {\n    if (!props.rules || !props.rules.length) {\n      return true\n    }\n\n    const results = normalizeValidationRules(flatten(props.rules), options.value.value)\n    const asyncPromiseResults = results.filter((result) => isPromise(result))\n    const syncRules = results.filter((result) => !isPromise(result))\n\n    if (!asyncPromiseResults.length) { return processResults(syncRules) }\n\n    isLoading.value = true\n    return Promise.all(asyncPromiseResults).then((asyncResults) => {\n      isLoading.value = false\n      return processResults([...syncRules, ...asyncResults])\n    })\n  }\n\n  const validate = (): boolean => {\n    if (!props.rules || !props.rules.length) {\n      return true\n    }\n\n    const rules = flatten(props.rules)\n\n    const results = normalizeValidationRules(rules, options.value.value)\n    const asyncPromiseResults = results.filter((result) => isPromise(result))\n    const syncRules = results.filter((result) => !isPromise(result))\n    const isSyncedError = syncRules.some((result: string | boolean) => isString(result) ? result : result === false)\n\n    // Prevent async rules from being executed if sync rules are invalid\n    if (asyncPromiseResults.length && !isSyncedError) {\n      isLoading.value = true\n      Promise.all(asyncPromiseResults).then((asyncResults) => {\n        processResults([...syncRules, ...asyncResults]) // Process sync rules and async rules at the same time\n        isLoading.value = false\n      })\n      return isSyncedError\n    }\n\n    return processResults(syncRules)\n  }\n\n  watch(isFocused, (newVal) => !newVal && validate())\n\n  let canValidate = true\n  const withoutValidation = (cb: () => any): void => {\n    canValidate = false\n    cb()\n    // NextTick because we update props in the same tick, but they are updated in the next one\n    nextTick(() => { canValidate = true })\n  }\n  watch(\n    () => props.modelValue,\n    () => {\n      if (!canValidate) { return }\n\n      return validate()\n    },\n    { immediate: props.immediateValidation },\n  )\n\n  const {\n    doShowErrorMessages,\n    doShowError,\n    doShowLoading,\n  } = useFormChild({\n    isValid: computed(() => !computedError.value),\n    isLoading: isLoading,\n    errorMessages: computedErrorMessages,\n    validate,\n    validateAsync,\n    resetValidation,\n    focus,\n    reset,\n    value: computed(() => options.value || props.modelValue),\n    name: toRef(props, 'name'),\n  })\n\n  return {\n    computedError: computed(() => doShowError.value ? computedError.value : false),\n    computedErrorMessages: computed(() => doShowErrorMessages.value ? computedErrorMessages.value : []),\n    isLoading: computed(() => doShowLoading.value ? isLoading.value : false),\n    listeners: { onFocus, onBlur },\n    validate,\n    resetValidation,\n    withoutValidation,\n    validationAriaAttributes,\n  }\n}\n"],"names":[],"mappings":"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"}