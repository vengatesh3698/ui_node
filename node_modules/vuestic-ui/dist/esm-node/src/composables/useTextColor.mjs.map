{"version":3,"file":"useTextColor.mjs","sources":["../../../../src/composables/useTextColor.ts"],"sourcesContent":["import { computed, getCurrentInstance, Ref, unref } from 'vue'\n\nimport { useColors } from './useColors'\n\ntype PropsType = {\n  textColor: string,\n  color?: string\n}\n\n/**\n * @param componentColor component color. By default `props.color`.\n * @param isTransparent if transparent will return component color as text color.\n * @returns Computed text color based on component's color if `props.textColor` if provided.\n */\nexport const useTextColor = (componentColor?: Ref<string> | string | undefined, isTransparent: boolean | Ref<boolean> = false) => {\n  const { props } = getCurrentInstance() as unknown as { props: PropsType }\n  const { getColor, getTextColor } = useColors()\n\n  const textColorComputed = computed(() => {\n    if (props.textColor) { return getColor(props.textColor) }\n\n    const componentColorHex = getColor(unref(componentColor) || props.color)\n    return unref(isTransparent) ? componentColorHex : getColor(getTextColor(componentColorHex))\n  })\n\n  return { textColorComputed }\n}\n"],"names":[],"mappings":";;AAcO,MAAM,eAAe,CAAC,gBAAmD,gBAAwC,UAAU;AAC1H,QAAA,EAAE,UAAU;AAClB,QAAM,EAAE,UAAU,aAAa,IAAI,UAAU;AAEvC,QAAA,oBAAoB,SAAS,MAAM;AACvC,QAAI,MAAM,WAAW;AAAS,aAAA,SAAS,MAAM,SAAS;AAAA,IAAE;AAExD,UAAM,oBAAoB,SAAS,MAAM,cAAc,KAAK,MAAM,KAAK;AACvE,WAAO,MAAM,aAAa,IAAI,oBAAoB,SAAS,aAAa,iBAAiB,CAAC;AAAA,EAAA,CAC3F;AAED,SAAO,EAAE,kBAAkB;AAC7B;"}