import { ref, watch, onMounted, onBeforeUnmount, unref } from "vue";
const useResizeObserver = (elementsList, cb) => {
  const resizeObserver = ref();
  const observeAll = (elementsList2) => {
    elementsList2.forEach((element) => {
      var _a;
      const unrefedElement = unref(element);
      unrefedElement && ((_a = resizeObserver.value) == null ? void 0 : _a.observe(unrefedElement));
    });
  };
  watch(elementsList, (newValue) => {
    var _a;
    (_a = resizeObserver.value) == null ? void 0 : _a.disconnect();
    observeAll(newValue);
  });
  onMounted(() => {
    resizeObserver.value = new ResizeObserver(cb);
    observeAll(elementsList);
  });
  onBeforeUnmount(() => {
    var _a;
    return (_a = resizeObserver.value) == null ? void 0 : _a.disconnect();
  });
  return resizeObserver;
};
export {
  useResizeObserver as u
};
//# sourceMappingURL=useResizeObserver.mjs.map
