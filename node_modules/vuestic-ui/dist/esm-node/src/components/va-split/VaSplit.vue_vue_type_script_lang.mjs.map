{"version":3,"file":"VaSplit.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-split/VaSplit.vue"],"sourcesContent":["<template>\n  <section\n    ref=\"splitPanelsContainer\"\n    class=\"va-split\"\n    :class=\"classComputed\"\n    :aria-label=\"tp($props.ariaLabel)\"\n  >\n    <div\n      class=\"va-split__panel\"\n      :style=\"getPanelStyle('start')\"\n    >\n      <slot name=\"start\" v-bind=\"{ containerSize }\" />\n    </div>\n    <div class=\"va-split__dragger\">\n      <div\n        class=\"va-split__dragger__overlay\"\n        :style=\"draggerStyleComputed\"\n        @mousedown.prevent=\"startDragging\"\n        @touchstart.prevent=\"startDragging\"\n        @dblclick.prevent=\"maximizePanel\"\n        @contextmenu.prevent\n        @dragstart.prevent\n      >\n        <slot name=\"grabber\">\n          <va-divider\n            class=\"va-split__dragger__default\"\n            :vertical=\"!$props.vertical\"\n          />\n        </slot>\n      </div>\n    </div>\n    <div\n      class=\"va-split__panel\"\n      :style=\"getPanelStyle('end')\"\n    >\n      <slot name=\"end\" v-bind=\"{ containerSize }\" />\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, shallowRef, computed, watch, onMounted } from 'vue'\nimport isString from 'lodash/isString.js'\nimport isNumber from 'lodash/isNumber.js'\nimport clamp from 'lodash/clamp.js'\n\nimport {\n  useBem,\n  useComponentPresetProp,\n  useStateful, useStatefulEmits, useStatefulProps,\n  useResizeObserver,\n  useTranslation,\n} from '../../composables'\nimport { useSplitDragger, useSplitDraggerProps } from './useSplitDragger'\n\nimport { warn } from '../../utils/console'\n\nimport { SplitLimit, SnappingMark } from './types'\n\nimport { VaDivider } from '../va-divider'\n\nexport default defineComponent({\n  name: 'VaSplit',\n\n  components: { VaDivider },\n\n  props: {\n    ...useComponentPresetProp,\n    ...useSplitDraggerProps,\n    ...useStatefulProps,\n    modelValue: {\n      type: Number,\n      default: 50,\n      validator: (v: number) => v <= 100,\n    },\n    maximization: { type: Boolean, default: false },\n    maximizeStart: { type: Boolean, default: false },\n    limits: {\n      type: Array as any as PropType<[SplitLimit, SplitLimit]>,\n      default: () => [0, 0],\n    },\n    snapping: {\n      type: Array as any as PropType<SnappingMark[]>,\n      default: undefined,\n    },\n    snappingRange: { type: [Number, String] as PropType<number | string>, default: 4 },\n\n    ariaLabel: { type: String, default: '$t:splitPanels' },\n  },\n\n  emits: [...useStatefulEmits],\n\n  setup: (props, { emit }) => {\n    const splitPanelsContainer = shallowRef<HTMLElement>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const containerSize = ref()\n    const bodyFontSize = ref(16)\n\n    const handleContainerResize = () => {\n      const { width, height } = splitPanelsContainer.value?.getBoundingClientRect() || { width: 0, height: 0 }\n      containerSize.value = props.vertical ? height : width\n      bodyFontSize.value = parseFloat(getComputedStyle(document.documentElement).fontSize)\n    }\n    onMounted(handleContainerResize)\n    useResizeObserver([splitPanelsContainer], handleContainerResize)\n\n    const convertToPercents = (v: string | number, type: 'min' | 'max' | 'snapping') => {\n      let numberValue = ''\n      let measureValue = ''\n\n      if (isNumber(v)) { return v }\n\n      v.split('')\n        .filter((char) => char && char !== ' ')\n        .forEach((char) => {\n          !isNaN(+char) ? numberValue += char : measureValue += char\n        })\n\n      switch (measureValue) {\n        case '%':\n          return +numberValue\n        case 'px':\n          return (+numberValue / containerSize.value) * 100\n        case 'rem':\n          return ((+numberValue * bodyFontSize.value) / containerSize.value) * 100\n        case 'any':\n          return ['min', 'snapping'].includes(type) ? 0 : 100\n        case '':\n          return 100\n        default:\n          warn('Invalid limits measure!')\n          return 0\n      }\n    }\n    const getPanelMinMax = (v: SplitLimit) => {\n      if (v === 'undefined' || !containerSize.value) { return }\n\n      let minPercents = 0\n      let maxPercents = 100\n\n      if (isString(v) || isNumber(v)) { minPercents = convertToPercents(v, 'min') }\n\n      if (Array.isArray(v)) {\n        minPercents = convertToPercents(v[0], 'min')\n        maxPercents = convertToPercents(v[1], 'max')\n      }\n\n      if (minPercents > maxPercents) {\n        warn(`Min panels size can not be larger than max one! Passed limit: ${v}.`)\n        maxPercents = minPercents\n      }\n\n      return { min: minPercents ?? 0, max: maxPercents ?? 100 }\n    }\n\n    const startPanelMinMax = computed(() => getPanelMinMax(props.limits[0]) ?? { min: 0, max: 100 })\n    const endPanelMinMax = computed(() => getPanelMinMax(props.limits[1]) ?? { min: 0, max: 100 })\n\n    const endPanelMinChecked = computed(() => {\n      const passedCheck = !(startPanelMinMax.value.min + endPanelMinMax.value.min > 100)\n      if (!passedCheck) {\n        warn('The sum of different panels min sizes should be lesser or equal to 100% of the container size!')\n      }\n      return !passedCheck ? 100 - startPanelMinMax.value.min : endPanelMinMax.value.min\n    })\n    const panelsMinMax = computed(() => {\n      if (Math.ceil(endPanelMinMax.value.max + startPanelMinMax.value.max) < 100) {\n        warn('The sum of different panels max sizes should be equal to 100% of the container size!')\n      }\n\n      return {\n        start: {\n          min: startPanelMinMax.value.min,\n          max: Math.min(startPanelMinMax.value.max, 100 - endPanelMinChecked.value),\n        },\n        end: {\n          min: endPanelMinChecked.value,\n          max: Math.min(endPanelMinMax.value.max, 100 - startPanelMinMax.value.min),\n        },\n      }\n    })\n\n    const checkSnappingLimitsCondition = (el: number) =>\n      el >= panelsMinMax.value.start.min &&\n      el >= panelsMinMax.value.end.min &&\n      el <= panelsMinMax.value.start.max &&\n      el <= panelsMinMax.value.end.max\n\n    const snappingMarksPosition = computed(() => {\n      if (!Array.isArray(props.snapping) || !containerSize.value) { return }\n\n      let result = props.snapping.map((el) => convertToPercents(el, 'snapping'))\n\n      if (!result.every(checkSnappingLimitsCondition)) {\n        const filteredMarks = result.filter(checkSnappingLimitsCondition)\n        warn(`Some of the snapping marks (${result}) are not in allowed range (${Object.values(panelsMinMax.value.start).join('-')} / ${Object.values(panelsMinMax.value.end).join('-')}) and will be removed (${filteredMarks})!`)\n        result = filteredMarks\n      }\n\n      const checkSnappingRange = () => {\n        return result.every((el, index, array) => {\n          if (!array[index + 1]) { return true }\n          return Math.abs(el - array[index + 1]) > Number(props.snappingRange)\n        })\n      }\n\n      if (!checkSnappingRange()) {\n        warn('Distance between some snapping marks is lesser than snapping range!')\n      }\n\n      return result\n    })\n\n    const snappingRangeParsed = computed(() => convertToPercents(props.snappingRange, 'snapping'))\n\n    const splitterPosition = ref(valueComputed.value)\n    const splitterPositionComputed = computed(() => {\n      if (snappingMarksPosition.value) {\n        const nearestSnappingMark = snappingMarksPosition.value.find((el) => {\n          return splitterPosition.value + snappingRangeParsed.value > el && splitterPosition.value - snappingRangeParsed.value < el\n        })\n        if (nearestSnappingMark) { return nearestSnappingMark }\n      }\n\n      return clamp(\n        splitterPosition.value,\n        Math.max(panelsMinMax.value.start.min, 100 - panelsMinMax.value.end.max),\n        Math.min(panelsMinMax.value.start.max, 100 - panelsMinMax.value.end.min),\n      )\n    })\n\n    const {\n      isDragging,\n      startDragging,\n      currentSplitterPosition,\n    } = useSplitDragger(containerSize, splitterPositionComputed, props)\n\n    const maximizePanel = () => {\n      if (!props.maximization || props.disabled) { return }\n\n      splitterPosition.value = props.maximizeStart ? panelsMinMax.value.start.max : 100 - panelsMinMax.value.end.max\n    }\n\n    watch(valueComputed, (v) => {\n      if (v < panelsMinMax.value.start.min || v > 100 - panelsMinMax.value.end.min) {\n        warn('Incorrect `modelValue`. Check current `limits` prop value.')\n      }\n\n      splitterPosition.value = v\n    }, { immediate: true })\n\n    watch(currentSplitterPosition, (v) => {\n      splitterPosition.value = v\n    })\n\n    watch(isDragging, (v) => {\n      if (!v) { valueComputed.value = splitterPositionComputed.value }\n      document.documentElement.style.cursor = v ? 'var(--va-split-dragging-cursor)' : ''\n    })\n\n    const sizePropertyComputed = computed(() => props.vertical ? 'height' : 'width')\n    const getPanelStyle = (position: 'start' | 'end') => {\n      let sizeValue = position === 'start' ? splitterPositionComputed.value : 100 - splitterPositionComputed.value\n      if (sizeValue < 0) { sizeValue = 0 }\n      if (sizeValue > 100) { sizeValue = 100 }\n\n      return { [sizePropertyComputed.value]: `${sizeValue}%` }\n    }\n\n    const draggerStyleComputed = computed(() => {\n      if (props.disabled) { return {} }\n      if (isDragging.value) { return { cursor: 'var(--va-split-dragging-cursor)' } }\n      return { cursor: props.vertical ? 'var(--va-split-vertical-dragger-cursor)' : 'var(--va-split-horizontal-dragger-cursor)' }\n    })\n\n    const classComputed = useBem('va-split', () => ({\n      horizontal: !props.vertical,\n      vertical: props.vertical,\n      dragging: isDragging.value,\n    }))\n\n    return {\n      ...useTranslation(),\n      splitPanelsContainer,\n      containerSize,\n\n      startDragging,\n      getPanelStyle,\n      maximizePanel,\n\n      classComputed,\n      draggerStyleComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n@import '../../styles/resources';\n\n.va-split {\n  position: relative;\n  display: flex;\n\n  &__dragger {\n    position: relative;\n\n    &__overlay {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      display: var(--va-split-dragger-display);\n      z-index: 1;\n    }\n  }\n\n  &__panel {\n    overflow: var(--va-split-panel-overflow);\n\n    @include va-scroll();\n  }\n\n  &--dragging {\n    & .va-split__panel {\n      user-select: none;\n      cursor: var(--va-split-dragging-cursor);\n    }\n  }\n\n  &__dragger__default {\n    opacity: 0.7;\n  }\n\n  &:focus,\n  &:hover {\n    .va-split__dragger__default {\n      opacity: 1;\n    }\n  }\n\n  &--vertical {\n    flex-direction: column;\n\n    & > .va-split__dragger {\n      height: 0;\n\n      .va-split__dragger__overlay {\n        top: calc((var(--va-split-dragger-overlay-size) / -2));\n        height: var(--va-split-dragger-overlay-size);\n        align-items: var(--va-split-dragger-align-items);\n      }\n\n      .va-split__dragger__default {\n        width: 100%;\n      }\n    }\n  }\n\n  &--horizontal {\n    flex-direction: row;\n\n    & > .va-split__dragger {\n      width: 0;\n\n      .va-split__dragger__overlay {\n        left: calc((var(--va-split-dragger-overlay-size) / -2));\n        width: var(--va-split-dragger-overlay-size);\n        justify-content: var(--va-split-dragger-justify-content);\n      }\n\n      .va-split__dragger__default {\n        height: 100%;\n      }\n    }\n  }\n}\n</style>\n"],"names":[],"mappings":"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"}