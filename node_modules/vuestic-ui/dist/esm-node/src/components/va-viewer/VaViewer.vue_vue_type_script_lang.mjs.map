{"version":3,"file":"VaViewer.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-viewer/VaViewer.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-viewer\"\n    v-bind=\"$attrs\"\n    @click=\"handleAnchorClick\"\n  >\n    <slot\n      name=\"anchor\"\n      v-bind=\"{ openViewer }\"\n    />\n\n    <slot v-if=\"!$slots.anchor\" />\n  </div>\n\n  <teleport\n    v-if=\"isOpened\"\n    :to=\"teleportTarget\"\n  >\n    <div class=\"va-viewer-content\">\n      <div\n        ref=\"content\"\n        class=\"va-viewer-content__main-area\"\n      >\n        <slot v-if=\"!$slots.image\" />\n        <slot name=\"image\" />\n      </div>\n\n      <div\n        ref=\"controls\"\n        class=\"va-viewer-content__controls-panel\"\n      >\n        <slot name=\"controls\" />\n\n        <slot\n          name=\"close\"\n          v-bind=\"{ close: closeViewer }\"\n        >\n          <button\n            class=\"va-viewer-content__close-button\"\n            @click=\"closeViewer\"\n          >\n            <va-icon\n              name=\"close\"\n              color=\"backgroundPrimary\"\n            />\n          </button>\n        </slot>\n      </div>\n    </div>\n  </teleport>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed } from 'vue'\n\nimport { VaIcon } from '../va-icon'\n\nimport { useIsMounted, useDocument, useClickOutside } from '../../composables'\n\nexport default defineComponent({\n  name: 'VaViewer',\n\n  inheritAttrs: false,\n\n  components: { VaIcon },\n\n  setup (_, { slots }) {\n    const content = ref<HTMLElement>()\n    const controls = ref<HTMLElement>()\n\n    const isMounted = useIsMounted()\n    const isClosed = ref(true)\n    const isOpened = computed(() => isMounted.value && !isClosed.value)\n\n    const openViewer = () => (isClosed.value = false)\n    const closeViewer = () => (isClosed.value = true)\n    const handleAnchorClick = () => {\n      if (!slots.anchor) {\n        openViewer()\n      }\n    }\n\n    useClickOutside([content, controls], closeViewer)\n\n    const document = useDocument()\n    const teleportTarget = computed(() => document.value?.body)\n\n    return {\n      content,\n      controls,\n\n      teleportTarget,\n      isOpened,\n\n      openViewer,\n      closeViewer,\n      handleAnchorClick,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-viewer {\n  --va-image-position: relative;\n}\n\n.va-viewer-content {\n  position: fixed;\n  inset: 0;\n  z-index: var(--va-viewer-content-overlay-z-index);\n  display: flex;\n  justify-content: center;\n  background-color: var(--va-viewer-content-overlay-background-color);\n\n  &__main-area {\n    --va-image-content-position: relative;\n\n    display: flex;\n\n    & > * {\n      width: auto;\n      max-width: unset;\n    }\n  }\n\n  &__controls-panel {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    z-index: var(--va-viewer-content-controls-panel-z-index);\n    display: flex;\n    justify-content: var(--va-viewer-content-controls-panel-justify-content);\n    padding: var(--va-viewer-content-controls-panel-padding);\n    background-color: var(--va-viewer-content-controls-panel-background-color);\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;AA2DA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,cAAc;AAAA,EAEd,YAAY,EAAE,OAAO;AAAA,EAErB,MAAO,GAAG,EAAE,SAAS;AACnB,UAAM,UAAU;AAChB,UAAM,WAAW;AAEjB,UAAM,YAAY;AACZ,UAAA,WAAW,IAAI,IAAI;AACzB,UAAM,WAAW,SAAS,MAAM,UAAU,SAAS,CAAC,SAAS,KAAK;AAE5D,UAAA,aAAa,MAAO,SAAS,QAAQ;AACrC,UAAA,cAAc,MAAO,SAAS,QAAQ;AAC5C,UAAM,oBAAoB,MAAM;AAC1B,UAAA,CAAC,MAAM,QAAQ;AACN;MACb;AAAA,IAAA;AAGF,oBAAgB,CAAC,SAAS,QAAQ,GAAG,WAAW;AAEhD,UAAM,WAAW;AACjB,UAAM,iBAAiB,SAAS,MAAA;;AAAM,4BAAS,UAAT,mBAAgB;AAAA,KAAI;AAEnD,WAAA;AAAA,MACL;AAAA,MACA;AAAA,MAEA;AAAA,MACA;AAAA,MAEA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;"}