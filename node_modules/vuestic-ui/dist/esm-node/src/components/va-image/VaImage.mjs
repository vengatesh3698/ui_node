import { _ as _sfc_main } from "./VaImage.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createBlock, mergeProps, withCtx, withDirectives, createElementVNode, renderSlot, createCommentVNode, createElementBlock, vShow, createVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaImage_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = ["aria-busy"];
const _hoisted_2 = {
  key: 0,
  class: "va-image__overlay"
};
const _hoisted_3 = {
  key: 1,
  class: "va-image__error"
};
const _hoisted_4 = {
  key: 2,
  class: "va-image__loader"
};
const _hoisted_5 = {
  key: 3,
  class: "va-image__placeholder"
};
const _hoisted_6 = ["src"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_fallback = resolveComponent("va-fallback");
  const _component_va_aspect_ratio = resolveComponent("va-aspect-ratio");
  return openBlock(), createBlock(_component_va_aspect_ratio, mergeProps({
    ref: "root",
    class: "va-image"
  }, _ctx.aspectRationAttributesComputed, {
    style: `--va-0-fit-computed: ${String(_ctx.fitComputed)}`
  }), {
    default: withCtx(() => [
      withDirectives(createElementVNode("picture", {
        class: "va-image__content",
        "aria-busy": _ctx.isLoading
      }, [
        _ctx.$slots.sources ? renderSlot(_ctx.$slots, "sources", { key: 0 }) : createCommentVNode("", true),
        _ctx.isReadyForRender ? (openBlock(), createElementBlock("img", mergeProps({
          key: 1,
          ref: "image"
        }, _ctx.imgAttributesComputed, {
          onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleError && _ctx.handleError(...args)),
          onLoad: _cache[1] || (_cache[1] = (...args) => _ctx.handleLoad && _ctx.handleLoad(...args))
        }), null, 16)) : createCommentVNode("", true)
      ], 8, _hoisted_1), [
        [vShow, _ctx.isSuccessfullyLoaded]
      ]),
      _ctx.$slots.default && _ctx.isSuccessfullyLoaded ? (openBlock(), createElementBlock("div", _hoisted_2, [
        renderSlot(_ctx.$slots, "default")
      ])) : createCommentVNode("", true),
      _ctx.isError && (_ctx.$slots.error || _ctx.isAnyFallbackPassed) ? (openBlock(), createElementBlock("div", _hoisted_3, [
        renderSlot(_ctx.$slots, "error", {}, () => [
          createVNode(_component_va_fallback, mergeProps(_ctx.fallbackProps, {
            onFallback: _cache[2] || (_cache[2] = ($event) => _ctx.$emit("fallback"))
          }), null, 16)
        ])
      ])) : createCommentVNode("", true),
      _ctx.isLoading && _ctx.$slots.loader ? (openBlock(), createElementBlock("div", _hoisted_4, [
        renderSlot(_ctx.$slots, "loader")
      ])) : createCommentVNode("", true),
      _ctx.isPlaceholderShown ? (openBlock(), createElementBlock("div", _hoisted_5, [
        renderSlot(_ctx.$slots, "placeholder", {}, () => [
          _ctx.$props.placeholderSrc ? (openBlock(), createElementBlock("img", {
            key: 0,
            src: _ctx.$props.placeholderSrc,
            alt: ""
          }, null, 8, _hoisted_6)) : createCommentVNode("", true)
        ])
      ])) : createCommentVNode("", true)
    ]),
    _: 3
  }, 16, ["style"]);
}
const _VaImage = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaImage as _
};
//# sourceMappingURL=VaImage.mjs.map
