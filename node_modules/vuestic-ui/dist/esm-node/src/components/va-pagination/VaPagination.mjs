import { _ as _sfc_main } from "./VaPagination.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, normalizeClass, withKeys, withModifiers, renderSlot, normalizeProps, mergeProps, createBlock, createCommentVNode, Fragment, renderList, withCtx, createTextVNode, toDisplayString, withDirectives, vModelDynamic } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaPagination_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["aria-label"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  return _ctx.showPagination ? (openBlock(), createElementBlock("nav", {
    key: 0,
    class: normalizeClass(["va-pagination", _ctx.classComputed]),
    "aria-label": _ctx.tp(_ctx.$props.ariaLabel),
    onKeydown: [
      _cache[6] || (_cache[6] = withKeys(withModifiers((...args) => _ctx.goPrevPage && _ctx.goPrevPage(...args), ["stop"]), ["left"])),
      _cache[7] || (_cache[7] = withKeys(withModifiers((...args) => _ctx.goNextPage && _ctx.goNextPage(...args), ["stop"]), ["right"])),
      _cache[8] || (_cache[8] = withKeys(withModifiers((...args) => _ctx.goPrevPage && _ctx.goPrevPage(...args), ["stop"]), ["up"])),
      _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.goNextPage && _ctx.goNextPage(...args), ["stop"]), ["down"]))
    ]
  }, [
    _ctx.showBoundaryLinks ? renderSlot(_ctx.$slots, "firstPageLink", normalizeProps(mergeProps({ key: 0 }, { onClick: () => _ctx.onUserInput(1), disabled: _ctx.$props.disabled || _ctx.currentValue === 1 })), () => [
      _ctx.showBoundaryLinks ? (openBlock(), createBlock(_component_va_button, mergeProps({
        key: 0,
        "aria-label": _ctx.tp(_ctx.$props.ariaGoToTheFirstPageLabel),
        disabled: _ctx.$props.disabled || _ctx.currentValue === 1,
        icon: _ctx.$props.boundaryIconLeft
      }, _ctx.buttonPropsComputed, {
        onClick: _cache[0] || (_cache[0] = ($event) => _ctx.onUserInput(1))
      }), null, 16, ["aria-label", "disabled", "icon"])) : createCommentVNode("", true)
    ]) : createCommentVNode("", true),
    _ctx.showDirectionLinks ? renderSlot(_ctx.$slots, "prevPageLink", normalizeProps(mergeProps({ key: 1 }, { onClick: _ctx.goPrevPage, disabled: _ctx.$props.disabled || _ctx.currentValue === 1 })), () => [
      _ctx.showDirectionLinks ? (openBlock(), createBlock(_component_va_button, mergeProps({
        key: 0,
        "aria-label": _ctx.tp(_ctx.$props.ariaGoToPreviousPageLabel),
        disabled: _ctx.$props.disabled || _ctx.currentValue === 1,
        icon: _ctx.$props.directionIconLeft
      }, _ctx.buttonPropsComputed, { onClick: _ctx.goPrevPage }), null, 16, ["aria-label", "disabled", "icon", "onClick"])) : createCommentVNode("", true)
    ]) : createCommentVNode("", true),
    !_ctx.$props.input ? renderSlot(_ctx.$slots, "default", { key: 2 }, () => [
      (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.paginationRange, (n, i) => {
        return openBlock(), createBlock(_component_va_button, mergeProps({
          key: i,
          ref_for: true,
          ref: _ctx.setItemRefByIndex(i),
          class: { "va-button--ellipsis": n === "...", "va-button--current": n === _ctx.currentValue },
          "aria-label": _ctx.tp(_ctx.$props.ariaGoToSpecificPageLabel, { page: n }),
          "aria-current": n === _ctx.currentValue,
          disabled: _ctx.$props.disabled || n === "..."
        }, _ctx.getPageButtonProps(n), {
          onClick: ($event) => _ctx.onUserInput(n)
        }), {
          default: withCtx(() => [
            createTextVNode(toDisplayString(n), 1)
          ]),
          _: 2
        }, 1040, ["class", "aria-label", "aria-current", "disabled", "onClick"]);
      }), 128))
    ]) : withDirectives((openBlock(), createElementBlock("input", mergeProps({
      key: 3,
      "onUpdate:modelValue": _cache[1] || (_cache[1] = ($event) => _ctx.inputValue = $event),
      ref: "htmlInput",
      class: ["va-pagination__input va-button", _ctx.inputClassComputed],
      "aria-label": _ctx.tp(_ctx.$props.ariaGoToSpecificPageInputLabel),
      style: _ctx.inputStyleComputed
    }, _ctx.inputAttributesComputed, {
      onKeydown: _cache[2] || (_cache[2] = withKeys((...args) => _ctx.changeValue && _ctx.changeValue(...args), ["enter"])),
      onFocus: _cache[3] || (_cache[3] = (...args) => _ctx.focusInput && _ctx.focusInput(...args)),
      onBlur: _cache[4] || (_cache[4] = (...args) => _ctx.changeValue && _ctx.changeValue(...args))
    }), null, 16, _hoisted_2)), [
      [vModelDynamic, _ctx.inputValue]
    ]),
    _ctx.showDirectionLinks ? renderSlot(_ctx.$slots, "nextPageLink", normalizeProps(mergeProps({ key: 4 }, { onClick: _ctx.goNextPage, disabled: _ctx.$props.disabled || _ctx.currentValue === _ctx.lastPage })), () => [
      _ctx.showDirectionLinks ? (openBlock(), createBlock(_component_va_button, mergeProps({
        key: 0,
        "aria-label": _ctx.tp(_ctx.$props.ariaGoToNextPageLabel),
        disabled: _ctx.$props.disabled || _ctx.currentValue === _ctx.lastPage,
        icon: _ctx.$props.directionIconRight
      }, _ctx.buttonPropsComputed, { onClick: _ctx.goNextPage }), null, 16, ["aria-label", "disabled", "icon", "onClick"])) : createCommentVNode("", true)
    ]) : createCommentVNode("", true),
    _ctx.showBoundaryLinks ? renderSlot(_ctx.$slots, "lastPageLink", normalizeProps(mergeProps({ key: 5 }, { onClick: () => _ctx.onUserInput(_ctx.lastPage), disabled: _ctx.$props.disabled || _ctx.currentValue === _ctx.lastPage })), () => [
      _ctx.showBoundaryLinks ? (openBlock(), createBlock(_component_va_button, mergeProps({
        key: 0,
        "aria-label": _ctx.tp(_ctx.$props.ariaGoToLastPageLabel),
        disabled: _ctx.$props.disabled || _ctx.currentValue === _ctx.lastPage,
        icon: _ctx.$props.boundaryIconRight
      }, _ctx.buttonPropsComputed, {
        onClick: _cache[5] || (_cache[5] = ($event) => _ctx.onUserInput(_ctx.lastPage))
      }), null, 16, ["aria-label", "disabled", "icon"])) : createCommentVNode("", true)
    ]) : createCommentVNode("", true)
  ], 42, _hoisted_1)) : createCommentVNode("", true);
}
const _VaPagination = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaPagination as _
};
//# sourceMappingURL=VaPagination.mjs.map
