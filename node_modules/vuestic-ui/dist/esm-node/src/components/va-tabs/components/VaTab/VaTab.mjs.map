{"version":3,"file":"VaTab.mjs","sources":["../../../../../../../src/components/va-tabs/components/VaTab/VaTab.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tagComputed\"\n    ref=\"tabElement\"\n    class=\"va-tab\"\n    role=\"tab\"\n    :aria-selected=\"isActive\"\n    :aria-disabled=\"$props.disabled || parentDisabled\"\n    :href=\"hrefComputed\"\n    :target=\"target\"\n    :to=\"to\"\n    :replace=\"replace\"\n    :exact=\"exact\"\n    :active-class=\"activeClass\"\n    :exact-active-class=\"exactActiveClass\"\n    :class=\"classComputed\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div\n      class=\"va-tab__content\"\n      :tabindex=\"tabIndexComputed\"\n      @focus=\"onFocus\"\n      @click=\"onTabClick\"\n      @keydown.enter=\"onTabKeydown\"\n      v-on=\"keyboardFocusListeners\"\n    >\n      <slot>\n        <va-icon\n          v-if=\"icon\"\n          class=\"va-tab__icon\"\n          size=\"small\"\n          :name=\"icon\"\n        />\n        <span\n          class=\"va-tab__label\"\n          v-text=\"label\"\n        />\n      </slot>\n    </div>\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, inject, onBeforeUnmount, onMounted, ref, shallowRef } from 'vue'\n\nimport {\n  useComponentPresetProp,\n  useKeyboardOnlyFocus,\n  useRouterLink, useRouterLinkProps,\n  useColors,\n} from '../../../../composables'\n\nimport { TabsViewKey, TabsView, TabComponent } from '../../types'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaTab',\n  components: { VaIcon },\n  emits: ['click', 'keydown-enter', 'focus'],\n\n  props: {\n    ...useRouterLinkProps,\n    ...useComponentPresetProp,\n    selected: { type: Boolean, default: false },\n    color: { type: String, default: '' },\n    icon: { type: String, default: '' },\n    label: { type: String, default: '' },\n    disabled: { type: Boolean },\n    name: { type: [String, Number] },\n    tag: { type: String, default: 'div' },\n  },\n\n  setup: (props, { emit }) => {\n    const tabElement = shallowRef<HTMLElement>()\n\n    const isActive = ref(false)\n    const hoverState = ref(false)\n    const rightSidePosition = ref(0)\n    const leftSidePosition = ref(0)\n\n    const { keyboardFocusListeners, hasKeyboardFocus } = useKeyboardOnlyFocus()\n\n    const { tagComputed, hrefComputed, isActiveRouterLink } = useRouterLink(props)\n    const classComputed = computed(() => ({ 'va-tab--disabled': props.disabled }))\n    const {\n      parentDisabled,\n      selectTab,\n      moveToTab,\n      registerTab,\n      unregisterTab,\n    } = inject<TabsView>(TabsViewKey, {\n      parentDisabled: false,\n      tabsList: [],\n      selectTab: (tab: TabComponent) => tab,\n      moveToTab: (tab: TabComponent) => tab,\n      registerTab: (tab: TabComponent) => tab,\n      unregisterTab: (tab: TabComponent) => tab,\n    })\n    const tabIndexComputed = computed(() => (props.disabled || parentDisabled) ? -1 : 0)\n\n    const { getColor } = useColors()\n    const colorComputed = computed(() => getColor(props.color))\n\n    const computedStyle = computed(() => ({\n      color: hoverState.value || isActive.value ? colorComputed.value : 'inherit',\n    }))\n\n    const updateHoverState = (isHover: boolean) => {\n      hoverState.value = isHover\n    }\n\n    const updateSidePositions = () => {\n      const componentOffsetLeft = tabElement.value?.offsetLeft || 0\n      const componentOffsetWidth = tabElement.value?.offsetWidth || 0\n\n      rightSidePosition.value = componentOffsetLeft + componentOffsetWidth\n      leftSidePosition.value = componentOffsetLeft\n    }\n\n    const onTabClick = () => {\n      selectTab(tabComponent)\n      emit('click')\n    }\n\n    const onTabKeydown = () => {\n      selectTab(tabComponent)\n      emit('keydown-enter')\n    }\n\n    const onFocus = () => {\n      if (hasKeyboardFocus.value) {\n        moveToTab(tabComponent)\n      }\n\n      emit('focus')\n    }\n\n    const tabComponent: TabComponent = {\n      name: computed(() => props.name),\n      id: null,\n      tabElement,\n      isActive,\n      tabIndexComputed,\n      isActiveRouterLink,\n      rightSidePosition,\n      leftSidePosition,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n      updateSidePositions,\n    }\n\n    onMounted(() => {\n      registerTab(tabComponent)\n    })\n\n    onBeforeUnmount(() => {\n      unregisterTab(tabComponent)\n    })\n\n    return {\n      tabElement,\n      parentDisabled,\n      isActive,\n      hoverState,\n      tagComputed,\n      hrefComputed,\n      isActiveRouterLink,\n      colorComputed,\n      classComputed,\n      computedStyle,\n      tabIndexComputed,\n      rightSidePosition,\n      leftSidePosition,\n      updateHoverState,\n      updateSidePositions,\n      onTabClick,\n      onTabKeydown,\n      onFocus,\n      keyboardFocusListeners,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n@import 'variables';\n\n.va-tab {\n  align-items: var(--va-tab-align-items);\n  display: var(--va-tab-display);\n  flex: var(--va-tab-flex);\n  font-weight: var(--va-tab-font-weight);\n  line-height: var(--va-tab-line-height);\n  height: var(--va-tab-height);\n  max-width: var(--va-tab-max-width);\n  text-align: var(--va-tab-text-align);\n  vertical-align: var(--va-tab-vertical-align);\n  color: var(--va-tab-color);\n\n  &__content {\n    align-items: var(--va-tab-content-align-items);\n    color: var(--va-tab-content-color);\n    display: var(--va-tab-content-display);\n    flex: var(--va-tab-content-flex);\n    height: var(--va-tab-content-height);\n    justify-content: var(--va-tab-content-justify-content);\n    max-width: var(--va-tab-content-max-width);\n    text-decoration: var(--va-tab-content-text-decoration);\n    transition: var(--va-tab-content-transition);\n    user-select: var(--va-tab-content-user-select);\n    white-space: var(--va-tab-content-white-space);\n    padding: var(--va-tab-content-padding);\n    cursor: var(--va-tab-content-cursor);\n\n    @include keyboard-focus-outline($radius: 2px, $offset: -2px);\n  }\n\n  &__icon {\n    margin-right: var(--va-tab-icon-margin-right);\n  }\n\n  &.va-tab--disabled {\n    @include va-disabled();\n\n    pointer-events: none;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createBlock","_resolveDynamicComponent","_normalizeStyle","_withCtx","_createElementVNode","_mergeProps","_withKeys","_toHandlers","_renderSlot","_createCommentVNode"],"mappings":";;;;;;;6BACEA,iBAwCY,SAAA;AArCL,SAAAC,UAAA,GAAAC,YAASC,wBAWO,KAAA,WAAA,GAAA;AAAA,IAVrB,KAAI;AAAA,IACH,sBAAe,CAAQ,UAAA,KAAA,aAAA,CAAA;AAAA,IACvB,MAAA;AAAA,IACA,iBAAM,KAAA;AAAA,IACN,iBAAQ,KAAM,OAAA,YAAA,KAAA;AAAA,IACd,MAAI,KAAE;AAAA,IACN,QAAO,KAAE;AAAA,IACT,IAAO,KAAA;AAAA,IACP,SAAY,KAAA;AAAA,IACZ,OAAA,KAAA;AAAA,IAEA,gBAAK,KAAA;AAAA,IACL,sBAAU,KAAA;AAAA,IACV,OAAUC,eAAA,KAAA,aAAA;AAAA,IAAA,cAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,iBAAA,IAAA;AAAA,IAsBL,cAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,iBAAA,KAAA;AAAA,EAAA,GAAA;AAAA,aAnBCC,QAAC,MAAA;AAAA,MAAAC,mBACK,OAAgBC,WAAA;AAAA,QAC1B,OAAK;AAAA,QACL,UAAK,KAAA;AAAA,QACL,SAAO,OAAQ,CAAA,MAAA,OAAA,CAAA,IAAA,IAAA,SAAA,KAAA,WAAA,KAAA,QAAA,GAAA,IAAA;AAAA,QAAA,SAChB,OAA6B,CAAD,MAAA,OAAA,CAAA,IAAA,IAAA,SAAA,KAAA,cAAA,KAAA,WAAA,GAAA,IAAA;AAAA,QAE5B,WAWO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAAC,SAAA,IAAA,SAAA,KAAA,gBAAA,KAAA,aAAA,GAAA,IAAA,GAAA,CAAA,OAAA,CAAA;AAAA,MATO,GAAAC,WAAA,KAAA,wBAAA,IAAA,CAAA,GAAA;AAAA,QAAAC,WAAA,KAAA,QADZ,WAKE,CAAA,GAAA,MAAA;AAAA,UAAA,KAAA,QAAAT,aAHoBC,YAAA,oBAAA;AAAA,YACpB,KAAI;AAAA,YACH,OAAM;AAAA,YAAA,MAAA;AAAA;UAET,GAAA,MAAA,GAAA,CAAA,MAGE,MAFAS,mBAAqB,IAAA,IAAA;AAAA,UACrBL,mBAAA,QAAA;AAAA,YAAA,OAAA;AAAA;;;;;;;;;"}