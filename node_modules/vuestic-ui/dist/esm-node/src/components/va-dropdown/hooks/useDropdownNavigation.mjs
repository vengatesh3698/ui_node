import { u as useEvent } from "../../../composables/useEvent.mjs";
const isTyping = (e) => {
  const target = e.target;
  if (!(target.tagName === "INPUT" || target.tagName === "TEXTAREA")) {
    return false;
  }
  if (target.attributes.getNamedItem("readonly")) {
    return false;
  }
  return true;
};
const openKey = ["ArrowDown", "ArrowUp", "Enter", "Space"];
const useKeyboardNavigation = (anchorRef, isOpened) => {
  useEvent("keydown", (e) => {
    if (isTyping(e)) {
      return;
    }
    if (!openKey.includes(e.key)) {
      return;
    }
    isOpened.value = !isOpened.value;
    e.preventDefault();
  }, anchorRef);
  useEvent("keydown", (e) => {
    if (e.key === "Escape" && isOpened.value) {
      isOpened.value = false;
      e.preventDefault();
    }
  }, true);
};
const useMouseNavigation = (anchorRef, listeners) => {
  useEvent(["click", "contextmenu", "dblclick"], (e) => {
    if (isTyping(e)) {
      return;
    }
    listeners[e.type](e);
  }, anchorRef);
  useEvent(["mouseleave", "mouseenter"], (e) => {
    listeners[e.type](e);
  }, anchorRef);
};
export {
  useMouseNavigation as a,
  useKeyboardNavigation as u
};
//# sourceMappingURL=useDropdownNavigation.mjs.map
