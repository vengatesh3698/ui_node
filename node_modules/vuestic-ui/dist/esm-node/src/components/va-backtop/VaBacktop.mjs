import { _ as _sfc_main } from "./VaBacktop.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, normalizeStyle, withKeys, withModifiers, renderSlot, createVNode, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaBacktop_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = ["aria-label"];
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  return _ctx.visible ? (openBlock(), createElementBlock("div", {
    key: 0,
    class: "va-backtop",
    role: "button",
    "aria-label": _ctx.tp(_ctx.$props.ariaLabel),
    style: normalizeStyle(_ctx.computedStyle),
    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.scrollToTop && _ctx.scrollToTop(...args)),
    onKeydown: _cache[1] || (_cache[1] = withKeys(withModifiers((...args) => _ctx.scrollToTop && _ctx.scrollToTop(...args), ["stop"]), ["enter"]))
  }, [
    renderSlot(_ctx.$slots, "default", {}, () => [
      createVNode(_component_va_button, {
        "aria-hidden": "true",
        icon: "va-arrow-up",
        color: _ctx.color
      }, null, 8, ["color"])
    ])
  ], 44, _hoisted_1)) : createCommentVNode("", true);
}
const _VaBacktop = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaBacktop as _
};
//# sourceMappingURL=VaBacktop.mjs.map
