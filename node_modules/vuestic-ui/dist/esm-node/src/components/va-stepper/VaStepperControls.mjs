import { _ as _sfc_main } from "./VaStepperControls.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, createVNode, withCtx, createTextVNode, toDisplayString, createBlock, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaStepperControls_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = { class: "va-stepper__default-controls" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    createVNode(_component_va_button, {
      preset: "primary",
      disabled: _ctx.$props.modelValue <= 0,
      onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$props.stepControls.prevStep())
    }, {
      default: withCtx(() => [
        createTextVNode(toDisplayString(_ctx.t("back")), 1)
      ]),
      _: 1
    }, 8, ["disabled"]),
    !_ctx.isLastStep ? (openBlock(), createBlock(_component_va_button, {
      key: 0,
      onClick: _cache[1] || (_cache[1] = ($event) => _ctx.$props.stepControls.nextStep()),
      disabled: _ctx.$props.nextDisabled
    }, {
      default: withCtx(() => [
        createTextVNode(toDisplayString(_ctx.t("next")), 1)
      ]),
      _: 1
    }, 8, ["disabled"])) : !_ctx.$props.finishButtonHidden ? (openBlock(), createBlock(_component_va_button, {
      key: 1,
      onClick: _cache[2] || (_cache[2] = ($event) => _ctx.$emit("finish"))
    }, {
      default: withCtx(() => [
        createTextVNode(toDisplayString(_ctx.t("finish")), 1)
      ]),
      _: 1
    })) : createCommentVNode("", true)
  ]);
}
const VaStepperControls = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  VaStepperControls as V
};
//# sourceMappingURL=VaStepperControls.mjs.map
