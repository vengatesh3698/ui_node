{"version":3,"file":"VaStepper.mjs","sources":["../../../../../src/components/va-stepper/VaStepper.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-stepper\"\n    :class=\"{ 'va-stepper--vertical': $props.vertical }\"\n    v-bind=\"ariaAttributesComputed\"\n  >\n    <ol\n      class=\"va-stepper__navigation\"\n      ref=\"stepperNavigation\"\n      :class=\"{ 'va-stepper__navigation--vertical': $props.vertical }\"\n\n      @click=\"onValueChange\"\n      @keyup.enter=\"onValueChange\"\n      @keyup.space=\"onValueChange\"\n      @keyup.left=\"onArrowKeyPress('prev')\"\n      @keyup.right=\"onArrowKeyPress('next')\"\n      @focusout=\"resetFocus\"\n    >\n      <template\n        v-for=\"(step, i) in $props.steps\"\n        :key=\"i\"\n      >\n        <slot\n          v-if=\"i > 0\"\n          name=\"divider\"\n          v-bind=\"getIterableSlotData(step, i)\"\n        >\n          <span\n            class=\"va-stepper__divider\"\n            :class=\"{ 'va-stepper__divider--vertical': $props.vertical }\"\n            aria-hidden=\"true\"\n          />\n        </slot>\n\n        <slot\n          :name=\"`step-button-${i}`\"\n          v-bind=\"getIterableSlotData(step, i)\"\n        >\n          <va-stepper-step-button\n            :stepIndex=\"i\"\n            :color=\"stepperColor\"\n            :modelValue=\"modelValue\"\n            :nextDisabled=\"nextDisabled\"\n            :step=\"step\"\n            :stepControls=\"stepControls\"\n            :navigationDisabled=\"navigationDisabled\"\n\n            :focus=\"focusedStep\"\n          />\n        </slot>\n      </template>\n    </ol>\n    <div\n      class=\"va-stepper__step-content-wrapper\"\n      :class=\"{ 'va-stepper__step-content-wrapper--vertical': $props.vertical }\"\n    >\n      <template\n        v-for=\"(step, i) in $props.steps\"\n        :key=\"i\"\n      >\n        <div\n          class=\"va-stepper__step-content\"\n          v-if=\"$slots[`step-content-${i}`] && modelValue === i\"\n        >\n          <slot\n            :name=\"`step-content-${i}`\"\n            v-bind=\"getIterableSlotData(step, i)\"\n          />\n        </div>\n      </template>\n      <div class=\"va-stepper__controls\">\n        <va-stepper-controls\n          v-if=\"!controlsHidden\"\n          :modelValue=\"modelValue\"\n          :nextDisabled=\"nextDisabled\"\n          :steps=\"steps\"\n          :stepControls=\"stepControls\"\n          @finish=\"$emit('finish')\"\n        />\n        <slot\n          name=\"controls\"\n          v-bind=\"stepControls\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, ref, Ref, shallowRef, watch } from 'vue'\nimport { useColors, useStateful, useStatefulProps, useTranslation } from '../../composables'\nimport type { Step, StepControls } from './types'\nimport VaStepperControls from './VaStepperControls.vue'\nimport VaStepperStepButton from './VaStepperStepButton.vue'\n\nexport default defineComponent({\n  name: 'VaStepper',\n  components: { VaStepperControls, VaStepperStepButton },\n  props: {\n    ...useStatefulProps,\n    modelValue: { type: Number, default: 0 },\n    steps: {\n      type: Array as PropType<Step[]>,\n      default: () => [],\n      required: true,\n    },\n    color: { type: String, default: 'primary' },\n    vertical: { type: Boolean, default: false },\n    navigationDisabled: { type: Boolean, default: false },\n    controlsHidden: { type: Boolean, default: false },\n    nextDisabled: { type: Boolean, default: false },\n    finishButtonHidden: { type: Boolean, default: false },\n    ariaLabel: { type: String, default: '$t:progress' },\n  },\n  emits: ['update:modelValue', 'finish'],\n  setup (props, { emit }) {\n    const stepperNavigation = shallowRef<HTMLElement>()\n    const { valueComputed: modelValue }: { valueComputed: Ref<number> } = useStateful(props, emit, 'modelValue', { defaultValue: 0 })\n\n    const focusedStep = ref({ trigger: false, stepIndex: props.navigationDisabled ? -1 : props.modelValue })\n\n    const { getColor } = useColors()\n    const stepperColor = getColor(props.color)\n\n    const isNextStepDisabled = (index: number) => props.nextDisabled && index > modelValue.value\n\n    const setStep = (index: number) => {\n      if (props.steps[index].disabled) { return }\n      emit('update:modelValue', index)\n    }\n\n    const setFocus = (direction: 'prev' | 'next') => {\n      if (props.navigationDisabled) { return }\n      if (direction === 'next') {\n        setFocusNextStep(1)\n      } else {\n        setFocusPrevStep(1)\n      }\n    }\n    const setFocusNextStep = (idx: number) => {\n      const newValue = focusedStep.value.stepIndex + idx\n\n      if (isNextStepDisabled(newValue)) { return }\n\n      if (newValue < props.steps.length) {\n        if (props.steps[newValue].disabled) {\n          setFocusNextStep(idx + 1)\n          return\n        }\n        focusedStep.value.stepIndex = newValue\n        focusedStep.value.trigger = true\n      } else {\n        for (let availableIdx = 0; availableIdx < props.steps.length; availableIdx++) {\n          if (!props.steps[availableIdx].disabled) {\n            focusedStep.value.stepIndex = availableIdx\n            focusedStep.value.trigger = true\n            break\n          }\n        }\n      }\n    }\n    const setFocusPrevStep = (idx: number) => {\n      const newValue = focusedStep.value.stepIndex - idx\n      if (newValue >= 0) {\n        if (props.steps[newValue].disabled) {\n          setFocusPrevStep(idx + 1)\n          return\n        }\n        focusedStep.value.stepIndex = newValue\n        focusedStep.value.trigger = true\n      } else {\n        for (let availableIdx = props.steps.length - 1; availableIdx >= 0; availableIdx--) {\n          if (!props.steps[availableIdx].disabled && !(isNextStepDisabled(availableIdx))) {\n            focusedStep.value.stepIndex = availableIdx\n            focusedStep.value.trigger = true\n            break\n          }\n        }\n      }\n    }\n\n    const resetFocus = () => {\n      requestAnimationFrame(() => {\n        if (!stepperNavigation.value?.contains(document.activeElement)) {\n          focusedStep.value.stepIndex = props.modelValue\n          focusedStep.value.trigger = false\n        }\n      })\n    }\n    watch(() => props.modelValue, () => {\n      focusedStep.value.stepIndex = props.modelValue\n      focusedStep.value.trigger = false\n    })\n\n    const nextStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value + 1 + stepsToSkip\n\n      if (!props.steps[targetIndex]) { return }\n      if (props.steps[targetIndex].disabled) {\n        nextStep(stepsToSkip + 1)\n      }\n\n      setStep(targetIndex)\n    }\n\n    const prevStep = (stepsToSkip = 0) => {\n      const targetIndex = modelValue.value - 1 - stepsToSkip\n\n      if (!props.steps[targetIndex]) { return }\n      if (props.steps[targetIndex].disabled) {\n        prevStep(stepsToSkip + 1)\n      }\n\n      setStep(targetIndex)\n    }\n\n    const stepControls: StepControls = { setStep, nextStep, prevStep }\n    const getIterableSlotData = (step: Step, index: number) => ({\n      ...stepControls,\n      step,\n      focus: focusedStep,\n      isActive: props.modelValue === index,\n      isCompleted: props.modelValue > index,\n    })\n\n    const { tp } = useTranslation()\n\n    return {\n      stepperNavigation,\n      resetFocus,\n      focusedStep,\n      isNextStepDisabled,\n      stepperColor,\n      getColor,\n      stepControls,\n      getIterableSlotData,\n      onArrowKeyPress: (direction: 'prev' | 'next') => {\n        setFocus(direction)\n      },\n      onValueChange: () => {\n        focusedStep.value.stepIndex = props.modelValue\n        focusedStep.value.trigger = true\n      },\n      ariaAttributesComputed: computed(() => ({\n        role: 'group',\n        'aria-label': tp(props.ariaLabel),\n        'aria-orientation': props.vertical ? 'vertical' as const : 'horizontal' as const,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"variables\";\n\n.va-stepper {\n  display: flex;\n  flex-direction: column;\n\n  &--vertical {\n    flex-direction: row;\n  }\n\n  &__navigation {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n\n    &--vertical {\n      flex-direction: column;\n      align-items: flex-start;\n      flex-wrap: nowrap;\n    }\n  }\n\n  &__divider {\n    flex-grow: 1;\n    height: var(--va-stepper-divider-thickness);\n    width: var(--va-stepper-divider-length);\n    min-width: var(--va-stepper-divider-min-length);\n    margin: 0 var(--va-stepper-divider-spacing);\n    background: var(--va-stepper-divider-color);\n\n    &--vertical {\n      min-height: var(--va-stepper-divider-min-length);\n      height: var(--va-stepper-divider-length);\n      width: var(--va-stepper-divider-thickness);\n      min-width: var(--va-stepper-divider-thickness);\n      margin: var(--va-stepper-divider-spacing) 0;\n      margin-left: var(--va-stepper-divider-vertical-margin-left);\n    }\n  }\n\n  &__step-content-wrapper {\n    padding: var(--va-stepper-step-content-wrapper-padding);\n  }\n\n  &__step-content {\n    margin: var(--va-stepper-step-content-margin);\n  }\n\n  &__controls {\n    display: flex;\n    gap: var(--va-stepper-controls-gap);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_mergeProps","_createElementVNode","_normalizeClass","_withKeys","_Fragment","_renderList","_renderSlot","_normalizeProps","_createCommentVNode","_guardReactiveProps","_createVNode","_createBlock"],"mappings":"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"}