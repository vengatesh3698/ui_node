import { defineComponent, ref, computed, onMounted } from "vue";
import { V as VaFileUploadKey } from "../types.mjs";
import { V as VaButton } from "../../va-button/index.mjs";
import { V as VaProgressBar } from "../../va-progress-bar/index.mjs";
import { u as useStrictInject } from "../../../composables/useStrictInject.mjs";
import { u as useBem } from "../../../composables/useBem.mjs";
const INJECTION_ERROR_MESSAGE = "The VaFileUploadUndo component should be used in the context of VaFileUpload component";
const _sfc_main = defineComponent({
  name: "VaFileUploadUndo",
  components: {
    VaProgressBar,
    VaButton
  },
  props: {
    vertical: { type: Boolean, default: false }
  },
  emits: ["recover"],
  setup: (props) => {
    const progress = ref(100);
    const {
      undoDuration,
      undoButtonText,
      deletedFileMessage
    } = useStrictInject(VaFileUploadKey, INJECTION_ERROR_MESSAGE);
    const computedClasses = useBem("va-file-upload-undo", () => ({
      vertical: props.vertical
    }));
    const undoDurationStyle = computed(() => `${undoDuration.value ?? 0}ms`);
    onMounted(() => {
      const timer = setTimeout(() => {
        progress.value = 0;
        clearTimeout(timer);
      }, 0);
    });
    return {
      progress,
      undoDuration,
      undoButtonText,
      computedClasses,
      undoDurationStyle,
      deletedFileMessage
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=VaFileUploadUndo.vue_vue_type_script_lang.mjs.map
