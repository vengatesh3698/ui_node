import { _ as _sfc_main } from "./VaFileUploadSingleItem.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createBlock, withCtx, createVNode, createElementVNode, toDisplayString, createTextVNode, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../../plugin-vue_export-helper.mjs";
const VaFileUploadSingleItem_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = { class: "va-file-upload-single-item__name" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  const _component_va_list_item_section = resolveComponent("va-list-item-section");
  const _component_va_list_item = resolveComponent("va-list-item");
  return openBlock(), createBlock(_component_va_list_item, {
    disabled: _ctx.disabled,
    "aria-disabled": _ctx.disabled,
    class: "va-file-upload-single-item",
    tabindex: "-1"
  }, {
    default: withCtx(() => [
      createVNode(_component_va_list_item_section, { class: "va-file-upload-single-item__content" }, {
        default: withCtx(() => [
          createElementVNode("div", _hoisted_1, toDisplayString(_ctx.file && _ctx.file.name), 1),
          !_ctx.disabled ? (openBlock(), createBlock(_component_va_button, {
            key: 0,
            class: "va-file-upload-single-item__button",
            "aria-label": _ctx.tp(_ctx.$props.ariaRemoveFileLabel),
            size: "small",
            color: "danger",
            flat: "",
            onClick: _cache[0] || (_cache[0] = ($event) => _ctx.$emit("remove"))
          }, {
            default: withCtx(() => [
              createTextVNode(" Delete ")
            ]),
            _: 1
          }, 8, ["aria-label"])) : createCommentVNode("", true)
        ]),
        _: 1
      })
    ]),
    _: 1
  }, 8, ["disabled", "aria-disabled"]);
}
const _VaFileUploadSingleItem = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaFileUploadSingleItem as _
};
//# sourceMappingURL=VaFileUploadSingleItem.mjs.map
