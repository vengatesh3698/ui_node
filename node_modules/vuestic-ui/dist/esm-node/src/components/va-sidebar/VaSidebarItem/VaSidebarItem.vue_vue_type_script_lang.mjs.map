{"version":3,"file":"VaSidebarItem.vue_vue_type_script_lang.mjs","sources":["../../../../../../src/components/va-sidebar/VaSidebarItem/VaSidebarItem.vue"],"sourcesContent":["<template>\n  <component\n    ref=\"rootElement\"\n    class=\"va-sidebar__item va-sidebar-item\"\n    tabindex=\"0\"\n    :class=\"{ 'va-sidebar-item--active': $props.active }\"\n    :style=\"computedStyle\"\n    :is=\"tagComputed\"\n    v-bind=\"linkAttributesComputed\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  applyColors,\n  useElementRef,\n  useColors,\n  useKeyboardOnlyFocus,\n  useHover,\n  useRouterLink, useRouterLinkProps,\n  useTextColor,\n} from '../../../composables'\nimport { useSidebarItem } from '../hooks/useSidebar'\nimport { useComponentPresetProp } from '../../../composables/useComponentPreset'\n\nexport default defineComponent({\n  name: 'VaSidebarItem',\n\n  props: {\n    ...useRouterLinkProps,\n    ...useComponentPresetProp,\n    active: { type: Boolean, default: false },\n    textColor: { type: String, default: undefined },\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    hoverOpacity: { type: Number, default: 0.2 },\n    borderColor: { type: String, default: undefined },\n  },\n\n  setup (props) {\n    const rootElement = useElementRef()\n    const sidebar = useSidebarItem()\n\n    const { isHovered } = useHover(rootElement)\n    const { getColor, getHoverColor, getFocusColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const backgroundColorComputed = computed(() => {\n      if (props.active && !isHovered.value && !hasKeyboardFocus.value) {\n        return getColor(props.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        return getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      return '#ffffff00'\n    })\n\n    const textBackground = computed(() => applyColors(getColor(sidebar?.color), backgroundColorComputed.value))\n    const { textColorComputed } = useTextColor(textBackground)\n\n    const computedStyle = computed(() => {\n      const style: Record<string, string> = { color: textColorComputed.value }\n\n      if (isHovered.value || props.active || hasKeyboardFocus.value) {\n        style.backgroundColor = backgroundColorComputed.value\n      }\n\n      if (props.active) {\n        const mergedProps = { ...sidebar, ...props }\n        style.borderColor = getColor(mergedProps.borderColor || mergedProps.activeColor)\n      }\n\n      if (hasKeyboardFocus.value) {\n        style.backgroundColor = getFocusColor(getColor(props.hoverColor || props.activeColor))\n      }\n\n      if (isHovered.value) {\n        style.backgroundColor = getHoverColor(\n          getColor(props.hoverColor || props.activeColor), props.hoverOpacity,\n        )\n      }\n\n      return style\n    })\n\n    const { tagComputed, hrefComputed, linkAttributesComputed } = useRouterLink(props)\n\n    return {\n      rootElement,\n      computedStyle,\n      keyboardFocusListeners,\n      tagComputed,\n      hrefComputed,\n      isHovered,\n      backgroundColorComputed,\n      bg: getColor(sidebar?.color),\n      textBackground,\n      linkAttributesComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../variables\";\n@import \"../../../styles/resources\";\n\n.va-sidebar__item {\n  border-left: var(--va-sidebar-item-active-border-size) solid transparent;\n  padding-right: var(--va-sidebar-item-active-border-size);\n  display: inline-block;\n  width: 100%;\n  font-family: var(--va-font-family);\n  transition: var(--va-sidebar-item-transition);\n  box-sizing: border-box;\n  color: currentColor;\n}\n</style>\n"],"names":[],"mappings":";;;;;;;;;;AA8BA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EAEN,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,QAAQ,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IACxC,WAAW,EAAE,MAAM,QAAQ,SAAS,OAAU;AAAA,IAC9C,aAAa,EAAE,MAAM,QAAQ,SAAS,UAAU;AAAA,IAChD,YAAY,EAAE,MAAM,QAAQ,SAAS,OAAU;AAAA,IAC/C,cAAc,EAAE,MAAM,QAAQ,SAAS,IAAI;AAAA,IAC3C,aAAa,EAAE,MAAM,QAAQ,SAAS,OAAU;AAAA,EAClD;AAAA,EAEA,MAAO,OAAO;AACZ,UAAM,cAAc;AACpB,UAAM,UAAU;AAEhB,UAAM,EAAE,UAAA,IAAc,SAAS,WAAW;AAC1C,UAAM,EAAE,UAAU,eAAe,kBAAkB,UAAU;AAC7D,UAAM,EAAE,kBAAkB,uBAAuB,IAAI,qBAAqB;AAEpE,UAAA,0BAA0B,SAAS,MAAM;AAC7C,UAAI,MAAM,UAAU,CAAC,UAAU,SAAS,CAAC,iBAAiB,OAAO;AACxD,eAAA,SAAS,MAAM,WAAW;AAAA,MACnC;AAEA,UAAI,iBAAiB,OAAO;AAC1B,eAAO,cAAc,SAAS,MAAM,cAAc,MAAM,WAAW,CAAC;AAAA,MACtE;AAEO,aAAA;AAAA,IAAA,CACR;AAEK,UAAA,iBAAiB,SAAS,MAAM,YAAY,SAAS,mCAAS,KAAK,GAAG,wBAAwB,KAAK,CAAC;AAC1G,UAAM,EAAE,kBAAA,IAAsB,aAAa,cAAc;AAEnD,UAAA,gBAAgB,SAAS,MAAM;AACnC,YAAM,QAAgC,EAAE,OAAO,kBAAkB,MAAM;AAEvE,UAAI,UAAU,SAAS,MAAM,UAAU,iBAAiB,OAAO;AAC7D,cAAM,kBAAkB,wBAAwB;AAAA,MAClD;AAEA,UAAI,MAAM,QAAQ;AAChB,cAAM,cAAc,EAAE,GAAG,SAAS,GAAG,MAAM;AAC3C,cAAM,cAAc,SAAS,YAAY,eAAe,YAAY,WAAW;AAAA,MACjF;AAEA,UAAI,iBAAiB,OAAO;AAC1B,cAAM,kBAAkB,cAAc,SAAS,MAAM,cAAc,MAAM,WAAW,CAAC;AAAA,MACvF;AAEA,UAAI,UAAU,OAAO;AACnB,cAAM,kBAAkB;AAAA,UACtB,SAAS,MAAM,cAAc,MAAM,WAAW;AAAA,UAAG,MAAM;AAAA,QAAA;AAAA,MAE3D;AAEO,aAAA;AAAA,IAAA,CACR;AAED,UAAM,EAAE,aAAa,cAAc,uBAAuB,IAAI,cAAc,KAAK;AAE1E,WAAA;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,IAAI,SAAS,mCAAS,KAAK;AAAA,MAC3B;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;"}