{"version":3,"file":"VaSidebar.mjs","sources":["../../../../../src/components/va-sidebar/VaSidebar.vue"],"sourcesContent":["<template>\n  <aside\n    class=\"va-sidebar\"\n    :class=\"computedClass\"\n    :style=\"computedStyle\"\n    @mouseenter=\"updateHoverState(true)\"\n    @mouseleave=\"updateHoverState(false)\"\n  >\n    <div class=\"va-sidebar__menu\" :style=\"`width: ${computedWidth};`\">\n      <va-config :components=\"{ VaSidebarItem: vaSidebarItemProps }\">\n        <slot />\n      </va-config>\n    </div>\n  </aside>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, PropType } from 'vue'\n\nimport { VaConfig } from '../va-config'\nimport { getGradientBackground } from '../../services/color'\nimport { useColors, useTextColor, useBem } from '../../composables'\nimport { useSidebar } from './hooks/useSidebar'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nexport default defineComponent({\n  name: 'VaSidebar',\n  props: {\n    ...useComponentPresetProp,\n    activeColor: { type: String, default: 'primary' },\n    hoverColor: { type: String, default: undefined },\n    hoverOpacity: {\n      type: Number,\n      default: 0.2,\n      validator: (v: number) => v >= 0 && v <= 1,\n    },\n    borderColor: { type: String, default: undefined },\n    color: { type: String, default: 'background-element' },\n    textColor: { type: String },\n    gradient: { type: Boolean, default: false },\n    minimized: { type: Boolean, default: false },\n    hoverable: { type: Boolean, default: false },\n    position: {\n      type: String as PropType<'left' | 'right'>,\n      default: 'left',\n      validator: (v: string) => ['left', 'right'].includes(v),\n    },\n    width: { type: String, default: '16rem' },\n    minimizedWidth: { type: String, default: '4rem' },\n    modelValue: { type: Boolean, default: true },\n    animated: { type: Boolean, default: true },\n  },\n\n  components: { VaConfig },\n\n  setup (props) {\n    const { getColor } = useColors()\n    useSidebar(props)\n\n    const isHovered = ref(false)\n\n    const isMinimized = computed(() => props.minimized || (props.hoverable && !isHovered.value))\n\n    const computedWidth = computed(() => {\n      if (!props.modelValue) {\n        return 0\n      }\n\n      return isMinimized.value ? props.minimizedWidth : props.width\n    })\n\n    const { textColorComputed } = useTextColor()\n\n    const computedStyle = computed(() => {\n      const backgroundColor = getColor(props.color)\n\n      const color = textColorComputed.value\n\n      return {\n        color,\n        backgroundColor,\n        backgroundImage: props.gradient ? getGradientBackground(backgroundColor) : undefined,\n      }\n    })\n\n    const computedClass = useBem('va-sidebar', () => ({\n      minimized: isMinimized.value,\n      right: props.position === 'right',\n      animated: props.animated,\n    }))\n\n    const updateHoverState = (newHoverState: boolean) => {\n      isHovered.value = props.hoverable && newHoverState\n    }\n\n    return {\n      computedWidth,\n      computedClass,\n      computedStyle,\n      updateHoverState,\n      vaSidebarItemProps: computed(() => ({\n        textColor: props.textColor,\n        activeColor: props.activeColor,\n        hoverColor: props.hoverColor,\n        borderColor: props.borderColor,\n        hoverOpacity: props.hoverOpacity,\n      })),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-sidebar {\n  min-height: var(--va-sidebar-min-height);\n  height: var(--va-sidebar-height);\n  position: var(--va-sidebar-position);\n  top: var(--va-sidebar-top);\n  left: var(--va-sidebar-left);\n  z-index: var(--va-sidebar-z-index);\n  font-family: var(--va-font-family);\n  display: inline-flex;\n\n  &__menu {\n    display: flex;\n    flex-direction: column;\n    max-height: var(--va-sidebar-menu-max-height);\n    margin-bottom: var(--va-sidebar-menu-margin-bottom);\n    list-style: var(--va-sidebar-menu-list-style);\n    padding-left: var(--va-sidebar-menu-padding-left);\n    overflow-y: var(--va-sidebar-menu-overflow-y);\n    overflow-x: var(--va-sidebar-menu-overflow-x);\n\n    @include va-scroll(var(--va-primary));\n  }\n\n  &--animated {\n    transition: var(--va-sidebar-transition);\n\n    .va-sidebar__menu {\n      transition: var(--va-sidebar-transition);\n    }\n  }\n\n  &--minimized {\n    left: 0;\n\n    .va-sidebar__title {\n      display: none;\n    }\n  }\n\n  &--right {\n    left: auto;\n    right: 0;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_normalizeStyle","_createElementVNode"],"mappings":";;;;;+BACEA,iBAYQ,WAAA;AATA,SAAAC,UAAA,GAAAC,mBAAE,SAAa;AAAA,IACpB,sBAAU,CAAE,cAAA,KAAA,aAAA,CAAA;AAAA,IACZ,OAAUC,eAAA,KAAA,aAAA;AAAA,IAAA,cAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,iBAAA,IAAA;AAAA,IAEX,cAIM,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,iBAAA,KAAA;AAAA,EAAA,GAAA;AAAA,IAJ8BC,mBAAA,OAAA;AAAA,MAAA,OAAA;AAAA,MAClC,OAEYD,eAAA,UAAA,KAAA,gBAAA;AAAA,IAAA,GAAA;AAAA;QADF,YAAA,EAAA,eAAA,KAAA,mBAAA;AAAA,MAAA,GAAA;AAAA;;;;;;;;;"}