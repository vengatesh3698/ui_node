{"version":3,"file":"VaSelect.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-select/VaSelect.vue"],"sourcesContent":["<template>\n  <va-dropdown\n    ref=\"dropdown\"\n    v-model=\"showDropdownContentComputed\"\n    class=\"va-select va-select__dropdown va-select-dropdown\"\n    v-bind=\"dropdownPropsComputed\"\n  >\n    <template #anchor>\n      <va-input-wrapper\n        ref=\"input\"\n        class=\"va-select__anchor va-select-anchor__input\"\n        :class=\"inputWrapperClassComputed\"\n        :model-value=\"valueString\"\n        v-bind=\"inputWrapperPropsComputed\"\n        @focus=\"onInputFocus\"\n        @blur=\"onInputBlur\"\n        @click=\"focusAutocompleteInput\"\n      >\n        <template\n          v-for=\"(_, name) in $slots\"\n          :key=\"name\"\n          v-slot:[name]=\"slotScope\"\n        >\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n\n        <template #icon>\n          <va-icon\n            v-if=\"showClearIcon\"\n            role=\"button\"\n            :aria-label=\"tp($props.ariaClearLabel)\"\n            tabindex=\"0\"\n            v-bind=\"clearIconProps\"\n            @click.stop=\"reset\"\n            @keydown.enter.stop=\"reset\"\n            @keydown.space.stop=\"reset\"\n          />\n        </template>\n\n        <template #appendInner>\n          <va-icon\n            :color=\"toggleIconColor\"\n            :name=\"toggleIcon\"\n            @click.stop=\"toggleDropdown\"\n            class=\"va-select__toggle-icon\"\n          />\n        </template>\n\n        <template #default>\n          <va-select-content\n            v-bind=\"selectContentPropsComputed\"\n            @toggle-hidden=\"toggleHiddenOptionsState\"\n            @autocomplete-input=\"setAutocompleteValue\"\n            @focus-prev=\"focusPreviousOption\"\n            @focus-next=\"focusNextOption\"\n            @select-option=\"selectOrAddOption\"\n            @delete-last-selected=\"deleteLastSelected\"\n          >\n            <template\n              v-for=\"(_, name) in $slots\"\n              :key=\"name\"\n              v-slot:[name]=\"slotScope\"\n            >\n              <slot :name=\"name\" v-bind=\"slotScope\" />\n            </template>\n          </va-select-content>\n        </template>\n      </va-input-wrapper>\n    </template>\n\n    <va-dropdown-content\n      class=\"va-select-dropdown__content\"\n      :style=\"{ width: $props.width }\"\n    >\n      <va-input\n        v-if=\"showSearchInput\"\n        ref=\"searchBar\"\n        class=\"va-select-dropdown__content-search-input\"\n        v-model=\"searchInput\"\n        :aria-label=\"tp($props.ariaSearchLabel)\"\n        :tabindex=\"tabIndexComputed\"\n        :placeholder=\"tp($props.searchPlaceholderText)\"\n        bordered\n        @keydown.up.stop.prevent=\"focusPreviousOption\"\n        @keydown.left.stop.prevent=\"focusPreviousOption\"\n        @keydown.down.stop.prevent=\"focusNextOption\"\n        @keydown.right.stop.prevent=\"focusNextOption\"\n        @keydown.enter.prevent=\"selectOrAddOption\"\n        @focus=\"hoveredOption = null\"\n      />\n      <va-select-option-list\n        ref=\"optionList\"\n        class=\"va-select-dropdown__options-wrapper\"\n        v-model:hoveredOption=\"hoveredOption\"\n        :style=\"{ maxHeight: $props.maxHeight }\"\n        v-bind=\"optionsListPropsComputed\"\n        @select-option=\"selectHoveredOption\"\n        @no-previous-option-to-hover=\"focusSearchBar\"\n        @keydown.tab.stop.prevent=\"searchBar && searchBar.focus()\"\n        @keydown=\"onHintedSearch\"\n        @scroll-bottom=\"onScrollBottom\"\n        v-slot=\"slotData\"\n      >\n        <slot name=\"option\" v-bind=\"slotData || {}\" />\n      </va-select-option-list>\n    </va-dropdown-content>\n  </va-dropdown>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, shallowRef, computed, watch, nextTick, type PropType, type Ref } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport {\n  useComponentPresetProp,\n  useSelectableList, useSelectableListProps,\n  useValidation, useValidationProps, useValidationEmits, ValidationProps,\n  useFormFieldProps,\n  useLoadingProps,\n  useMaxSelections, useMaxSelectionsProps,\n  useClearableProps, useClearable, useClearableEmits,\n  useFocusDeep,\n  useTranslation,\n  useBem,\n  useThrottleProps,\n} from '../../composables'\n\nimport {\n  VaDropdown,\n  VaDropdownContent,\n  VaIcon,\n  VaInput,\n  VaInputWrapper,\n} from '../index'\nimport { VaSelectOptionList } from './components/VaSelectOptionList'\nimport { VaSelectContent } from './components/VaSelectContent'\n\nimport { useMaxVisibleOptions, useMaxVisibleOptionsProps } from './hooks/useMaxVisibleOptions'\nimport { useToggleIcon, useToggleIconProps } from './hooks/useToggleIcon'\nimport { useStringValue, useStringValueProps } from './hooks/useStringValue'\nimport { useAutocomplete, useAutocompleteProps } from './hooks/useAutocomplete'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\nimport { blurElement, focusElement } from '../../utils/focus'\nimport { unwrapEl } from '../../utils/unwrapEl'\nimport { isNilValue } from '../../utils/isNilValue'\nimport { warn } from '../../utils/console'\n\nimport type { SelectOption, Placement } from './types'\nimport type { DropdownOffsetProp } from '../va-dropdown/types'\n\nconst VaDropdownProps = extractComponentProps(VaDropdown,\n  ['keyboardNavigation', 'offset', 'stateful', 'keepAnchorWidth', 'closeOnContentClick', 'innerAnchorSelector', 'modelValue'],\n)\n\nexport default defineComponent({\n  name: 'VaSelect',\n\n  components: {\n    VaSelectContent,\n    VaSelectOptionList,\n    VaIcon,\n    VaDropdown,\n    VaDropdownContent,\n    VaInput,\n    VaInputWrapper,\n  },\n\n  emits: [\n    'update:modelValue',\n    'update-search',\n    'create-new',\n    'scroll-bottom',\n    ...useValidationEmits,\n    ...useClearableEmits,\n  ],\n\n  props: {\n    ...VaDropdownProps,\n    ...useComponentPresetProp,\n    ...useSelectableListProps,\n    ...useValidationProps as ValidationProps<SelectOption>,\n    ...useLoadingProps,\n    ...useMaxSelectionsProps,\n    ...useClearableProps,\n    ...useFormFieldProps,\n    ...useMaxVisibleOptionsProps,\n    ...useToggleIconProps,\n    ...useThrottleProps,\n    ...useStringValueProps,\n    ...useAutocompleteProps,\n\n    modelValue: {\n      type: [String, Number, Array, Object, Boolean] as PropType<SelectOption | SelectOption[]>,\n      default: '',\n    },\n\n    // Dropdown placement\n    placement: {\n      type: String as PropType<Placement>,\n      default: 'bottom',\n      validator: (placement: string) => ['top', 'bottom'].includes(placement),\n    },\n\n    allowCreate: {\n      type: [Boolean, String] as PropType<boolean | 'unique'>,\n      default: false,\n      validator: (mode: string | boolean) => [true, false, 'unique'].includes(mode),\n    },\n\n    color: { type: String, default: 'primary' },\n    multiple: { type: Boolean, default: false },\n    searchable: { type: Boolean, default: false },\n    width: { type: String, default: '100%' },\n    maxHeight: { type: String, default: '256px' },\n    noOptionsText: { type: String, default: '$t:noOptions' },\n    hideSelected: { type: Boolean, default: false },\n    tabindex: { type: [String, Number], default: 0 },\n    virtualScroller: { type: Boolean, default: false },\n    selectedTopShown: { type: Boolean, default: false },\n    highlightMatchedText: { type: Boolean, default: true },\n    minSearchChars: { type: Number, default: 0 },\n    autoSelectFirstOption: { type: Boolean, default: false },\n\n    // Input style\n    outline: { type: Boolean, default: false },\n    bordered: { type: Boolean, default: false },\n    label: { type: String, default: '' },\n    placeholder: { type: String, default: '' },\n    searchPlaceholderText: { type: String, default: '$t:search' },\n    requiredMark: { type: Boolean, default: false },\n\n    ariaLabel: { type: String, default: undefined },\n    ariaSearchLabel: { type: String, default: '$t:optionsFilter' },\n    ariaClearLabel: { type: String, default: '$t:reset' },\n  },\n\n  setup (props, { emit, slots }) {\n    const optionList = shallowRef<typeof VaSelectOptionList>()\n    const input = shallowRef<typeof VaInputWrapper>()\n    const searchBar = shallowRef<typeof VaInput>()\n\n    const isInputFocused = useFocusDeep(input as any)\n\n    const { getValue, getText, getTrackBy } = useSelectableList(props)\n\n    const onScrollBottom = () => emit('scroll-bottom')\n\n    const searchInput = ref('')\n    const showSearchInput = computed(() => props.searchable || (props.allowCreate && !props.autocomplete))\n\n    watch(searchInput, (value) => {\n      emit('update-search', value)\n      hoveredOption.value = null\n    })\n\n    const getOptionByValue = (value: SelectOption): SelectOption => {\n      // if value is an object, it should be selectable option itself\n      if (isNilValue(value) || typeof value === 'object') { return value }\n\n      const optionByValue = props.options.find((option) => value === getValue(option))\n\n      if (optionByValue === undefined) {\n        warn(`[VaSelect]: can not find option in options list (${JSON.stringify(props.options)}) by provided value (${JSON.stringify(value)})!`)\n\n        return value\n      }\n\n      return optionByValue\n    }\n\n    const {\n      toggleHiddenOptionsState,\n      isAllOptionsShown,\n      visibleSelectedOptions,\n      hiddenSelectedOptionsAmount,\n      allSelectedOptions,\n    } = useMaxVisibleOptions(props, getOptionByValue)\n\n    // select value\n    const valueComputed = computed<SelectOption | SelectOption[]>({\n      get () {\n        if (props.multiple) { return allSelectedOptions.value }\n\n        const value = getOptionByValue(props.modelValue)\n\n        if (Array.isArray(value)) {\n          warn('Model value should be a string, number, boolean or an object for a single Select.')\n\n          if (value.length) {\n            return value.at(-1)\n          }\n        }\n\n        return value\n      },\n\n      set (option: SelectOption | SelectOption[]) {\n        if (Array.isArray(option)) {\n          emit('update:modelValue', option.map(getValue))\n        } else {\n          emit('update:modelValue', getValue(option))\n        }\n      },\n    })\n\n    const valueString = useStringValue(props, visibleSelectedOptions, getText)\n\n    // icons\n    const {\n      canBeCleared,\n      clearIconProps,\n      onFocus,\n      onBlur,\n    } = useClearable(props, valueComputed)\n\n    const showClearIcon = computed(() => {\n      if (!canBeCleared.value) { return false }\n      if (props.multiple && Array.isArray(valueComputed.value)) { return !!valueComputed.value.length }\n      return true\n    })\n\n    // options\n    const filteredOptions = computed(() => {\n      if (!props.options) { return [] }\n\n      if (props.selectedTopShown) {\n        return props.options.slice().sort((a, b) => {\n          const isASelected = checkIsOptionSelected(a)\n          const isBSelected = checkIsOptionSelected(b)\n\n          if (isASelected && isBSelected) { return 0 }\n          if (isASelected && !isBSelected) { return -1 }\n\n          return 1\n        })\n      }\n\n      if (props.hideSelected) {\n        return props.options.filter((option) => !checkIsOptionSelected(option))\n      }\n\n      return props.options\n    })\n\n    const checkIsOptionSelected = (option: SelectOption) => {\n      if (isNilValue(valueComputed.value)) { return false }\n\n      if (Array.isArray(valueComputed.value)) {\n        return !isNilValue(valueComputed.value.find((valueItem) => compareOptions(valueItem, option)))\n      }\n\n      return compareOptions(valueComputed.value, option)\n    }\n\n    const compareOptions = (option1: SelectOption, option2: SelectOption) => {\n      const one = getValue(option1)\n      const two = getValue(option2)\n\n      // identity check works nice for strings and exact matches.\n      if (one === two) {\n        return true\n      }\n      if (typeof one === 'string' && typeof two === 'string') {\n        return one === two\n      }\n      if (one === null || two === null) {\n        return false\n      }\n      if (typeof one === 'object' && typeof two === 'object') {\n        return getTrackBy(one) === getTrackBy(two)\n      }\n\n      return false\n    }\n\n    const isValueComputedArray = (v: Ref<SelectOption | SelectOption[]>): v is Ref<SelectOption[]> => Array.isArray(v.value)\n\n    const selectOption = (option: SelectOption) => {\n      if (hoveredOption.value === null) {\n        hideAndFocus()\n        return\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = ''\n      }\n\n      if (props.multiple && isValueComputedArray(valueComputed)) {\n        const { exceedsMaxSelections, addOption } = useMaxSelections(valueComputed, ref(props.maxSelections))\n\n        const isSelected = checkIsOptionSelected(option)\n\n        if (isSelected) {\n          // Unselect\n          valueComputed.value = valueComputed.value.filter((optionSelected) => !compareOptions(option, optionSelected))\n        } else {\n          if (exceedsMaxSelections()) { return }\n          valueComputed.value = addOption(option)\n        }\n      } else {\n        valueComputed.value = typeof option !== 'object' ? option : { ...option }\n        hideAndFocus()\n      }\n\n      focusAutocompleteInput()\n    }\n\n    const addNewOption = () => {\n      // Do not emit if option already exist and allow create is `unique`\n      const hasAddedOption = props.options?.some((option: SelectOption) => [searchInput.value, autocompleteValue.value].includes(getText(option)))\n\n      const allowedToCreateCheck = !((props.allowCreate === 'unique' || props.autocomplete) && hasAddedOption)\n      if (allowedToCreateCheck) {\n        emit('create-new', searchInput.value || autocompleteValue.value)\n\n        searchInput.value = ''\n        autocompleteValue.value = ''\n      }\n    }\n\n    // Hovered options\n\n    const hoveredOption = ref<SelectOption | null>(null)\n\n    const selectHoveredOption = () => {\n      if (isNilValue(hoveredOption.value)) { return }\n\n      if (!showDropdownContent.value) {\n        // We can not select options if they are hidden\n        handleDropdownOpen()\n        return\n      }\n\n      selectOption(hoveredOption.value)\n    }\n\n    const selectOrAddOption = () => {\n      const allowedToCreate = !!props.allowCreate && (searchInput.value || autocompleteValue.value)\n\n      if (hoveredOption.value !== null) {\n        selectHoveredOption()\n      } else if (allowedToCreate) {\n        addNewOption()\n      }\n    }\n\n    const focusPreviousOption = () => optionList.value?.focusPreviousOption()\n\n    const focusNextOption = () => optionList.value?.focusNextOption()\n\n    // Dropdown content\n\n    const showDropdownContent = ref(false)\n\n    const showDropdownContentComputed = computed({\n      get: () => showDropdownContent.value,\n      set: (show: boolean) => {\n        show ? handleDropdownOpen() : handleDropdownClose()\n      },\n    })\n\n    const closeOnContentClick = computed(() => {\n      return !(props.multiple || props.searchable || props.allowCreate)\n    })\n\n    const handleDropdownOpen = () => {\n      if (props.disabled || props.readonly) { return }\n\n      showDropdownContent.value = true\n      scrollToSelected()\n      focusSearchOrOptions()\n    }\n\n    const handleDropdownClose = () => {\n      showDropdownContent.value = false\n      searchInput.value = ''\n      validate()\n    }\n    const hideAndFocus = () => {\n      handleDropdownClose()\n      isInputFocused.value = true\n    }\n\n    const focusSearchBar = () => {\n      searchBar.value?.focus()\n    }\n\n    const focusOptionList = () => {\n      optionList.value?.focus()\n      !props.modelValue && optionList.value?.focusFirstOption()\n    }\n\n    const focusSearchOrOptions = () => nextTick(() => {\n      if (showSearchInput.value) {\n        focusSearchBar()\n      } else {\n        focusOptionList()\n      }\n    })\n\n    const onInputFocus = () => {\n      isInputFocused.value = true\n      onFocus()\n    }\n\n    const onInputBlur = () => {\n      if (showDropdownContentComputed.value) { return }\n\n      onBlur()\n\n      isInputFocused.value\n        ? isInputFocused.value = false\n        : validate()\n    }\n\n    const tabIndexComputed = computed(() => props.disabled ? -1 : props.tabindex)\n    const inputWrapperTabIndexComputed = computed(() => props.disabled || props.autocomplete ? -1 : 0)\n\n    const scrollToSelected = () => {\n      const selected = valueComputed.value\n      const nothingSelected = typeof selected !== 'object' && Array.isArray(selected) && !selected.length\n\n      if (nothingSelected) { return }\n\n      const scrollTo = Array.isArray(selected) ? selected[selected.length - 1] : selected\n      hoveredOption.value = scrollTo\n      nextTick(() => optionList.value?.scrollToOption(scrollTo))\n    }\n\n    // Hinted search\n\n    let hintedSearchQuery = ''\n    let hintedSearchQueryTimeoutIndex!: ReturnType<typeof setTimeout>\n    const navigationKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', ' ']\n\n    // Hinted search - hover option if you typing it's value on select without search-bar\n    const onHintedSearch = (event: KeyboardEvent) => {\n      if (navigationKeys.some(key => key === event.key)) {\n        return\n      }\n\n      const isLetter: boolean = event.key.length === 1\n      const isDeleteKey: boolean = event.key === 'Backspace' || event.key === 'Delete'\n\n      clearTimeout(hintedSearchQueryTimeoutIndex)\n\n      if (isDeleteKey) {\n        // Remove last letter from query\n        hintedSearchQuery = hintedSearchQuery ? hintedSearchQuery.slice(0, -1) : ''\n      } else if (isLetter) {\n        // Add every new letter to the query\n        hintedSearchQuery += event.key\n      }\n\n      if (showSearchInput.value) {\n        searchInput.value = hintedSearchQuery\n        return\n      }\n\n      // Search for an option that matches the query\n      if (hintedSearchQuery) {\n        const appropriateOption = props.options.find(option => getText(option).toLowerCase().startsWith(hintedSearchQuery.toLowerCase()))\n        if (appropriateOption) {\n          hoveredOption.value = appropriateOption\n        }\n      }\n\n      hintedSearchQueryTimeoutIndex = setTimeout(() => { hintedSearchQuery = '' }, 1000)\n    }\n\n    const { tp, t } = useTranslation()\n\n    const filteredDropdownProps = filterComponentProps(VaDropdownProps)\n    const dropdownPropsComputed = computed(() => ({\n      ...filteredDropdownProps.value,\n      closeOnContentClick: closeOnContentClick.value,\n      stateful: false,\n      offset: [1, 0] as DropdownOffsetProp,\n      keepAnchorWidth: true,\n      keyboardNavigation: true,\n      innerAnchorSelector: '.va-input-wrapper__field',\n      'aria-label': props.ariaLabel || (props.modelValue ? `${t('selectedOption')}: ${props.modelValue}` : t('noSelectedOption')),\n    }))\n\n    const optionsListPropsComputed = computed(() => ({\n      ...pick(props, ['textBy', 'trackBy', 'groupBy', 'valueBy', 'disabledBy', 'color', 'virtualScroller', 'highlightMatchedText', 'minSearchChars', 'delay', 'selectedTopShown']),\n      autoSelectFirstOption: props.autoSelectFirstOption || props.autocomplete,\n      search: searchInput.value || autocompleteValue.value,\n      tabindex: tabIndexComputed.value,\n      selectedValue: valueComputed.value,\n      options: filteredOptions.value,\n      getSelectedState: checkIsOptionSelected,\n      noOptionsText: tp(props.noOptionsText),\n    }))\n\n    const { toggleIcon, toggleIconColor } = useToggleIcon(props, showDropdownContent)\n\n    // input wrapper\n    const isFocused = computed(() => isInputFocused.value || showDropdownContent.value)\n    const inputWrapperClassComputed = useBem('va-select-anchor', () => ({\n      nowrap: !!(props.maxVisibleOptions && !slots.content),\n    }))\n    const inputWrapperPropsComputed = computed(() => ({\n      ...pick(props, ['messages', 'requiredMark', 'bordered', 'outline', 'label', 'color', 'success', 'readonly', 'disabled', 'error', 'loading']),\n      error: computedError.value,\n      errorMessages: computedErrorMessages.value,\n      focused: isFocused.value,\n      tabindex: inputWrapperTabIndexComputed.value,\n    }))\n\n    // select content\n    const selectContentPropsComputed = computed(() => ({\n      ...pick(props, ['placeholder', 'autocomplete', 'multiple', 'disabled', 'readonly']),\n      tabindex: tabIndexComputed.value,\n      value: visibleSelectedOptions.value,\n      valueString: valueString.value,\n      hiddenSelectedOptionsAmount: hiddenSelectedOptionsAmount.value,\n      isAllOptionsShown: isAllOptionsShown.value,\n      focused: isInputFocused.value,\n      autocompleteInputValue: autocompleteValue.value,\n      getText,\n    }))\n\n    // autocomplete\n    const autocompleteValue = useAutocomplete(props, visibleSelectedOptions, showDropdownContent, getText)\n    const setAutocompleteValue = (v: string) => (autocompleteValue.value = v)\n\n    // public methods\n    const focus = () => {\n      if (props.disabled) { return }\n      focusElement(unwrapEl(input.value))\n    }\n\n    const blur = () => {\n      if (showDropdownContentComputed.value) {\n        showDropdownContentComputed.value = false\n      }\n\n      nextTick(() => {\n        if (props.disabled) { return }\n        blurElement(unwrapEl(input.value))\n      })\n    }\n\n    const reset = () => withoutValidation(() => {\n      if (props.multiple) {\n        valueComputed.value = Array.isArray(props.clearValue) ? props.clearValue : []\n      } else {\n        valueComputed.value = props.clearValue\n      }\n\n      searchInput.value = ''\n      emit('clear')\n      resetValidation()\n    })\n\n    const focusAutocompleteInput = (e?: Event) => {\n      if (props.autocomplete && !props.disabled && !props.readonly) {\n        e?.stopImmediatePropagation()\n\n        isInputFocused.value = true\n        showDropdownContent.value = true\n      }\n    }\n\n    const toggleDropdown = () => {\n      if (props.disabled || props.readonly) { return }\n\n      showDropdownContentComputed.value = !showDropdownContentComputed.value\n    }\n\n    const deleteLastSelected = () => {\n      if (!Array.isArray(valueComputed.value)) { return }\n\n      valueComputed.value = valueComputed.value.slice(0, -1)\n    }\n\n    const {\n      validate,\n      computedError,\n      computedErrorMessages,\n      withoutValidation,\n      resetValidation,\n    } = useValidation(props, emit, { reset, focus, value: valueComputed })\n\n    return {\n      input,\n      optionList,\n      searchBar,\n\n      reset,\n      focus,\n      blur,\n      toggleDropdown,\n      deleteLastSelected,\n\n      focusAutocompleteInput,\n\n      tp,\n      t,\n\n      onInputFocus,\n      onInputBlur,\n      focusOptionList,\n      focusSearchBar,\n      searchInput,\n      showSearchInput,\n      hoveredOption,\n      tabIndexComputed,\n      valueString,\n      showClearIcon,\n      toggleIcon,\n      selectOption,\n      selectOrAddOption,\n      selectHoveredOption,\n      focusPreviousOption,\n      focusNextOption,\n      showDropdownContentComputed,\n      handleDropdownOpen,\n      handleDropdownClose,\n      hideAndFocus,\n      toggleIconColor,\n      onHintedSearch,\n      onScrollBottom,\n      clearIconProps,\n      dropdownPropsComputed,\n      visibleSelectedOptions,\n      optionsListPropsComputed,\n      toggleHiddenOptionsState,\n      setAutocompleteValue,\n\n      inputWrapperPropsComputed,\n      inputWrapperClassComputed,\n      selectContentPropsComputed,\n\n      // for e2e tests\n      getOptionByValue,\n      compareOptions,\n      getText,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-select {\n  & .va-input-wrapper__text {\n    line-height: normal;\n    flex-wrap: wrap;\n  }\n}\n\n.va-select-anchor {\n  &__input {\n    cursor: var(--va-select-cursor);\n    flex: 1;\n  }\n\n  &--nowrap {\n    .va-input-wrapper__text {\n      flex-wrap: nowrap;\n    }\n  }\n}\n\n.va-select-dropdown {\n  &__content {\n    overflow: hidden;\n    border-bottom-right-radius: var(--va-select-dropdown-border-radius);\n    border-bottom-left-radius: var(--va-select-dropdown-border-radius);\n    border-top-right-radius: 0;\n    border-top-left-radius: 0;\n    box-shadow: var(--va-select-box-shadow);\n    padding: 0;\n  }\n\n  &__content-search-input {\n    min-width: auto;\n    width: 100%;\n  }\n\n  &__options-wrapper {\n    background: var(--va-select-dropdown-background);\n    overflow-y: auto;\n\n    @include va-scroll(var(--va-background-element));\n  }\n}\n</style>\n"],"names":[],"mappings":"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"}