import { _ as _sfc_main } from "./VaSkeleton.vue_vue_type_script_lang.mjs";
import { openBlock, createBlock, resolveDynamicComponent, normalizeClass, normalizeStyle, withCtx, renderSlot, createElementBlock, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaSkeleton_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = {
  key: 0,
  class: "va-skeleton__wave"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {
    class: normalizeClass(["va-skeleton", _ctx.classes]),
    role: "status",
    "aria-live": "polite",
    "aria-label": _ctx.tp(_ctx.$props.ariaLabel),
    "aria-atomic": "true",
    style: normalizeStyle(`--va-0-color-computed: ${String(_ctx.colorComputed)};--va-1-height-computed: ${String(_ctx.heightComputed)};--va-2-width-computed: ${String(_ctx.widthComputed)};--va-3-border-radius: ${String(_ctx.borderRadius)};--va-4-line-gap: ${String(_ctx.lineGap)};--va-5-last-line-width: ${String(_ctx.lastLineWidth)}`)
  }, {
    default: withCtx(() => [
      renderSlot(_ctx.$slots, "default"),
      _ctx.animation === "wave" ? (openBlock(), createElementBlock("div", _hoisted_1)) : createCommentVNode("", true)
    ]),
    _: 3
  }, 8, ["aria-label", "class", "style"]);
}
const _VaSkeleton = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaSkeleton as _
};
//# sourceMappingURL=VaSkeleton.mjs.map
