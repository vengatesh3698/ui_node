{"version":3,"file":"VaDatePicker.mjs","sources":["../../../../../src/components/va-date-picker/VaDatePicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-date-picker\" :class=\"classComputed\" :style=\"styleComputed\">\n    <va-date-picker-header\n      v-bind=\"headerProps\"\n      v-model:view=\"syncView\"\n      :textColor=\"textColorComputed\"\n    >\n      <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n        <slot :name=\"name\" v-bind=\"bind\" />\n      </template>\n    </va-date-picker-header>\n\n    <div class=\"va-date-picker__picker-wrapper\">\n      <va-day-picker\n        v-if=\"syncView.type === 'day'\"\n        ref=\"currentPicker\"\n        v-bind=\"dayPickerProps\"\n        :model-value=\"valueComputed\"\n        :view=\"syncView\"\n        :readonly=\"$props.disabled || isPickerReadonly('day')\"\n        @update:model-value=\"onDayModelValueUpdate\"\n        @hover:day=\"(value) => $emit('hover:day', value)\"\n        @click:day=\"(value) => $emit('click:day', value)\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-day-picker>\n\n      <va-month-picker\n        v-if=\"syncView.type === 'month'\"\n        ref=\"currentPicker\"\n        v-bind=\"monthPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('month')\"\n        @update:model-value=\"onMonthModelValueUpdate\"\n        @hover:month=\"(value) => $emit('hover:month', value)\"\n        @click:month=\"onMonthClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-month-picker>\n\n      <va-year-picker\n        v-if=\"syncView.type === 'year'\"\n        ref=\"currentPicker\"\n        v-bind=\"yearPickerProps\"\n        :view=\"syncView\"\n        :model-value=\"valueComputed\"\n        :readonly=\"$props.disabled || isPickerReadonly('year')\"\n        @hover:year=\"(value) => $emit('hover:year', value)\"\n        @update:model-value=\"onYearModelValueUpdate\"\n        @click:year=\"onYearClick\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"bind\">\n          <slot :name=\"name\" v-bind=\"bind\" />\n        </template>\n      </va-year-picker>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useElementBackground } from '../../composables/useElementBackground'\nimport { useTextColor } from '../../composables/useTextColor'\nimport { computed, defineComponent, nextTick, PropType, ref, watch } from 'vue'\n\nimport { filterComponentProps, extractComponentProps, extractComponentEmits } from '../../utils/component-options'\nimport { useColors, useStateful, useStatefulProps, useStatefulEmits } from '../../composables'\nimport { useView } from './hooks/view'\nimport { useComponentPresetProp } from '../../composables/useComponentPreset'\n\nimport { DatePickerModelValue, DatePickerType, DatePickerView } from './types'\n\nimport VaDayPicker from './components/VaDayPicker/VaDayPicker.vue'\nimport VaDatePickerHeader from './components/VaDatePickerHeader/VaDatePickerHeader.vue'\nimport VaMonthPicker from './components/VaMonthPicker/VaMonthPicker.vue'\nimport VaYearPicker from './components/VaYearPicker/VaYearPicker.vue'\n\nconst DEFAULT_MONTH_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\nconst DEFAULT_WEEKDAY_NAMES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA']\n\nexport default defineComponent({\n  name: 'VaDatePicker',\n\n  components: { VaDayPicker, VaDatePickerHeader, VaMonthPicker, VaYearPicker },\n\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    ...extractComponentProps(VaDatePickerHeader),\n    ...extractComponentProps(VaDayPicker),\n    ...extractComponentProps(VaMonthPicker),\n    ...extractComponentProps(VaYearPicker),\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, default: DEFAULT_MONTH_NAMES },\n    weekdayNames: { type: Array as PropType<string[]>, default: DEFAULT_WEEKDAY_NAMES },\n    view: { type: Object as PropType<DatePickerView> },\n    type: { type: String as PropType<DatePickerType>, default: 'day' },\n    readonly: { type: Boolean, default: false },\n    disabled: { type: Boolean, default: false },\n\n    // Colors\n    color: { type: String, default: undefined },\n    weekendsColor: { type: String, default: undefined },\n  },\n\n  emits: [\n    ...useStatefulEmits,\n    ...extractComponentEmits(VaDatePickerHeader),\n    ...extractComponentEmits(VaYearPicker),\n    ...extractComponentEmits(VaDayPicker),\n    ...extractComponentEmits(VaMonthPicker),\n  ],\n\n  setup (props, { emit }) {\n    const currentPicker = ref<typeof VaDayPicker | typeof VaMonthPicker | typeof VaYearPicker>()\n\n    const { valueComputed } = useStateful(props, emit)\n\n    const { syncView } = useView(props, emit, { type: props.type })\n\n    const classComputed = computed(() => ({\n      'va-date-picker_without-week-days': props.hideWeekDays,\n      'va-date-picker_disabled': props.disabled,\n    }))\n\n    const onDayModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      if (props.readonly) { return }\n\n      // Do not update model value if we just want to change view (We can change it for now, but later we can add here timepicker)\n      if (props.type === 'day') { valueComputed.value = modelValue }\n    }\n\n    const onMonthClick = (date: Date) => {\n      emit('click:month', date)\n      const year = date.getFullYear()\n      const month = date.getMonth()\n      if (props.type !== 'month') {\n        syncView.value = { type: 'day', year, month }\n      }\n    }\n\n    const onMonthModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'month') { valueComputed.value = modelValue }\n    }\n\n    const onYearClick = (date : Date) => {\n      emit('click:year', date)\n\n      const year = date.getFullYear()\n\n      if (props.type !== 'year') {\n        syncView.value = { type: 'month', year, month: syncView.value.month }\n      }\n    }\n\n    const onYearModelValueUpdate = (modelValue: DatePickerModelValue) => {\n      // Do not update model value if we just want to change view\n      if (props.type === 'year') { valueComputed.value = modelValue }\n    }\n\n    const { colorsToCSSVariable } = useColors()\n    const { background } = useElementBackground()\n    const { textColorComputed } = useTextColor(background)\n\n    const styleComputed = computed(() => ({\n      color: textColorComputed.value,\n      ...colorsToCSSVariable({\n        color: props.color,\n        'weekends-color': props.weekendsColor,\n      }, 'va-date-picker'),\n    }))\n\n    const focusCurrentPicker = () => currentPicker.value?.$el.focus()\n\n    watch(syncView, (newValue, prevValue) => {\n      // Don't focus new picker if user does not change type\n      if (newValue.type === prevValue.type) { return }\n\n      nextTick(focusCurrentPicker)\n    })\n\n    const isPickerReadonly = (pickerName: 'year' | 'month' | 'day') => {\n      return props.readonly && props.type === pickerName\n    }\n\n    return {\n      dayPickerProps: filterComponentProps(extractComponentProps(VaDayPicker)),\n      headerProps: filterComponentProps(extractComponentProps(VaDatePickerHeader)),\n      monthPickerProps: filterComponentProps(extractComponentProps(VaMonthPicker)),\n      yearPickerProps: filterComponentProps(extractComponentProps(VaYearPicker)),\n\n      syncView,\n\n      classComputed,\n      valueComputed,\n\n      onDayModelValueUpdate,\n\n      onMonthClick,\n      onMonthModelValueUpdate,\n\n      onYearClick,\n      onYearModelValueUpdate,\n\n      styleComputed,\n      currentPicker,\n      textColorComputed,\n      focusCurrentPicker,\n\n      isPickerReadonly,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n\n.va-date-picker {\n  --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n\n  width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6);\n  font-family: var(--va-font-family);\n  font-style: var(--va-date-picker-font-style);\n  font-weight: var(--va-date-picker-font-weight);\n  font-size: var(--va-date-picker-font-size);\n  line-height: var(--va-date-picker-line-height);\n\n  &__picker-wrapper {\n    height: var(--va-date-picker-content-height);\n  }\n\n  &_without-week-days {\n    --va-date-picker-content-height: calc(var(--va-date-picker-cell-size) * 6 + var(--va-date-picker-cell-gap) * 6);\n  }\n\n  &_mobile {\n    .va-day-picker,\n    .va-month-picker,\n    .va-year-picker {\n      height: 100%;\n    }\n  }\n\n  &_disabled {\n    opacity: 0.4;\n    position: relative;\n\n    &::before {\n      content: '';\n      position: absolute;\n      height: 100%;\n      width: 100%;\n      z-index: 100;\n    }\n  }\n}\n\n.va-date-picker-header {\n  padding-bottom: 0.25rem;\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_normalizeClass","_normalizeStyle","_createSlots","_createElementVNode","_createBlock","_mergeProps","_createCommentVNode"],"mappings":";;;;;;;;;oCACEA,iBA4DM,gBAAA;AA5DmD,SAAAC,UAAA,GAAAC,mBAAE,OAAa;AAAA,IAAA,OAAAC,eAAA,CAAA,kBAAA,KAAA,aAAA,CAAA;AAAA,IACtE,OAQwBC,eAAA,KAAA,aAAA;AAAA,EAAA,GAAA;AAAA,6DANR,KAAQ,aAAA;AAAA,MACrB,MAAW,KAAA;AAAA,MAAA,iBAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,WAAA;AAAA,MAEkB,WAAA,KAAA;AAAA,IAAA,CAAA,GAAAC,YAAA,EAAA,GAAA,EAAA,GAAA;AAAA,iBAA2B,KAAM,QAAA,CAAA,GAAA,SAAA;;;;;;;MAKjE,CAAA;AAAA,IAAA,CAAA,GAEU,eAAS,WAAI,CAAA;AAAA,IAAAC,mBAAA,OADrB,YAcgB;AAAA,MAAA,KAAA,SAAA,SAAA,SAAAL,UAAA,GAZKM,YAAA,0BAAAC,WAAA;AAAA,QACX,KAAA;AAAA,QACP,KAAA;AAAA,MAAA,GACA,KAAM,gBAAQ;AAAA,QACd,eAAU,KAAA;AAAA,QACV,MAAA,KAAA;AAAA,QACA,eAAS,OAAa,YAAA,KAAA,iBAAA,KAAA;AAAA,QACtB,uBAAS,KAAA;AAAA,QAAA,eAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,UAAA,KAAA,MAAA,aAAA,KAAA;AAAA,QAEoB,eAAA,OAAA,CAAM,MAAf,OAAI,CAAA,IAAA,CAAA,UAAA,KAAA,MAAA,aAAA,KAAA;AAAA,MAAA,CAAA,GAAAH,YAAA,EAAA,GAAA,EAAA,GAAA;AAAA,mBAAgC,KAAM,QAAA,CAAA,GAAA,SAAA;;;;;;;;MAMjD,CAAA,GAAA,MAAA,CAAC,eAAI,QAAA,YAAA,qBAAA,CAAA,KAAAI,mBADrB,IAckB,IAAA;AAAA,MAAA,KAAA,SAAA,SAAA,WAAAR,UAAA,GAZGM,YAAA,4BAAAC,WAAA;AAAA,QACX,KAAA;AAAA,QACP,KAAI;AAAA,MAAA,GACJ,KAAa,kBAAA;AAAA,QACb,MAAU,KAAA;AAAA,QACV,eAAA,KAAA;AAAA,QACA,eAAW,OAAa,YAAA,KAAA,iBAAA,OAAA;AAAA,QACxB,uBAAa,KAAA;AAAA,QAAA,iBAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,UAAA,KAAA,MAAA,eAAA,KAAA;AAAA,QAEgB,iBAAA,KAAA;AAAA,MAAA,CAAA,GAAAH,YAAA,EAAA,GAAA,EAAA,GAAA;AAAA,mBAA2B,KAAM,QAAA,CAAA,GAAA,SAAA;;;;;;;;MAMjD,CAAA,GAAA,MAAA,CAAC,QAAI,eAAA,YAAA,uBAAA,eAAA,CAAA,KAAAI,mBADrB,IAciB,IAAA;AAAA,MAAA,KAAA,SAAA,SAAA,UAAAR,UAAA,GAZIM,YAAA,2BAAAC,WAAA;AAAA,QACX,KAAA;AAAA,QACP,KAAI;AAAA,MAAA,GACJ,KAAa,iBAAA;AAAA,QACb,MAAU,KAAA;AAAA,QACV,eAAU,KAAA;AAAA,QACV,UAAA,KAAA,OAAkB,YAAE,KAAsB,iBAAA,MAAA;AAAA,QAC1C,gBAAY,OAAW,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,UAAA,KAAA,MAAA,cAAA,KAAA;AAAA,QAAA,uBAAA,KAAA;AAAA,QAEM,gBAAA,KAAA;AAAA,MAAA,CAAA,GAAAH,YAAA,EAAA,GAAA,EAAA,GAAA;AAAA,mBAA2B,KAAM,QAAA,CAAA,GAAA,SAAA;;;;;;;;;;;;;"}