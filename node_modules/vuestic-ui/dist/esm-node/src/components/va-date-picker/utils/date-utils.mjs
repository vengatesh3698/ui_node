import { i as isDate } from "../../../../vendor.mjs";
const isDatesDayEqual = (date1, date2) => (date1 == null ? void 0 : date1.toDateString()) === (date2 == null ? void 0 : date2.toDateString());
const isDatesYearEqual = (date1, date2) => {
  return (date1 == null ? void 0 : date1.getFullYear()) === (date2 == null ? void 0 : date2.getFullYear());
};
const isDatesMonthEqual = (date1, date2) => {
  return isDatesYearEqual(date1, date2) && (date1 == null ? void 0 : date1.getMonth()) === (date2 == null ? void 0 : date2.getMonth());
};
const createYearDate = (year) => {
  const date = /* @__PURE__ */ new Date();
  date.setFullYear(year);
  return date;
};
const isRange = (value) => {
  return typeof value === "object" && ("start" in value || "end" in value);
};
const isSingleDate = (value) => isDate(value);
const isDates = (value) => Array.isArray(value);
export {
  isSingleDate as a,
  isRange as b,
  createYearDate as c,
  isDatesMonthEqual as d,
  isDatesDayEqual as e,
  isDatesYearEqual as f,
  isDates as i
};
//# sourceMappingURL=date-utils.mjs.map
