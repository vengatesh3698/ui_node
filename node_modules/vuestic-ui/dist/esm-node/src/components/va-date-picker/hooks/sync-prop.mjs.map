{"version":3,"file":"sync-prop.mjs","sources":["../../../../../../src/components/va-date-picker/hooks/sync-prop.ts"],"sourcesContent":["import { ref, computed, Ref, UnwrapRef } from 'vue'\n\nexport function useSyncProp<T, PropName extends string> (propRef: Ref<T> | undefined, propName: PropName, emit: (event: any, newValue: T) => any, defaultValue?: T) {\n  if (defaultValue === undefined) {\n    return {\n      syncProp: computed({\n        set (value: T) {\n          emit(`update:${propName}`, value)\n        },\n        get (): T {\n          return propRef!.value\n        },\n      }),\n    }\n  }\n\n  const statefulValue = ref<T>(defaultValue)\n\n  return {\n    syncProp: computed<NonNullable<T>>({\n      set (value: NonNullable<T>) {\n        statefulValue.value = value as UnwrapRef<NonNullable<T>>\n        emit(`update:${propName}`, value)\n      },\n      get (): NonNullable<T> {\n        return (propRef?.value === undefined ? (statefulValue.value) : propRef.value) as NonNullable<T>\n      },\n    }),\n  }\n}\n"],"names":[],"mappings":";AAEO,SAAS,YAAyC,SAA6B,UAAoB,MAAwC,cAAkB;AAClK,MAAI,iBAAiB,QAAW;AACvB,WAAA;AAAA,MACL,UAAU,SAAS;AAAA,QACjB,IAAK,OAAU;AACR,eAAA,UAAU,YAAY,KAAK;AAAA,QAClC;AAAA,QACA,MAAU;AACR,iBAAO,QAAS;AAAA,QAClB;AAAA,MAAA,CACD;AAAA,IAAA;AAAA,EAEL;AAEM,QAAA,gBAAgB,IAAO,YAAY;AAElC,SAAA;AAAA,IACL,UAAU,SAAyB;AAAA,MACjC,IAAK,OAAuB;AAC1B,sBAAc,QAAQ;AACjB,aAAA,UAAU,YAAY,KAAK;AAAA,MAClC;AAAA,MACA,MAAuB;AACrB,gBAAQ,mCAAS,WAAU,SAAa,cAAc,QAAS,QAAQ;AAAA,MACzE;AAAA,IAAA,CACD;AAAA,EAAA;AAEL;"}