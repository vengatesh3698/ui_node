{"version":3,"file":"VaMonthPicker.mjs","sources":["../../../../../../../src/components/va-date-picker/components/VaMonthPicker/VaMonthPicker.vue"],"sourcesContent":["<template>\n  <div class=\"va-month-picker\" v-bind=\"containerAttributes\">\n    <div\n      v-for=\"(month, monthIndex) in months\"\n      :key=\"monthIndex\"\n      class=\"va-month-picker__month-wrapper\"\n      @mouseenter=\"hoveredIndex = monthIndex\"\n      @mouseleave=\"hoveredIndex = -1\"\n    >\n      <va-date-picker-cell\n        :in-range=\"!!isInRange(month)\"\n        :selected=\"!!isSelected(month)\"\n        :disabled=\"!!isDisabled(month)\"\n        :today=\"!!isToday(month)\"\n        :focused=\"hoveredIndex === monthIndex\"\n        :highlight-today=\"highlightToday\"\n        :readonly=\"$props.readonly\"\n        :color=\"color\"\n        @click=\"onClick(month); focusedCellIndex = monthIndex\"\n      >\n        <slot name=\"month\" v-bind=\"{ monthIndex, month: monthNames[monthIndex] }\">\n          {{ monthNames[monthIndex] }}\n        </slot>\n      </va-date-picker-cell>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType, toRefs, watch } from 'vue'\n\nimport { useGridKeyboardNavigation } from '../../hooks/grid-keyboard-navigation'\nimport { useDatePicker } from '../../hooks/use-picker'\n\nimport { DatePickerMode, DatePickerView, DatePickerModelValue } from '../../types'\n\nimport VaDatePickerCell from '../VaDatePickerCell.vue'\n\nexport default defineComponent({\n  name: 'VaMonthPicker',\n\n  components: { VaDatePickerCell },\n\n  props: {\n    modelValue: { type: [Date, Array, Object] as PropType<DatePickerModelValue> },\n    monthNames: { type: Array as PropType<string[]>, required: true },\n    view: { type: Object as PropType<DatePickerView>, default: () => ({ type: 'month' }) },\n    allowedMonths: { type: Function as PropType<(date: Date) => boolean>, default: undefined },\n    highlightToday: { type: Boolean, default: true },\n    mode: { type: String as PropType<DatePickerMode>, default: 'auto' },\n    readonly: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n  },\n\n  emits: ['update:modelValue', 'hover:month', 'click:month'],\n\n  setup (props, { emit }) {\n    const { view } = toRefs(props)\n\n    const months = computed(() => Array.from(Array(12).keys()).map((month) => new Date(view.value.year, month)))\n\n    const {\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n    } = useDatePicker('month', months, props, emit)\n\n    const isDisabled = (date: Date) => props.allowedMonths === undefined ? false : !props.allowedMonths(date)\n\n    const {\n      focusedCellIndex, containerAttributes,\n    } = useGridKeyboardNavigation({\n      rowSize: 3,\n      start: 0,\n      end: months.value.length,\n      onSelected: (selectedIndex) => onClick(months.value[selectedIndex]),\n    })\n\n    watch(focusedCellIndex, (index) => { hoveredIndex.value = index })\n    watch(hoveredIndex, (index) => { focusedCellIndex.value = index })\n\n    return {\n      months,\n      hoveredIndex,\n      onClick,\n      isToday,\n      isSelected,\n      isInRange,\n      isDisabled,\n      containerAttributes,\n      focusedCellIndex,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n.va-month-picker {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr); // 4 columns\n  grid-gap: var(--va-date-picker-cell-gap);\n  min-width: calc(var(--va-date-picker-cell-size) * 7 + var(--va-date-picker-cell-gap) * 6); // 7 days + gap\n  width: 100%;\n\n  &__month-wrapper {\n    border-radius: var(--va-date-picker-cell-radius);\n    text-align: center;\n    user-select: none;\n    overflow: hidden;\n  }\n}\n</style>\n"],"names":["_resolveComponent","_mergeProps","_openBlock","_createElementBlock","_Fragment","_renderList"],"mappings":";;;;;;yCACEA,iBAAW,qBAAA;yCACT,OAsBMC,WAAA,EAAA,OAAA,kBAAA,GAAA,KAAA,mBAAA,GAAA;AAAA,KAAAC,UApBE,IAAU,GAAAC,mBAAAC,UAAA,MAAAC,WAAA,KAAA,QAAA,CAAA,OAAA,eAAA;AACX,aAAAH,UAAA,GAAiCC,mBAAA,OAAA;AAAA,QACrC,KAAA;AAAA,QACA,OAAA;AAAA,QAAA,cAAA,CAAA,WAAA,KAAA,eAAA;AAAA,QAED,cAcsB,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,CAAA,WAAA,KAAA,eAAA;AAAA,MAAA,GAAA;AAAA,oBAZX,gCAAoB;AAAA,UAC5B,YAAY,iBAAW,KAAK;AAAA,UAC5B,UAAS,CAAa,CAAA,KAAA,WAAA,KAAA;AAAA,UACtB,UAAS,kBAAY,KAAK;AAAA,UAC1B,OAAiB,CAAA,CAAA,KAAA,QAAA,KAAA;AAAA,UACjB,SAAQ,KAAE,iBAAe;AAAA,UACzB,mBAAY,KAAA;AAAA,UACZ,UAAK,KAAE,OAAA;AAAA,UAAA,OAAA,KAAA;AAAA,UAID,SAAA,CAAA,WAAA;AAAA,iBAAA,QAAA,KAAA;AAAA,iBAAA,mBAAA;AAAA,UAAA;AAAA,QAAA,GAAA;AAAA;;;;;;;;;;;;"}