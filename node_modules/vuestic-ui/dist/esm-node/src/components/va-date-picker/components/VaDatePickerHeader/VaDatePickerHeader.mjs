import { _ as _sfc_main } from "./VaDatePickerHeader.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, normalizeStyle, renderSlot, normalizeProps, guardReactiveProps, createVNode, createElementVNode, withCtx, createTextVNode, toDisplayString, mergeProps, createCommentVNode } from "vue";
import { _ as _export_sfc } from "../../../../../plugin-vue_export-helper.mjs";
const VaDatePickerHeader_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = { class: "va-date-picker__header__text" };
const _hoisted_2 = { class: "va-date-picker__header__month" };
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_button = resolveComponent("va-button");
  return _ctx.syncView.type !== "year" ? (openBlock(), createElementBlock("div", {
    key: 0,
    class: "va-date-picker-header va-date-picker__header",
    style: normalizeStyle({ color: _ctx.textColor })
  }, [
    renderSlot(_ctx.$slots, "buttonPrev", normalizeProps(guardReactiveProps({ onClick: _ctx.prev })), () => [
      createVNode(_component_va_button, {
        disabled: _ctx.$props.disabled,
        icon: "va-arrow-left",
        preset: "plain",
        size: "small",
        color: _ctx.color,
        textColor: _ctx.textColor,
        "aria-label": _ctx.tp(_ctx.$props.ariaPreviousPeriodLabel),
        round: "",
        onClick: _ctx.prev
      }, null, 8, ["disabled", "color", "textColor", "aria-label", "onClick"])
    ]),
    createElementVNode("div", _hoisted_1, [
      renderSlot(_ctx.$slots, "header", normalizeProps(guardReactiveProps({ year: _ctx.syncView.year, month: _ctx.syncView.month, monthNames: _ctx.monthNames, view: _ctx.syncView, changeView: _ctx.changeView, switchView: _ctx.switchView })), () => [
        createVNode(_component_va_button, {
          disabled: _ctx.$props.disabled,
          preset: "plain",
          size: "small",
          color: _ctx.color,
          textColor: _ctx.textColor,
          "aria-label": _ctx.tp(_ctx.$props.ariaSwitchViewLabel),
          onClick: _ctx.switchView
        }, {
          default: withCtx(() => [
            renderSlot(_ctx.$slots, "year", normalizeProps(guardReactiveProps({ year: _ctx.syncView.year })), () => [
              createTextVNode(toDisplayString(_ctx.syncView.year), 1)
            ]),
            _ctx.syncView.type === "day" ? renderSlot(_ctx.$slots, "month", normalizeProps(mergeProps({ key: 0 }, { month: _ctx.syncView.month })), () => [
              createElementVNode("span", _hoisted_2, toDisplayString(_ctx.monthNames[_ctx.syncView.month]), 1)
            ]) : createCommentVNode("", true)
          ]),
          _: 3
        }, 8, ["disabled", "color", "textColor", "aria-label", "onClick"])
      ])
    ]),
    renderSlot(_ctx.$slots, "buttonNext", normalizeProps(guardReactiveProps({ onClick: _ctx.next })), () => [
      createVNode(_component_va_button, {
        disabled: _ctx.$props.disabled,
        icon: "va-arrow-right",
        preset: "plain",
        size: "small",
        color: _ctx.color,
        textColor: _ctx.textColor,
        "aria-label": _ctx.tp(_ctx.$props.ariaNextPeriodLabel),
        onClick: _ctx.next,
        round: ""
      }, null, 8, ["disabled", "color", "textColor", "aria-label", "onClick"])
    ])
  ], 4)) : createCommentVNode("", true);
}
const VaDatePickerHeader = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  VaDatePickerHeader as V
};
//# sourceMappingURL=VaDatePickerHeader.mjs.map
