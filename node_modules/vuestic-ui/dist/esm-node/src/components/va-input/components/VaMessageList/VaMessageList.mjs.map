{"version":3,"file":"VaMessageList.mjs","sources":["../../../../../../../src/components/va-input/components/VaMessageList/VaMessageList.vue"],"sourcesContent":["<template>\n  <div\n    v-if=\"messages.length\"\n    class=\"va-message-list\"\n    :style=\"computedStyle\"\n  >\n    <div\n      v-for=\"(message, index) in messages\"\n      :key=\"index\"\n      class=\"va-message-list__message\"\n    >\n      <va-icon\n        v-if=\"hasError\"\n        class=\"va-message-list__icon\"\n        name=\"va-warning\"\n        :size=\"16\"\n      />{{ message }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, PropType } from 'vue'\n\nimport { useColors } from '../../../../composables'\n\nimport { VaIcon } from '../../../va-icon'\n\nexport default defineComponent({\n  name: 'VaMessageList',\n\n  components: { VaIcon },\n\n  props: {\n    modelValue: {\n      type: [String, Array] as PropType<string | string[]>,\n      default: '',\n    },\n    limit: { type: Number, default: 1 },\n    color: { type: String },\n    hasError: { type: Boolean, default: false },\n  },\n\n  setup (props) {\n    const { getColor } = useColors()\n\n    return {\n      messages: computed<string[]>(() => {\n        if (!props.modelValue) { return [] }\n        if (!Array.isArray(props.modelValue)) { return [props.modelValue] }\n        return props.modelValue.slice(0, props.limit)\n      }),\n      computedStyle: computed(() => props.color ? { color: getColor(props.color) } : {}),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index.scss\";\n\n.va-message-list {\n  margin-top: var(--va-message-list-margin-top);\n  color: var(--va-message-list-color);\n\n  &__message {\n    display: flex;\n    vertical-align: var(--va-message-list-vertical-align);\n    font-size: var(--va-message-list-font-size);\n    line-height: var(--va-message-list-line-height);\n  }\n\n  &__icon {\n    margin-right: var(--va-message-list-icon-margin-right);\n  }\n}\n</style>\n"],"names":["_resolveComponent","_createElementBlock","_Fragment","_renderList","_openBlock","_createBlock"],"mappings":";;;;;6BAEmBA,iBAAM,SAAA;2CACE,GAAAC,mBAAA,OAAA;AAAA,IACtB,KAAK;AAAA,IAAA,OAAA;AAAA,0BAEN,KAWM,aAAA;AAAA,EAAA,GAAA;AAAA,eATE,IAAK,GAAAA,mBAAAC,UAAA,MAAAC,WAAA,KAAA,UAAA,CAAA,SAAA,UAAA;AACN,aAAAC,UAAA,GAA2BH,mBAAA,OAAA;AAAA,QAAA,KAAA;AAAA,QAGxB,OAAA;AAAA,MAAA,GAAA;AAAA,sCACuBI,YAAA,oBAAA;AAAA,UAC7B,KAAI;AAAA,UACH,OAAM;AAAA,UAAA,MAAA;AAAA;;;;;;;;"}