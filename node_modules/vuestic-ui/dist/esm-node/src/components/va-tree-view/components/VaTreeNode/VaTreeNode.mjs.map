{"version":3,"file":"VaTreeNode.mjs","sources":["../../../../../../../src/components/va-tree-view/components/VaTreeNode/VaTreeNode.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-tree-node\"\n    :class=\"treeNodeClassComputed\"\n    :role=\"roleComputed\"\n    :aria-expanded=\"isExpandedComputed\"\n    :aria-disabled=\"$props.node.disabled\"\n    :aria-checked=\"!!$props.node.checked\"\n    :tabindex=\"tabIndexComputed\"\n    @keydown.up.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.right.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.down.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.left.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.space.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n    @keydown.esc.stop.prevent=\"handleKeyboardNavigation($event, $props.node)\"\n  >\n    <div class=\"va-tree-node-root\">\n      <div class=\"va-tree-node-content\" :class=\"indentClassComputed\" @click=\"onNodeClick('node')\">\n        <div\n          v-if=\"$props.node.hasChildren\"\n          class=\"va-tree-node-content__item va-tree-node-content__item--leaf\"\n          @click.stop=\"onNodeClick('leaf')\"\n        >\n          <slot name=\"icon-toggle\" v-bind=\"$props.node\">\n            <va-icon\n              :name=\"isExpandedComputed ? 'keyboard_arrow_down' : 'keyboard_arrow_right'\"\n              size=\"20px\"\n            />\n          </slot>\n        </div>\n        <div\n          v-if=\"selectable\"\n          class=\"va-tree-node-content__item\"\n          @click.stop\n        >\n          <slot name=\"checkbox\" v-bind=\"$props.node\">\n            <va-checkbox\n              :model-value=\"$props.node.checked\"\n              :color=\"colorComputed\"\n              indeterminate\n              @update:model-value=\"(v) => toggleCheckbox($props.node, v)\"\n              class=\"va-tree-node__checkbox\"\n            />\n          </slot>\n        </div>\n        <div v-if=\"iconComputed\" class=\"va-tree-node-content__item\">\n          <slot name=\"icon\" v-bind=\"$props.node\">\n            <va-icon :name=\"iconComputed\" size=\"small\" />\n          </slot>\n        </div>\n        <div class=\"va-tree-node-content__body\" :class=\"cursorClassComputed\">\n          <slot name=\"content\" v-bind=\"$props.node\">{{ labelComputed }}</slot>\n        </div>\n      </div>\n    </div>\n    <div\n      v-show=\"$props.node.hasChildren\"\n      :aria-hidden=\"!$props.node.expanded\"\n      class=\"va-tree-node-children\"\n      :class=\"expandedClassComputed\"\n    >\n      <va-tree-node\n        v-for=\"childNode in $props.node.children\"\n        :key=\"getTrackBy(childNode)\"\n        :node=\"childNode\"\n      >\n        <template v-for=\"(_, name) in $slots\" :key=\"name\" v-slot:[name]=\"slotScope\">\n          <slot :name=\"name\" v-bind=\"slotScope\" />\n        </template>\n      </va-tree-node>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, PropType } from 'vue'\n\nimport { useBem, useStrictInject } from '../../../../composables'\n\nimport { VaIcon, VaCheckbox } from '../../../'\nimport { TreeViewKey, TreeNode } from '../../types'\n\nconst INJECTION_ERROR_MESSAGE = 'The VaTreeNode component should be used in the context of VaTreeView component'\n\nexport default defineComponent({\n  name: 'VaTreeNode',\n\n  props: {\n    node: {\n      type: Object as PropType<TreeNode>,\n      required: true,\n    },\n  },\n\n  components: { VaCheckbox, VaIcon },\n\n  setup: (props) => {\n    const {\n      iconBy,\n      selectable,\n      expandNodeBy,\n      colorComputed,\n      selectedNodeComputed,\n      getText,\n      getTrackBy,\n      toggleNode,\n      toggleCheckbox,\n      getNodeProperty,\n      handleKeyboardNavigation,\n    } = useStrictInject(TreeViewKey, INJECTION_ERROR_MESSAGE)\n\n    const labelComputed = computed(() => getText(props.node) || '')\n    const isExpandedComputed = computed(() => props.node.hasChildren ? !!props.node.expanded : undefined)\n    const iconComputed = computed(() => getNodeProperty(props.node, iconBy))\n    const roleComputed = computed(() => props.node.hasChildren ? 'group' : 'treeitem')\n\n    const treeNodeClassComputed = useBem('va-tree-node', () => ({\n      disabled: !!props.node.disabled,\n    }))\n\n    const expandedClassComputed = useBem('va-tree-node-children', () => ({\n      expanded: !!isExpandedComputed.value,\n    }))\n\n    const indentClassComputed = useBem('va-tree-node-content', () => ({\n      indent: props.node.hasChildren === false,\n    }))\n\n    const cursorClassComputed = useBem('va-tree-node-content', () => ({\n      clickable: (props.node.hasChildren === true && expandNodeBy === 'node'),\n    }))\n\n    const tabIndexComputed = computed(() => props.node.disabled ? -1 : 0)\n\n    const onNodeClick = (type: typeof expandNodeBy) => {\n      const nodeType = expandNodeBy === 'node' && type === 'leaf' ? 'node' : type\n\n      if (expandNodeBy === nodeType) {\n        toggleNode(props.node)\n      }\n\n      selectedNodeComputed.value = props.node\n    }\n\n    return {\n      selectable,\n      expandNodeBy,\n\n      getText,\n      getTrackBy,\n      toggleNode,\n      onNodeClick,\n      handleKeyboardNavigation,\n      toggleCheckbox,\n\n      roleComputed,\n      iconComputed,\n      labelComputed,\n      colorComputed,\n      tabIndexComputed,\n      indentClassComputed,\n      isExpandedComputed,\n      expandedClassComputed,\n      treeNodeClassComputed,\n      cursorClassComputed,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources/index\";\n@import 'variables';\n\n.va-tree-node {\n  &-root {\n    display: flex;\n    padding: var(--va-tree-node-padding);\n    position: relative;\n\n    &::before {\n      content: \"\";\n      background-color: var(--va-primary);\n      border-radius: var(--va-tree-node-border-radius);\n      bottom: 0;\n      left: 0;\n      opacity: 0;\n      pointer-events: none;\n      position: absolute;\n      right: 0;\n      top: 0;\n    }\n\n    &:hover::before {\n      opacity: var(--va-tree-node-interactive-bg-opacity);\n    }\n  }\n\n  &-content {\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n    width: 100%;\n\n    &__item {\n      flex: var(--va-tree-node-content-item-flex);\n      min-width: var(--va-tree-node-indent);\n      line-height: 1;\n\n      &--leaf {\n        cursor: pointer;\n      }\n    }\n\n    &__body {\n      flex: var(--va-tree-node-content-body-item-flex);\n      width: 100%;\n    }\n\n    &--indent {\n      margin-left: var(--va-tree-node-indent);\n    }\n\n    &--clickable {\n      cursor: pointer;\n    }\n  }\n\n  &-children {\n    display: none;\n    background: var(--va-tree-node-children-background);\n    padding-left: var(--va-tree-node-indent);\n    width: 100%;\n\n    &--expanded {\n      display: block;\n    }\n  }\n\n  &__checkbox {\n    --va-checkbox-input-padding: 0;\n  }\n\n  &--disabled {\n    @include va-disabled;\n\n    .va-tree-node-content__item--leaf {\n      cursor: pointer;\n      pointer-events: all;\n    }\n  }\n\n  &:focus-visible > .va-tree-node-root {\n    @include focus-outline;\n\n    &::before {\n      opacity: var(--va-tree-node-interactive-bg-opacity);\n    }\n  }\n}\n</style>\n"],"names":["_resolveComponent","_openBlock","_createElementBlock","_withKeys","_withModifiers","_createElementVNode","_normalizeClass","_normalizeProps","_guardReactiveProps","_createVNode","_createCommentVNode","_renderSlot","_Fragment","_renderList","_createBlock"],"mappings":"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"}