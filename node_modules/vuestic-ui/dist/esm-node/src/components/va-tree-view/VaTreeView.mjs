import { _ as _sfc_main } from "./VaTreeView.vue_vue_type_script_lang.mjs";
import { resolveComponent, openBlock, createElementBlock, renderSlot, createTextVNode, Fragment, renderList, createBlock, createSlots, withCtx, normalizeProps, guardReactiveProps } from "vue";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
const VaTreeView_vue_vue_type_style_index_0_lang = "";
const _hoisted_1 = {
  class: "va-tree-view",
  role: "tree"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_tree_node = resolveComponent("va-tree-node");
  return openBlock(), createElementBlock("div", _hoisted_1, [
    _ctx.$props.filter && !_ctx.treeItems.length ? renderSlot(_ctx.$slots, "not-found", { key: 0 }, () => [
      createTextVNode("No matching nodes found")
    ]) : (openBlock(true), createElementBlock(Fragment, { key: 1 }, renderList(_ctx.treeItems, (nodeItem) => {
      return openBlock(), createBlock(_component_va_tree_node, {
        key: _ctx.getTrackBy(nodeItem),
        node: nodeItem
      }, createSlots({ _: 2 }, [
        renderList(_ctx.$slots, (_, name) => {
          return {
            name,
            fn: withCtx((slotScope) => [
              renderSlot(_ctx.$slots, name, normalizeProps(guardReactiveProps(slotScope)))
            ])
          };
        })
      ]), 1032, ["node"]);
    }), 128))
  ]);
}
const _VaTreeView = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export {
  _VaTreeView as _
};
//# sourceMappingURL=VaTreeView.mjs.map
