{"version":3,"file":"VaButtonDropdown.mjs","sources":["../../../../../src/components/va-button-dropdown/VaButtonDropdown.vue"],"sourcesContent":["<template>\n  <div class=\"va-button-dropdown\" :class=\"computedClass\">\n    <va-dropdown\n      v-if=\"!$props.split\"\n      v-bind=\"vaDropdownProps\"\n      v-model=\"valueComputed\"\n      :disabled=\"$props.disabled || $props.disableDropdown\"\n    >\n      <template #anchor>\n        <va-button\n          :aria-label=\"tp($props.ariaLabel)\"\n          v-bind=\"{ ...computedButtonIcons, ...buttonPropsComputed }\"\n          v-on=\"listeners\"\n          @keydown.esc.prevent=\"hideDropdown\"\n        >\n          <slot name=\"label\">\n            {{ label }}\n          </slot>\n        </va-button>\n      </template>\n\n      <slot name=\"content\">\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </slot>\n    </va-dropdown>\n\n    <va-button-group\n      v-else\n      v-bind=\"buttonPropsComputed\"\n    >\n      <va-button\n        v-if=\"!$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"computedMainButtonProps\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n\n      <va-dropdown\n        v-model=\"valueComputed\"\n        v-bind=\"vaDropdownProps\"\n        :disabled=\"$props.disabled || $props.disableDropdown\"\n        :teleport=\"$el\"\n      >\n        <template #anchor>\n          <va-button\n            :aria-label=\"$props.ariaLabel || t('toggleDropdown')\"\n            :disabled=\"$props.disabled || $props.disableDropdown\"\n            :icon=\"computedIcon\"\n            :icon-color=\"$props.iconColor\"\n            v-on=\"listeners\"\n            @keydown.esc.prevent=\"hideDropdown\"\n          />\n        </template>\n        <va-dropdown-content>\n          <slot />\n        </va-dropdown-content>\n      </va-dropdown>\n\n      <va-button\n        v-if=\"$props.leftIcon\"\n        :disabled=\"$props.disabled || $props.disableButton\"\n        v-bind=\"computedMainButtonProps\"\n        v-on=\"mainButtonListeners\"\n      >\n        <slot name=\"label\">\n          {{ label }}\n        </slot>\n      </va-button>\n    </va-button-group>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, ref } from 'vue'\nimport omit from 'lodash/omit.js'\n\nimport { extractComponentProps, filterComponentProps } from '../../utils/component-options'\n\nimport {\n  useBem,\n  useComponentPresetProp,\n  useStateful, useStatefulProps,\n  useEmitProxy,\n  usePlacementAliasesProps,\n  useTranslation,\n} from '../../composables'\n\nimport { VaButton } from '../va-button'\nimport { VaButtonGroup } from '../va-button-group'\nimport { VaDropdown, VaDropdownContent } from '../va-dropdown'\n\nconst { createEmits, createVOnListeners: createListeners } = useEmitProxy(['click'])\nconst { createEmits: createMainButtonEmits, createVOnListeners: createMainButtonListeners } = useEmitProxy(\n  [{ listen: 'click', emit: 'main-button-click' }],\n)\n\nconst VaButtonProps = omit(extractComponentProps(VaButton), ['iconRight', 'block'])\nconst VaDropdownProps = extractComponentProps(VaDropdown)\n\nexport default defineComponent({\n  name: 'VaButtonDropdown',\n  components: {\n    VaButton,\n    VaDropdown,\n    VaButtonGroup,\n    VaDropdownContent,\n  },\n  emits: ['update:modelValue', ...createEmits(), ...createMainButtonEmits()],\n  props: {\n    ...useComponentPresetProp,\n    ...VaButtonProps,\n    ...VaDropdownProps,\n    ...useStatefulProps,\n    ...usePlacementAliasesProps,\n    modelValue: { type: Boolean, default: false },\n    stateful: { type: Boolean, default: true },\n\n    icon: { type: String, default: 'va-arrow-down' },\n    openedIcon: { type: String, default: 'va-arrow-up' },\n    hideIcon: { type: Boolean, default: false },\n    leftIcon: { type: Boolean, default: false },\n    iconColor: { type: String, default: '' },\n\n    disabled: { type: Boolean, default: false },\n    disableButton: { type: Boolean, default: false },\n    disableDropdown: { type: Boolean, default: false },\n\n    offset: { type: [Number, Array] as PropType<number | [number, number]>, default: 2 },\n    keepAnchorWidth: { type: Boolean, default: false },\n    closeOnContentClick: { type: Boolean, default: true },\n\n    split: { type: Boolean },\n    splitTo: { type: String, default: '' },\n    splitHref: { type: String, default: '' },\n\n    loading: { type: Boolean, default: false },\n    label: { type: String },\n\n    ariaLabel: { type: String, default: '$t:toggleDropdown' },\n  },\n\n  setup (props, { emit, slots }) {\n    const { valueComputed } = useStateful(props, emit)\n\n    const computedIcon = computed(() => valueComputed.value ? props.openedIcon : props.icon)\n\n    const computedClass = useBem('va-button-dropdown', () => ({\n      split: props.split,\n    }))\n\n    const computedButtonIcons = computed(() => {\n      if (props.hideIcon) { return {} }\n\n      const propName = (props.label || slots.label) && !props.leftIcon ? 'icon-right' : 'icon'\n      return { [propName]: computedIcon.value }\n    })\n\n    const buttonPropsFiltered = computed(() => {\n      let ignoredProps = ['to', 'href', 'loading', 'icon']\n      const presetProps = [\n        'plain',\n        'textOpacity', 'backgroundOpacity',\n        'hoverOpacity', 'hoverBehavior', 'hoverOpacity',\n        'pressedOpacity', 'pressedBehavior', 'pressedOpacity',\n      ]\n\n      if (props.preset) {\n        ignoredProps = [...ignoredProps, ...presetProps]\n      }\n\n      const filteredProps = omit(VaButtonProps, ignoredProps)\n      return Object.keys(filteredProps)\n    })\n    const buttonPropsComputed = computed(\n      () => Object.entries(props)\n        .filter(([key, _]) => buttonPropsFiltered.value.includes(key))\n        .reduce((acc, [key, value]) => {\n          Object.assign(acc, { [key]: value })\n          return acc\n        }, {}),\n    )\n\n    const computedMainButtonProps = computed(() => ({\n      to: props.splitTo,\n      href: props.splitHref,\n      loading: props.loading,\n    }))\n\n    const hideDropdown = () => { valueComputed.value = false }\n\n    return {\n      ...useTranslation(),\n      vaDropdownProps: filterComponentProps(VaDropdownProps),\n      hideDropdown,\n      valueComputed,\n      computedIcon,\n      computedClass,\n      computedButtonIcons,\n      buttonPropsComputed,\n      computedMainButtonProps,\n      listeners: createListeners(emit),\n      mainButtonListeners: createMainButtonListeners(emit),\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import 'variables';\n@import '../../styles/resources';\n\n.va-button-dropdown {\n  display: inline-block;\n  font-family: var(--va-font-family);\n  vertical-align: middle;\n\n  .va-button {\n    margin: var(--va-button-dropdown-button-margin);\n  }\n\n  &--split {\n    .va-button {\n      @include keyboard-focus-outline($offset: -2px);\n    }\n  }\n}\n</style>\n"],"names":["_resolveComponent","_normalizeClass","_withCtx","_createVNode","_mergeProps","_toHandlers","_withKeys","_withModifiers","_renderSlot","_openBlock","_createBlock","_normalizeProps"],"mappings":"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"}