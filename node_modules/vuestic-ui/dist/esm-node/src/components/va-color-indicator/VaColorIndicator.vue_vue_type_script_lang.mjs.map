{"version":3,"file":"VaColorIndicator.vue_vue_type_script_lang.mjs","sources":["../../../../../src/components/va-color-indicator/VaColorIndicator.vue"],"sourcesContent":["<template>\n  <div\n    class=\"va-color-indicator\"\n    :class=\"computedClass\"\n    :style=\"typeof computedStyle === 'object' ? (Array.isArray(computedStyle) ? [...computedStyle, `--va-0-border-radius-computed: ${String(borderRadiusComputed)}`] : { ...computedStyle, '--va-0-border-radius-computed': String(borderRadiusComputed) }) : computedStyle + `;--va-0-border-radius-computed: ${String(borderRadiusComputed)}`\"\n    @click=\"toggleModelValue\"\n    @keydown.enter=\"toggleModelValue\"\n    @keydown.space=\"toggleModelValue\"\n    v-on=\"keyboardFocusListeners\"\n  >\n    <div\n      class=\"va-color-indicator__core\"\n      :style=\"computedStyle\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\n\nimport {\n  useColors,\n  useStateful,\n  useStatefulProps,\n  useStatefulEmits,\n  useKeyboardOnlyFocus,\n  useComponentPresetProp,\n} from '../../composables'\n\nexport default defineComponent({\n  name: 'VaColorIndicator',\n  emits: [...useStatefulEmits],\n  props: {\n    ...useStatefulProps,\n    ...useComponentPresetProp,\n    modelValue: { type: Boolean, default: null },\n    color: { type: String, default: '' },\n    square: { type: Boolean, default: false },\n    size: { type: String, default: '1rem' },\n  },\n  setup (props, { emit }) {\n    const { valueComputed } = useStateful(props, emit)\n    const { getColor } = useColors()\n    const { hasKeyboardFocus, keyboardFocusListeners } = useKeyboardOnlyFocus()\n\n    const colorComputed = computed(() => getColor(props.color))\n    const borderRadiusComputed = computed(() => props.square ? '0px' : '50%')\n\n    const computedStyle = computed(() => ({\n      backgroundColor: colorComputed.value,\n      height: props.size,\n      width: props.size,\n    }))\n\n    const computedClass = computed(() => ({\n      'va-color-indicator--selected': valueComputed.value,\n      'va-color-indicator--on-keyboard-focus': hasKeyboardFocus.value,\n    }))\n\n    const toggleModelValue = () => { valueComputed.value = !valueComputed.value }\n\n    return {\n      valueComputed,\n      computedStyle,\n      computedClass,\n      borderRadiusComputed,\n      keyboardFocusListeners,\n      toggleModelValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n\n.va-color-indicator {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: var(--va-0-border-radius-computed);\n  text-align: center;\n  background-color: var(--va-background-element);\n  border: 0.125rem solid var(--va-background-border);\n  box-sizing: content-box;\n\n  &__core {\n    border-radius: var(--va-0-border-radius-computed);\n    height: 1rem;\n    width: 1rem;\n  }\n\n  &--selected {\n    background-color: var(--va-primary);\n    border-color: var(--va-primary);\n  }\n\n  &--on-keyboard-focus {\n    @include focus-outline(var(--va-0-border-radius-computed));\n  }\n}\n</style>\n"],"names":[],"mappings":";;;;;AA6BA,MAAA,YAAe,gBAAgB;AAAA,EAC7B,MAAM;AAAA,EACN,OAAO,CAAC,GAAG,gBAAgB;AAAA,EAC3B,OAAO;AAAA,IACL,GAAG;AAAA,IACH,GAAG;AAAA,IACH,YAAY,EAAE,MAAM,SAAS,SAAS,KAAK;AAAA,IAC3C,OAAO,EAAE,MAAM,QAAQ,SAAS,GAAG;AAAA,IACnC,QAAQ,EAAE,MAAM,SAAS,SAAS,MAAM;AAAA,IACxC,MAAM,EAAE,MAAM,QAAQ,SAAS,OAAO;AAAA,EACxC;AAAA,EACA,MAAO,OAAO,EAAE,QAAQ;AACtB,UAAM,EAAE,cAAkB,IAAA,YAAY,OAAO,IAAI;AAC3C,UAAA,EAAE,aAAa;AACrB,UAAM,EAAE,kBAAkB,uBAAuB,IAAI,qBAAqB;AAE1E,UAAM,gBAAgB,SAAS,MAAM,SAAS,MAAM,KAAK,CAAC;AAC1D,UAAM,uBAAuB,SAAS,MAAM,MAAM,SAAS,QAAQ,KAAK;AAElE,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,iBAAiB,cAAc;AAAA,MAC/B,QAAQ,MAAM;AAAA,MACd,OAAO,MAAM;AAAA,IACb,EAAA;AAEI,UAAA,gBAAgB,SAAS,OAAO;AAAA,MACpC,gCAAgC,cAAc;AAAA,MAC9C,yCAAyC,iBAAiB;AAAA,IAC1D,EAAA;AAEF,UAAM,mBAAmB,MAAM;AAAgB,oBAAA,QAAQ,CAAC,cAAc;AAAA,IAAA;AAE/D,WAAA;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,EAEJ;AACF,CAAC;"}