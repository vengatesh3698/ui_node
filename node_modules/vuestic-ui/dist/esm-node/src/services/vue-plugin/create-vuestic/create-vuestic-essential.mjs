import { d as defineVuesticPlugin } from "../utils/define-vuestic-plugin.mjs";
import { s as setCurrentApp } from "../../current-app.mjs";
import { G as GlobalConfigPlugin } from "../../global-config/plugin/index.mjs";
import { C as CachePlugin } from "../../cache/plugin/index.mjs";
import { C as ColorConfigPlugin } from "../../color/plugin/index.mjs";
import { u as usePlugin } from "../utils/use-plugin.mjs";
const ESSENTIAL_PLUGIN_NAMES = ["GlobalConfigPlugin", "ColorConfigPlugin"];
const createVuesticEssential = defineVuesticPlugin((options = {}) => ({
  install(app) {
    const { config, components, plugins } = options;
    setCurrentApp(app);
    usePlugin(app, (plugins == null ? void 0 : plugins.GlobalConfigPlugin) || GlobalConfigPlugin, config);
    usePlugin(app, (plugins == null ? void 0 : plugins.CachePlugin) || CachePlugin);
    usePlugin(app, (plugins == null ? void 0 : plugins.ColorConfigPlugin) || ColorConfigPlugin, config);
    if (plugins) {
      Object.entries(plugins).forEach(([name, plugin]) => {
        if (ESSENTIAL_PLUGIN_NAMES.includes(name)) {
          return;
        }
        usePlugin(app, plugin);
      });
    }
    if (components) {
      Object.entries(components).forEach(([name, component]) => {
        app.component(name, component);
      });
    }
    setCurrentApp(null);
  }
}));
export {
  createVuesticEssential as c
};
//# sourceMappingURL=create-vuestic-essential.mjs.map
